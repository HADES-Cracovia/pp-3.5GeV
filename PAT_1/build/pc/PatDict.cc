//
// File generated by /cvmfs/hades.gsi.de/install/root-5.34.34/bin/rootcint at Fri Jan  4 16:15:38 2019

// Do NOT change. Changes will be lost next time file is generated
//

#define R__DICTIONARY_FILENAME builddIpcdIPatDict
#include "RConfig.h" //rootcint 4834
#if !defined(R__ACCESS_IN_SYMBOL)
//Break the privacy of classes -- Disabled for the moment
#define private public
#define protected public
#endif

// Since CINT ignores the std namespace, we need to do so in this file.
namespace std {} using namespace std;
#include "PatDict.h"

#include "TClass.h"
#include "TBuffer.h"
#include "TMemberInspector.h"
#include "TInterpreter.h"
#include "TVirtualMutex.h"
#include "TError.h"

#ifndef G__ROOT
#define G__ROOT
#endif

#include "RtypesImp.h"
#include "TIsAProxy.h"
#include "TFileMergeInfo.h"

// Direct notice to TROOT of the dictionary's loading.
namespace {
   static struct DictInit {
      DictInit() {
         ROOT::RegisterModule();
      }
   } __TheDictionaryInitializer;
}

// START OF SHADOWS

namespace ROOTShadow {
   namespace Shadow {
   } // of namespace Shadow
} // of namespace ROOTShadow
// END OF SHADOWS

namespace ROOTDict {
   void HParticleCandidate_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HParticleCandidate(void *p);
   static void deleteArray_HParticleCandidate(void *p);
   static void destruct_HParticleCandidate(void *p);
   static void streamer_HParticleCandidate(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HParticleCandidate*)
   {
      ::HParticleCandidate *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HParticleCandidate >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HParticleCandidate", ::HParticleCandidate::Class_Version(), "././hparticlecandidate.h", 10,
                  typeid(::HParticleCandidate), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HParticleCandidate::Dictionary, isa_proxy, 0,
                  sizeof(::HParticleCandidate) );
      instance.SetDelete(&delete_HParticleCandidate);
      instance.SetDeleteArray(&deleteArray_HParticleCandidate);
      instance.SetDestructor(&destruct_HParticleCandidate);
      instance.SetStreamerFunc(&streamer_HParticleCandidate);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HParticleCandidate*)
   {
      return GenerateInitInstanceLocal((::HParticleCandidate*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HParticleCandidate*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HParticle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HParticle(void *p);
   static void deleteArray_HParticle(void *p);
   static void destruct_HParticle(void *p);
   static void streamer_HParticle(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HParticle*)
   {
      ::HParticle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HParticle >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HParticle", ::HParticle::Class_Version(), "././hparticle.h", 10,
                  typeid(::HParticle), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HParticle::Dictionary, isa_proxy, 0,
                  sizeof(::HParticle) );
      instance.SetDelete(&delete_HParticle);
      instance.SetDeleteArray(&deleteArray_HParticle);
      instance.SetDestructor(&destruct_HParticle);
      instance.SetStreamerFunc(&streamer_HParticle);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HParticle*)
   {
      return GenerateInitInstanceLocal((::HParticle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HParticle*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HHypCandidate_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HHypCandidate(void *p);
   static void deleteArray_HHypCandidate(void *p);
   static void destruct_HHypCandidate(void *p);
   static void streamer_HHypCandidate(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HHypCandidate*)
   {
      ::HHypCandidate *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HHypCandidate >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HHypCandidate", ::HHypCandidate::Class_Version(), "././hhypcandidate.h", 19,
                  typeid(::HHypCandidate), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HHypCandidate::Dictionary, isa_proxy, 0,
                  sizeof(::HHypCandidate) );
      instance.SetDelete(&delete_HHypCandidate);
      instance.SetDeleteArray(&deleteArray_HHypCandidate);
      instance.SetDestructor(&destruct_HHypCandidate);
      instance.SetStreamerFunc(&streamer_HHypCandidate);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HHypCandidate*)
   {
      return GenerateInitInstanceLocal((::HHypCandidate*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HHypCandidate*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HNtuple_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HNtuple(void *p = 0);
   static void *newArray_HNtuple(Long_t size, void *p);
   static void delete_HNtuple(void *p);
   static void deleteArray_HNtuple(void *p);
   static void destruct_HNtuple(void *p);
   static void streamer_HNtuple(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HNtuple*)
   {
      ::HNtuple *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HNtuple >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HNtuple", ::HNtuple::Class_Version(), "././hntuple.h", 18,
                  typeid(::HNtuple), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HNtuple::Dictionary, isa_proxy, 0,
                  sizeof(::HNtuple) );
      instance.SetNew(&new_HNtuple);
      instance.SetNewArray(&newArray_HNtuple);
      instance.SetDelete(&delete_HNtuple);
      instance.SetDeleteArray(&deleteArray_HNtuple);
      instance.SetDestructor(&destruct_HNtuple);
      instance.SetStreamerFunc(&streamer_HNtuple);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HNtuple*)
   {
      return GenerateInitInstanceLocal((::HNtuple*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HNtuple*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HCut_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HCut(void *p);
   static void deleteArray_HCut(void *p);
   static void destruct_HCut(void *p);
   static void streamer_HCut(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HCut*)
   {
      ::HCut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HCut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HCut", ::HCut::Class_Version(), "././hcut.h", 19,
                  typeid(::HCut), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HCut::Dictionary, isa_proxy, 0,
                  sizeof(::HCut) );
      instance.SetDelete(&delete_HCut);
      instance.SetDeleteArray(&deleteArray_HCut);
      instance.SetDestructor(&destruct_HCut);
      instance.SetStreamerFunc(&streamer_HCut);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HCut*)
   {
      return GenerateInitInstanceLocal((::HCut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HCut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HTrackCut_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HTrackCut(void *p);
   static void deleteArray_HTrackCut(void *p);
   static void destruct_HTrackCut(void *p);
   static void streamer_HTrackCut(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HTrackCut*)
   {
      ::HTrackCut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HTrackCut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HTrackCut", ::HTrackCut::Class_Version(), "././htrackcut.h", 16,
                  typeid(::HTrackCut), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HTrackCut::Dictionary, isa_proxy, 0,
                  sizeof(::HTrackCut) );
      instance.SetDelete(&delete_HTrackCut);
      instance.SetDeleteArray(&deleteArray_HTrackCut);
      instance.SetDestructor(&destruct_HTrackCut);
      instance.SetStreamerFunc(&streamer_HTrackCut);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HTrackCut*)
   {
      return GenerateInitInstanceLocal((::HTrackCut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HTrackCut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HFile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HFile(void *p);
   static void deleteArray_HFile(void *p);
   static void destruct_HFile(void *p);
   static void streamer_HFile(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HFile*)
   {
      ::HFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HFile", ::HFile::Class_Version(), "././hfile.h", 15,
                  typeid(::HFile), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HFile::Dictionary, isa_proxy, 0,
                  sizeof(::HFile) );
      instance.SetDelete(&delete_HFile);
      instance.SetDeleteArray(&deleteArray_HFile);
      instance.SetDestructor(&destruct_HFile);
      instance.SetStreamerFunc(&streamer_HFile);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HFile*)
   {
      return GenerateInitInstanceLocal((::HFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HOutputFile_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void *new_HOutputFile(void *p = 0);
   static void *newArray_HOutputFile(Long_t size, void *p);
   static void delete_HOutputFile(void *p);
   static void deleteArray_HOutputFile(void *p);
   static void destruct_HOutputFile(void *p);
   static void streamer_HOutputFile(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HOutputFile*)
   {
      ::HOutputFile *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HOutputFile >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HOutputFile", ::HOutputFile::Class_Version(), "././houtputfile.h", 10,
                  typeid(::HOutputFile), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HOutputFile::Dictionary, isa_proxy, 0,
                  sizeof(::HOutputFile) );
      instance.SetNew(&new_HOutputFile);
      instance.SetNewArray(&newArray_HOutputFile);
      instance.SetDelete(&delete_HOutputFile);
      instance.SetDeleteArray(&deleteArray_HOutputFile);
      instance.SetDestructor(&destruct_HOutputFile);
      instance.SetStreamerFunc(&streamer_HOutputFile);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HOutputFile*)
   {
      return GenerateInitInstanceLocal((::HOutputFile*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HOutputFile*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HOutput_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HOutput(void *p);
   static void deleteArray_HOutput(void *p);
   static void destruct_HOutput(void *p);
   static void streamer_HOutput(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HOutput*)
   {
      ::HOutput *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HOutput >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HOutput", ::HOutput::Class_Version(), "././houtput.h", 20,
                  typeid(::HOutput), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HOutput::Dictionary, isa_proxy, 0,
                  sizeof(::HOutput) );
      instance.SetDelete(&delete_HOutput);
      instance.SetDeleteArray(&deleteArray_HOutput);
      instance.SetDestructor(&destruct_HOutput);
      instance.SetStreamerFunc(&streamer_HOutput);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HOutput*)
   {
      return GenerateInitInstanceLocal((::HOutput*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HOutput*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HPool_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HPool(void *p);
   static void deleteArray_HPool(void *p);
   static void destruct_HPool(void *p);
   static void streamer_HPool(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HPool*)
   {
      ::HPool *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HPool >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HPool", ::HPool::Class_Version(), "././hpool.h", 17,
                  typeid(::HPool), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HPool::Dictionary, isa_proxy, 0,
                  sizeof(::HPool) );
      instance.SetDelete(&delete_HPool);
      instance.SetDeleteArray(&deleteArray_HPool);
      instance.SetDestructor(&destruct_HPool);
      instance.SetStreamerFunc(&streamer_HPool);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HPool*)
   {
      return GenerateInitInstanceLocal((::HPool*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HPool*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HParticleDataPool_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HParticleDataPool(void *p);
   static void deleteArray_HParticleDataPool(void *p);
   static void destruct_HParticleDataPool(void *p);
   static void streamer_HParticleDataPool(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HParticleDataPool*)
   {
      ::HParticleDataPool *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HParticleDataPool >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HParticleDataPool", ::HParticleDataPool::Class_Version(), "././hparticledatapool.h", 17,
                  typeid(::HParticleDataPool), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HParticleDataPool::Dictionary, isa_proxy, 0,
                  sizeof(::HParticleDataPool) );
      instance.SetDelete(&delete_HParticleDataPool);
      instance.SetDeleteArray(&deleteArray_HParticleDataPool);
      instance.SetDestructor(&destruct_HParticleDataPool);
      instance.SetStreamerFunc(&streamer_HParticleDataPool);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HParticleDataPool*)
   {
      return GenerateInitInstanceLocal((::HParticleDataPool*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HParticleDataPool*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HParticlePool_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HParticlePool(void *p);
   static void deleteArray_HParticlePool(void *p);
   static void destruct_HParticlePool(void *p);
   static void streamer_HParticlePool(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HParticlePool*)
   {
      ::HParticlePool *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HParticlePool >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HParticlePool", ::HParticlePool::Class_Version(), "././hparticlepool.h", 30,
                  typeid(::HParticlePool), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HParticlePool::Dictionary, isa_proxy, 0,
                  sizeof(::HParticlePool) );
      instance.SetDelete(&delete_HParticlePool);
      instance.SetDeleteArray(&deleteArray_HParticlePool);
      instance.SetDestructor(&destruct_HParticlePool);
      instance.SetStreamerFunc(&streamer_HParticlePool);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HParticlePool*)
   {
      return GenerateInitInstanceLocal((::HParticlePool*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HParticlePool*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HTimeCut_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HTimeCut(void *p);
   static void deleteArray_HTimeCut(void *p);
   static void destruct_HTimeCut(void *p);
   static void streamer_HTimeCut(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HTimeCut*)
   {
      ::HTimeCut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HTimeCut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HTimeCut", ::HTimeCut::Class_Version(), "././htimecut.h", 20,
                  typeid(::HTimeCut), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HTimeCut::Dictionary, isa_proxy, 0,
                  sizeof(::HTimeCut) );
      instance.SetDelete(&delete_HTimeCut);
      instance.SetDeleteArray(&deleteArray_HTimeCut);
      instance.SetDestructor(&destruct_HTimeCut);
      instance.SetStreamerFunc(&streamer_HTimeCut);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HTimeCut*)
   {
      return GenerateInitInstanceLocal((::HTimeCut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HTimeCut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HGraphCut_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HGraphCut(void *p);
   static void deleteArray_HGraphCut(void *p);
   static void destruct_HGraphCut(void *p);
   static void streamer_HGraphCut(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HGraphCut*)
   {
      ::HGraphCut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HGraphCut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HGraphCut", ::HGraphCut::Class_Version(), "././hgraphcut.h", 20,
                  typeid(::HGraphCut), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HGraphCut::Dictionary, isa_proxy, 0,
                  sizeof(::HGraphCut) );
      instance.SetDelete(&delete_HGraphCut);
      instance.SetDeleteArray(&deleteArray_HGraphCut);
      instance.SetDestructor(&destruct_HGraphCut);
      instance.SetStreamerFunc(&streamer_HGraphCut);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HGraphCut*)
   {
      return GenerateInitInstanceLocal((::HGraphCut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HGraphCut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HDedxCut_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HDedxCut(void *p);
   static void deleteArray_HDedxCut(void *p);
   static void destruct_HDedxCut(void *p);
   static void streamer_HDedxCut(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HDedxCut*)
   {
      ::HDedxCut *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HDedxCut >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HDedxCut", ::HDedxCut::Class_Version(), "././hdedxcut.h", 20,
                  typeid(::HDedxCut), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HDedxCut::Dictionary, isa_proxy, 0,
                  sizeof(::HDedxCut) );
      instance.SetDelete(&delete_HDedxCut);
      instance.SetDeleteArray(&deleteArray_HDedxCut);
      instance.SetDestructor(&destruct_HDedxCut);
      instance.SetStreamerFunc(&streamer_HDedxCut);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HDedxCut*)
   {
      return GenerateInitInstanceLocal((::HDedxCut*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HDedxCut*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HParticlePlayerHandle_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void HParticlePlayerHandle_Dictionary();
   static void *new_HParticlePlayerHandle(void *p = 0);
   static void *newArray_HParticlePlayerHandle(Long_t size, void *p);
   static void delete_HParticlePlayerHandle(void *p);
   static void deleteArray_HParticlePlayerHandle(void *p);
   static void destruct_HParticlePlayerHandle(void *p);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HParticlePlayerHandle*)
   {
      ::HParticlePlayerHandle *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TIsAProxy(typeid(::HParticlePlayerHandle),0);
      static ::ROOT::TGenericClassInfo 
         instance("HParticlePlayerHandle", "././hparticleplayerhandle.h", 8,
                  typeid(::HParticlePlayerHandle), ::ROOT::DefineBehavior(ptr, ptr),
                  0, &HParticlePlayerHandle_Dictionary, isa_proxy, 0,
                  sizeof(::HParticlePlayerHandle) );
      instance.SetNew(&new_HParticlePlayerHandle);
      instance.SetNewArray(&newArray_HParticlePlayerHandle);
      instance.SetDelete(&delete_HParticlePlayerHandle);
      instance.SetDeleteArray(&deleteArray_HParticlePlayerHandle);
      instance.SetDestructor(&destruct_HParticlePlayerHandle);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HParticlePlayerHandle*)
   {
      return GenerateInitInstanceLocal((::HParticlePlayerHandle*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HParticlePlayerHandle*)0x0); R__UseDummy(_R__UNIQUE_(Init));

   // Dictionary for non-ClassDef classes
   static void HParticlePlayerHandle_Dictionary() {
      ::ROOTDict::GenerateInitInstanceLocal((const ::HParticlePlayerHandle*)0x0)->GetClass();
   }

} // end of namespace ROOTDict

namespace ROOTDict {
   void HHypDataPool_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HHypDataPool(void *p);
   static void deleteArray_HHypDataPool(void *p);
   static void destruct_HHypDataPool(void *p);
   static void streamer_HHypDataPool(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HHypDataPool*)
   {
      ::HHypDataPool *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HHypDataPool >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HHypDataPool", ::HHypDataPool::Class_Version(), "././hhypdatapool.h", 18,
                  typeid(::HHypDataPool), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HHypDataPool::Dictionary, isa_proxy, 0,
                  sizeof(::HHypDataPool) );
      instance.SetDelete(&delete_HHypDataPool);
      instance.SetDeleteArray(&deleteArray_HHypDataPool);
      instance.SetDestructor(&destruct_HHypDataPool);
      instance.SetStreamerFunc(&streamer_HHypDataPool);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HHypDataPool*)
   {
      return GenerateInitInstanceLocal((::HHypDataPool*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HHypDataPool*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HHypPool_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HHypPool(void *p);
   static void deleteArray_HHypPool(void *p);
   static void destruct_HHypPool(void *p);
   static void streamer_HHypPool(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HHypPool*)
   {
      ::HHypPool *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HHypPool >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HHypPool", ::HHypPool::Class_Version(), "././hhyppool.h", 30,
                  typeid(::HHypPool), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HHypPool::Dictionary, isa_proxy, 0,
                  sizeof(::HHypPool) );
      instance.SetDelete(&delete_HHypPool);
      instance.SetDeleteArray(&deleteArray_HHypPool);
      instance.SetDestructor(&destruct_HHypPool);
      instance.SetStreamerFunc(&streamer_HHypPool);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HHypPool*)
   {
      return GenerateInitInstanceLocal((::HHypPool*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HHypPool*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HPidPool_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HPidPool(void *p);
   static void deleteArray_HPidPool(void *p);
   static void destruct_HPidPool(void *p);
   static void streamer_HPidPool(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HPidPool*)
   {
      ::HPidPool *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HPidPool >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HPidPool", ::HPidPool::Class_Version(), "././hpidpool.h", 29,
                  typeid(::HPidPool), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HPidPool::Dictionary, isa_proxy, 0,
                  sizeof(::HPidPool) );
      instance.SetDelete(&delete_HPidPool);
      instance.SetDeleteArray(&deleteArray_HPidPool);
      instance.SetDestructor(&destruct_HPidPool);
      instance.SetStreamerFunc(&streamer_HPidPool);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HPidPool*)
   {
      return GenerateInitInstanceLocal((::HPidPool*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HPidPool*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HTrackPlayer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HTrackPlayer(void *p);
   static void deleteArray_HTrackPlayer(void *p);
   static void destruct_HTrackPlayer(void *p);
   static void streamer_HTrackPlayer(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HTrackPlayer*)
   {
      ::HTrackPlayer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HTrackPlayer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HTrackPlayer", ::HTrackPlayer::Class_Version(), "././htrackplayer.h", 18,
                  typeid(::HTrackPlayer), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HTrackPlayer::Dictionary, isa_proxy, 0,
                  sizeof(::HTrackPlayer) );
      instance.SetDelete(&delete_HTrackPlayer);
      instance.SetDeleteArray(&deleteArray_HTrackPlayer);
      instance.SetDestructor(&destruct_HTrackPlayer);
      instance.SetStreamerFunc(&streamer_HTrackPlayer);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HTrackPlayer*)
   {
      return GenerateInitInstanceLocal((::HTrackPlayer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HTrackPlayer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HParticlePlayer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HParticlePlayer(void *p);
   static void deleteArray_HParticlePlayer(void *p);
   static void destruct_HParticlePlayer(void *p);
   static void streamer_HParticlePlayer(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HParticlePlayer*)
   {
      ::HParticlePlayer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HParticlePlayer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HParticlePlayer", ::HParticlePlayer::Class_Version(), "././hparticleplayer.h", 20,
                  typeid(::HParticlePlayer), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HParticlePlayer::Dictionary, isa_proxy, 0,
                  sizeof(::HParticlePlayer) );
      instance.SetDelete(&delete_HParticlePlayer);
      instance.SetDeleteArray(&deleteArray_HParticlePlayer);
      instance.SetDestructor(&destruct_HParticlePlayer);
      instance.SetStreamerFunc(&streamer_HParticlePlayer);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HParticlePlayer*)
   {
      return GenerateInitInstanceLocal((::HParticlePlayer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HParticlePlayer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

namespace ROOTDict {
   void HHypPlayer_ShowMembers(void *obj, TMemberInspector &R__insp);
   static void delete_HHypPlayer(void *p);
   static void deleteArray_HHypPlayer(void *p);
   static void destruct_HHypPlayer(void *p);
   static void streamer_HHypPlayer(TBuffer &buf, void *obj);

   // Function generating the singleton type initializer
   static ROOT::TGenericClassInfo *GenerateInitInstanceLocal(const ::HHypPlayer*)
   {
      ::HHypPlayer *ptr = 0;
      static ::TVirtualIsAProxy* isa_proxy = new ::TInstrumentedIsAProxy< ::HHypPlayer >(0);
      static ::ROOT::TGenericClassInfo 
         instance("HHypPlayer", ::HHypPlayer::Class_Version(), "././hhypplayer.h", 20,
                  typeid(::HHypPlayer), ::ROOT::DefineBehavior(ptr, ptr),
                  &::HHypPlayer::Dictionary, isa_proxy, 0,
                  sizeof(::HHypPlayer) );
      instance.SetDelete(&delete_HHypPlayer);
      instance.SetDeleteArray(&deleteArray_HHypPlayer);
      instance.SetDestructor(&destruct_HHypPlayer);
      instance.SetStreamerFunc(&streamer_HHypPlayer);
      return &instance;
   }
   ROOT::TGenericClassInfo *GenerateInitInstance(const ::HHypPlayer*)
   {
      return GenerateInitInstanceLocal((::HHypPlayer*)0);
   }
   // Static variable to force the class initialization
   static ::ROOT::TGenericClassInfo *_R__UNIQUE_(Init) = GenerateInitInstanceLocal((const ::HHypPlayer*)0x0); R__UseDummy(_R__UNIQUE_(Init));
} // end of namespace ROOTDict

//______________________________________________________________________________
atomic_TClass_ptr HParticleCandidate::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HParticleCandidate::Class_Name()
{
   return "HParticleCandidate";
}

//______________________________________________________________________________
const char *HParticleCandidate::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParticleCandidate*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HParticleCandidate::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParticleCandidate*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HParticleCandidate::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParticleCandidate*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HParticleCandidate::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParticleCandidate*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HParticle::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HParticle::Class_Name()
{
   return "HParticle";
}

//______________________________________________________________________________
const char *HParticle::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParticle*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HParticle::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParticle*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HParticle::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParticle*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HParticle::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParticle*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HHypCandidate::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HHypCandidate::Class_Name()
{
   return "HHypCandidate";
}

//______________________________________________________________________________
const char *HHypCandidate::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HHypCandidate*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HHypCandidate::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HHypCandidate*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HHypCandidate::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HHypCandidate*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HHypCandidate::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HHypCandidate*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HNtuple::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HNtuple::Class_Name()
{
   return "HNtuple";
}

//______________________________________________________________________________
const char *HNtuple::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HNtuple*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HNtuple::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HNtuple*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HNtuple::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HNtuple*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HNtuple::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HNtuple*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HCut::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HCut::Class_Name()
{
   return "HCut";
}

//______________________________________________________________________________
const char *HCut::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HCut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HCut::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HCut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HCut::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HCut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HCut::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HCut*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HTrackCut::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HTrackCut::Class_Name()
{
   return "HTrackCut";
}

//______________________________________________________________________________
const char *HTrackCut::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HTrackCut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HTrackCut::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HTrackCut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HTrackCut::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HTrackCut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HTrackCut::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HTrackCut*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HFile::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HFile::Class_Name()
{
   return "HFile";
}

//______________________________________________________________________________
const char *HFile::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HFile::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HFile::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HFile::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HFile*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HOutputFile::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HOutputFile::Class_Name()
{
   return "HOutputFile";
}

//______________________________________________________________________________
const char *HOutputFile::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOutputFile*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HOutputFile::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOutputFile*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HOutputFile::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOutputFile*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HOutputFile::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOutputFile*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HOutput::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HOutput::Class_Name()
{
   return "HOutput";
}

//______________________________________________________________________________
const char *HOutput::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOutput*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HOutput::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HOutput*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HOutput::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOutput*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HOutput::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HOutput*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HPool::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HPool::Class_Name()
{
   return "HPool";
}

//______________________________________________________________________________
const char *HPool::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HPool*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HPool::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HPool*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HPool::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HPool*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HPool::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HPool*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HParticleDataPool::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HParticleDataPool::Class_Name()
{
   return "HParticleDataPool";
}

//______________________________________________________________________________
const char *HParticleDataPool::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParticleDataPool*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HParticleDataPool::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParticleDataPool*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HParticleDataPool::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParticleDataPool*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HParticleDataPool::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParticleDataPool*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HParticlePool::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HParticlePool::Class_Name()
{
   return "HParticlePool";
}

//______________________________________________________________________________
const char *HParticlePool::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParticlePool*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HParticlePool::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParticlePool*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HParticlePool::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParticlePool*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HParticlePool::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParticlePool*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HTimeCut::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HTimeCut::Class_Name()
{
   return "HTimeCut";
}

//______________________________________________________________________________
const char *HTimeCut::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HTimeCut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HTimeCut::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HTimeCut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HTimeCut::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HTimeCut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HTimeCut::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HTimeCut*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HGraphCut::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HGraphCut::Class_Name()
{
   return "HGraphCut";
}

//______________________________________________________________________________
const char *HGraphCut::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGraphCut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HGraphCut::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HGraphCut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HGraphCut::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGraphCut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HGraphCut::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HGraphCut*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HDedxCut::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HDedxCut::Class_Name()
{
   return "HDedxCut";
}

//______________________________________________________________________________
const char *HDedxCut::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HDedxCut*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HDedxCut::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HDedxCut*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HDedxCut::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HDedxCut*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HDedxCut::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HDedxCut*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HHypDataPool::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HHypDataPool::Class_Name()
{
   return "HHypDataPool";
}

//______________________________________________________________________________
const char *HHypDataPool::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HHypDataPool*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HHypDataPool::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HHypDataPool*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HHypDataPool::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HHypDataPool*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HHypDataPool::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HHypDataPool*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HHypPool::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HHypPool::Class_Name()
{
   return "HHypPool";
}

//______________________________________________________________________________
const char *HHypPool::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HHypPool*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HHypPool::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HHypPool*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HHypPool::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HHypPool*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HHypPool::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HHypPool*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HPidPool::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HPidPool::Class_Name()
{
   return "HPidPool";
}

//______________________________________________________________________________
const char *HPidPool::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HPidPool*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HPidPool::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HPidPool*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HPidPool::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HPidPool*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HPidPool::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HPidPool*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HTrackPlayer::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HTrackPlayer::Class_Name()
{
   return "HTrackPlayer";
}

//______________________________________________________________________________
const char *HTrackPlayer::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HTrackPlayer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HTrackPlayer::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HTrackPlayer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HTrackPlayer::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HTrackPlayer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HTrackPlayer::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HTrackPlayer*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HParticlePlayer::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HParticlePlayer::Class_Name()
{
   return "HParticlePlayer";
}

//______________________________________________________________________________
const char *HParticlePlayer::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParticlePlayer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HParticlePlayer::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HParticlePlayer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HParticlePlayer::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParticlePlayer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HParticlePlayer::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HParticlePlayer*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
atomic_TClass_ptr HHypPlayer::fgIsA(0);  // static to hold class pointer

//______________________________________________________________________________
const char *HHypPlayer::Class_Name()
{
   return "HHypPlayer";
}

//______________________________________________________________________________
const char *HHypPlayer::ImplFileName()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HHypPlayer*)0x0)->GetImplFileName();
}

//______________________________________________________________________________
int HHypPlayer::ImplFileLine()
{
   return ::ROOTDict::GenerateInitInstanceLocal((const ::HHypPlayer*)0x0)->GetImplFileLine();
}

//______________________________________________________________________________
void HHypPlayer::Dictionary()
{
   fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HHypPlayer*)0x0)->GetClass();
}

//______________________________________________________________________________
TClass *HHypPlayer::Class()
{
   if (!fgIsA) { R__LOCKGUARD2(gCINTMutex); if(!fgIsA) {fgIsA = ::ROOTDict::GenerateInitInstanceLocal((const ::HHypPlayer*)0x0)->GetClass();} }
   return fgIsA;
}

//______________________________________________________________________________
void HNtuple::Streamer(TBuffer &R__b)
{
   // Stream an object of class HNtuple.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void HNtuple::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HNtuple.
      TClass *R__cl = ::HNtuple::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*outFile", &outFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*cname", &cname);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ctitle", &ctitle);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cbufsize", &cbufsize);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ptrNt", &ptrNt);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isNtuple", &isNtuple);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "varArrayN", &varArrayN);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*varArray", &varArray);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "varList", (void*)&varList);
      R__insp.InspectMember("string", (void*)&varList, "varList.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vKeyValue", (void*)&vKeyValue);
      R__insp.InspectMember("map<std::string,Float_t>", (void*)&vKeyValue, "vKeyValue.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vKeyOrder", (void*)&vKeyOrder);
      R__insp.InspectMember("map<std::string,Int_t>", (void*)&vKeyOrder, "vKeyOrder.", true);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mIter", (void*)&mIter);
      R__insp.InspectMember("map<string,float,less<string>,allocator<pair<const string,float> > >::iterator", (void*)&mIter, "mIter.", true);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HNtuple(void *p) {
      return  p ? new(p) ::HNtuple : new ::HNtuple;
   }
   static void *newArray_HNtuple(Long_t nElements, void *p) {
      return p ? new(p) ::HNtuple[nElements] : new ::HNtuple[nElements];
   }
   // Wrapper around operator delete
   static void delete_HNtuple(void *p) {
      delete ((::HNtuple*)p);
   }
   static void deleteArray_HNtuple(void *p) {
      delete [] ((::HNtuple*)p);
   }
   static void destruct_HNtuple(void *p) {
      typedef ::HNtuple current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HNtuple(TBuffer &buf, void *obj) {
      ((::HNtuple*)obj)->::HNtuple::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HNtuple

//______________________________________________________________________________
void HFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class HFile.

   ::Error("HFile::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void HFile::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HFile.
      TClass *R__cl = ::HFile::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fileArr", (void*)&fileArr);
      R__insp.InspectMember("list<TFile*>", (void*)&fileArr, "fileArr.", false);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HFile(void *p) {
      delete ((::HFile*)p);
   }
   static void deleteArray_HFile(void *p) {
      delete [] ((::HFile*)p);
   }
   static void destruct_HFile(void *p) {
      typedef ::HFile current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HFile(TBuffer &buf, void *obj) {
      ((::HFile*)obj)->::HFile::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HFile

//______________________________________________________________________________
void HOutputFile::Streamer(TBuffer &R__b)
{
   // Stream an object of class HOutputFile.

   HFile::Streamer(R__b);
}

//______________________________________________________________________________
void HOutputFile::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HOutputFile.
      TClass *R__cl = ::HOutputFile::IsA();
      if (R__cl || R__insp.IsA()) { }
      HFile::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HOutputFile(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HOutputFile : new ::HOutputFile;
   }
   static void *newArray_HOutputFile(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HOutputFile[nElements] : new ::HOutputFile[nElements];
   }
   // Wrapper around operator delete
   static void delete_HOutputFile(void *p) {
      delete ((::HOutputFile*)p);
   }
   static void deleteArray_HOutputFile(void *p) {
      delete [] ((::HOutputFile*)p);
   }
   static void destruct_HOutputFile(void *p) {
      typedef ::HOutputFile current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HOutputFile(TBuffer &buf, void *obj) {
      ((::HOutputFile*)obj)->::HOutputFile::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HOutputFile

//______________________________________________________________________________
void HTrackPlayer::Streamer(TBuffer &R__b)
{
   // Stream an object of class HTrackPlayer.

   HReconstructor::Streamer(R__b);
}

//______________________________________________________________________________
void HTrackPlayer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HTrackPlayer.
      TClass *R__cl = ::HTrackPlayer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_pContCatPart", &m_pContCatPart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_pContItPart", &m_pContItPart);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_pFWallCat", &m_pFWallCat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_pFWallCatIter", &m_pFWallCatIter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_pGeantKineCat", &m_pGeantKineCat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_pGeantKineCatIter", &m_pGeantKineCatIter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_pBTCat", &m_pBTCat);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*m_pBTCatIter", &m_pBTCatIter);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vCut", (void*)&vCut);
      R__insp.InspectMember("vector<HCut*>", (void*)&vCut, "vCut.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "itCut", (void*)&itCut);
      R__insp.InspectMember("vector<HCut*,allocator<HCut*> >::iterator", (void*)&itCut, "itCut.", false);
      HReconstructor::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HTrackPlayer(void *p) {
      delete ((::HTrackPlayer*)p);
   }
   static void deleteArray_HTrackPlayer(void *p) {
      delete [] ((::HTrackPlayer*)p);
   }
   static void destruct_HTrackPlayer(void *p) {
      typedef ::HTrackPlayer current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HTrackPlayer(TBuffer &buf, void *obj) {
      ((::HTrackPlayer*)obj)->::HTrackPlayer::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HTrackPlayer

//______________________________________________________________________________
void HParticlePlayer::Streamer(TBuffer &R__b)
{
   // Stream an object of class HParticlePlayer.

   HReconstructor::Streamer(R__b);
}

//______________________________________________________________________________
void HParticlePlayer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HParticlePlayer.
      TClass *R__cl = ::HParticlePlayer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vCut", (void*)&vCut);
      R__insp.InspectMember("vector<HCut*>", (void*)&vCut, "vCut.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "itCut", (void*)&itCut);
      R__insp.InspectMember("vector<HCut*,allocator<HCut*> >::iterator", (void*)&itCut, "itCut.", false);
      HReconstructor::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HParticlePlayer(void *p) {
      delete ((::HParticlePlayer*)p);
   }
   static void deleteArray_HParticlePlayer(void *p) {
      delete [] ((::HParticlePlayer*)p);
   }
   static void destruct_HParticlePlayer(void *p) {
      typedef ::HParticlePlayer current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HParticlePlayer(TBuffer &buf, void *obj) {
      ((::HParticlePlayer*)obj)->::HParticlePlayer::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HParticlePlayer

namespace ROOTDict {
   // Wrappers around operator new
   static void *new_HParticlePlayerHandle(void *p) {
      return  p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HParticlePlayerHandle : new ::HParticlePlayerHandle;
   }
   static void *newArray_HParticlePlayerHandle(Long_t nElements, void *p) {
      return p ? ::new((::ROOT::TOperatorNewHelper*)p) ::HParticlePlayerHandle[nElements] : new ::HParticlePlayerHandle[nElements];
   }
   // Wrapper around operator delete
   static void delete_HParticlePlayerHandle(void *p) {
      delete ((::HParticlePlayerHandle*)p);
   }
   static void deleteArray_HParticlePlayerHandle(void *p) {
      delete [] ((::HParticlePlayerHandle*)p);
   }
   static void destruct_HParticlePlayerHandle(void *p) {
      typedef ::HParticlePlayerHandle current_t;
      ((current_t*)p)->~current_t();
   }
} // end of namespace ROOTDict for class ::HParticlePlayerHandle

//______________________________________________________________________________
void HHypPlayer::Streamer(TBuffer &R__b)
{
   // Stream an object of class HHypPlayer.

   HReconstructor::Streamer(R__b);
}

//______________________________________________________________________________
void HHypPlayer::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HHypPlayer.
      TClass *R__cl = ::HHypPlayer::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vCut", (void*)&vCut);
      R__insp.InspectMember("vector<HCut*>", (void*)&vCut, "vCut.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "itCut", (void*)&itCut);
      R__insp.InspectMember("vector<HCut*,allocator<HCut*> >::iterator", (void*)&itCut, "itCut.", false);
      HReconstructor::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HHypPlayer(void *p) {
      delete ((::HHypPlayer*)p);
   }
   static void deleteArray_HHypPlayer(void *p) {
      delete [] ((::HHypPlayer*)p);
   }
   static void destruct_HHypPlayer(void *p) {
      typedef ::HHypPlayer current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HHypPlayer(TBuffer &buf, void *obj) {
      ((::HHypPlayer*)obj)->::HHypPlayer::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HHypPlayer

//______________________________________________________________________________
void HParticleCandidate::Streamer(TBuffer &R__b)
{
   // Stream an object of class HParticleCandidate.

   ::Error("HParticleCandidate::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void HParticleCandidate::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HParticleCandidate.
      TClass *R__cl = ::HParticleCandidate::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*HitData", &HitData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*TrackData", &TrackData);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dataPair", (void*)&dataPair);
      R__insp.InspectMember("CommonDefinitions::NtuplePair", (void*)&dataPair, "dataPair.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dataIter", (void*)&dataIter);
      R__insp.InspectMember("CommonDefinitions::NtuplePairIter", (void*)&dataIter, "dataIter.", false);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HParticleCandidate(void *p) {
      delete ((::HParticleCandidate*)p);
   }
   static void deleteArray_HParticleCandidate(void *p) {
      delete [] ((::HParticleCandidate*)p);
   }
   static void destruct_HParticleCandidate(void *p) {
      typedef ::HParticleCandidate current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HParticleCandidate(TBuffer &buf, void *obj) {
      ((::HParticleCandidate*)obj)->::HParticleCandidate::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HParticleCandidate

//______________________________________________________________________________
void HParticle::Streamer(TBuffer &R__b)
{
   // Stream an object of class HParticle.

   ::Error("HParticle::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void HParticle::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HParticle.
      TClass *R__cl = ::HParticle::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pCand", &pCand);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dataPair", (void*)&dataPair);
      R__insp.InspectMember("CommonDefinitions::NtuplePair", (void*)&dataPair, "dataPair.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dataIter", (void*)&dataIter);
      R__insp.InspectMember("CommonDefinitions::NtuplePairIter", (void*)&dataIter, "dataIter.", false);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HParticle(void *p) {
      delete ((::HParticle*)p);
   }
   static void deleteArray_HParticle(void *p) {
      delete [] ((::HParticle*)p);
   }
   static void destruct_HParticle(void *p) {
      typedef ::HParticle current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HParticle(TBuffer &buf, void *obj) {
      ((::HParticle*)obj)->::HParticle::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HParticle

//______________________________________________________________________________
void HHypCandidate::Streamer(TBuffer &R__b)
{
   // Stream an object of class HHypCandidate.

   TObject::Streamer(R__b);
}

//______________________________________________________________________________
void HHypCandidate::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HHypCandidate.
      TClass *R__cl = ::HHypCandidate::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "nPart", (void*)&nPart);
      R__insp.InspectMember("CommonDefinitions::ParticleCandSeq", (void*)&nPart, "nPart.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partIter", (void*)&partIter);
      R__insp.InspectMember("CommonDefinitions::ParticleCandSeqIter", (void*)&partIter, "partIter.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pPattern", &pPattern);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "slot", (void*)&slot);
      R__insp.InspectMember("vector<std::pair<EParticle,int> >", (void*)&slot, "slot.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "slotIt", (void*)&slotIt);
      R__insp.InspectMember("vector<pair<CommonDefinitions::EParticle,int>,allocator<pair<CommonDefinitions::EParticle,int> > >::iterator", (void*)&slotIt, "slotIt.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "chi2", &chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isA", &isA);
      TObject::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HHypCandidate(void *p) {
      delete ((::HHypCandidate*)p);
   }
   static void deleteArray_HHypCandidate(void *p) {
      delete [] ((::HHypCandidate*)p);
   }
   static void destruct_HHypCandidate(void *p) {
      typedef ::HHypCandidate current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HHypCandidate(TBuffer &buf, void *obj) {
      ((::HHypCandidate*)obj)->::HHypCandidate::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HHypCandidate

//______________________________________________________________________________
void HPool::Streamer(TBuffer &R__b)
{
   // Stream an object of class HPool.

   ::Error("HPool::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void HPool::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HPool.
      TClass *R__cl = ::HPool::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "eventData", (void*)&eventData);
      R__insp.InspectMember("HEventPool", (void*)&eventData, "eventData.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "objectList", (void*)&objectList);
      R__insp.InspectMember("list<HPattern*>", (void*)&objectList, "objectList.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "objIt", (void*)&objIt);
      R__insp.InspectMember("list<HPattern*,allocator<HPattern*> >::iterator", (void*)&objIt, "objIt.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ptrFile", &ptrFile);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HPool(void *p) {
      delete ((::HPool*)p);
   }
   static void deleteArray_HPool(void *p) {
      delete [] ((::HPool*)p);
   }
   static void destruct_HPool(void *p) {
      typedef ::HPool current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HPool(TBuffer &buf, void *obj) {
      ((::HPool*)obj)->::HPool::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HPool

//______________________________________________________________________________
void HParticlePool::Streamer(TBuffer &R__b)
{
   // Stream an object of class HParticlePool.

   HPool::Streamer(R__b);
   HParticleDataPool::Streamer(R__b);
}

//______________________________________________________________________________
void HParticlePool::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HParticlePool.
      TClass *R__cl = ::HParticlePool::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fw_hits", (void*)&fw_hits);
      R__insp.InspectMember("FWHit", (void*)&fw_hits, "fw_hits.", false);
      HPool::ShowMembers(R__insp);
      HParticleDataPool::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HParticlePool(void *p) {
      delete ((::HParticlePool*)p);
   }
   static void deleteArray_HParticlePool(void *p) {
      delete [] ((::HParticlePool*)p);
   }
   static void destruct_HParticlePool(void *p) {
      typedef ::HParticlePool current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HParticlePool(TBuffer &buf, void *obj) {
      ((::HParticlePool*)obj)->::HParticlePool::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HParticlePool

//______________________________________________________________________________
void HParticleDataPool::Streamer(TBuffer &R__b)
{
   // Stream an object of class HParticleDataPool.

   ::Error("HParticleDataPool::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void HParticleDataPool::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HParticleDataPool.
      TClass *R__cl = ::HParticleDataPool::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partCand", (void*)&partCand);
      R__insp.InspectMember("CommonDefinitions::MultiParticle", (void*)&partCand, "partCand.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "partNum", (void*)&partNum);
      R__insp.InspectMember("CommonDefinitions::ParticleNum", (void*)&partNum, "partNum.", false);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HParticleDataPool(void *p) {
      delete ((::HParticleDataPool*)p);
   }
   static void deleteArray_HParticleDataPool(void *p) {
      delete [] ((::HParticleDataPool*)p);
   }
   static void destruct_HParticleDataPool(void *p) {
      typedef ::HParticleDataPool current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HParticleDataPool(TBuffer &buf, void *obj) {
      ((::HParticleDataPool*)obj)->::HParticleDataPool::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HParticleDataPool

//______________________________________________________________________________
void HHypPool::Streamer(TBuffer &R__b)
{
   // Stream an object of class HHypPool.

   HPool::Streamer(R__b);
   HHypDataPool::Streamer(R__b);
}

//______________________________________________________________________________
void HHypPool::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HHypPool.
      TClass *R__cl = ::HHypPool::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hypSet", (void*)&hypSet);
      R__insp.InspectMember("vector<HHypCandidate*>", (void*)&hypSet, "hypSet.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hypIt", (void*)&hypIt);
      R__insp.InspectMember("vector<HHypCandidate*,allocator<HHypCandidate*> >::iterator", (void*)&hypIt, "hypIt.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "ptrFH", (void*)&ptrFH);
      R__insp.InspectMember("auto_ptr<HParticlePlayerHandle>", (void*)&ptrFH, "ptrFH.", false);
      HPool::ShowMembers(R__insp);
      HHypDataPool::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HHypPool(void *p) {
      delete ((::HHypPool*)p);
   }
   static void deleteArray_HHypPool(void *p) {
      delete [] ((::HHypPool*)p);
   }
   static void destruct_HHypPool(void *p) {
      typedef ::HHypPool current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HHypPool(TBuffer &buf, void *obj) {
      ((::HHypPool*)obj)->::HHypPool::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HHypPool

//______________________________________________________________________________
void HHypDataPool::Streamer(TBuffer &R__b)
{
   // Stream an object of class HHypDataPool.

   ::Error("HHypDataPool::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void HHypDataPool::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HHypDataPool.
      TClass *R__cl = ::HHypDataPool::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hypCand", (void*)&hypCand);
      R__insp.InspectMember("CommonDefinitions::MultiHyp", (void*)&hypCand, "hypCand.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hypNum", (void*)&hypNum);
      R__insp.InspectMember("CommonDefinitions::HypNum", (void*)&hypNum, "hypNum.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hypIter", (void*)&hypIter);
      R__insp.InspectMember("CommonDefinitions::MultiHypIter", (void*)&hypIter, "hypIter.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "numId", (void*)&numId);
      R__insp.InspectMember("CommonDefinitions::ParticleNum", (void*)&numId, "numId.", false);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HHypDataPool(void *p) {
      delete ((::HHypDataPool*)p);
   }
   static void deleteArray_HHypDataPool(void *p) {
      delete [] ((::HHypDataPool*)p);
   }
   static void destruct_HHypDataPool(void *p) {
      typedef ::HHypDataPool current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HHypDataPool(TBuffer &buf, void *obj) {
      ((::HHypDataPool*)obj)->::HHypDataPool::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HHypDataPool

//______________________________________________________________________________
void HPidPool::Streamer(TBuffer &R__b)
{
   // Stream an object of class HPidPool.

   HPool::Streamer(R__b);
   HHypDataPool::Streamer(R__b);
}

//______________________________________________________________________________
void HPidPool::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HPidPool.
      TClass *R__cl = ::HPidPool::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "hypPid", (void*)&hypPid);
      R__insp.InspectMember("CommonDefinitions::MultiHypPid", (void*)&hypPid, "hypPid.", false);
      HPool::ShowMembers(R__insp);
      HHypDataPool::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HPidPool(void *p) {
      delete ((::HPidPool*)p);
   }
   static void deleteArray_HPidPool(void *p) {
      delete [] ((::HPidPool*)p);
   }
   static void destruct_HPidPool(void *p) {
      typedef ::HPidPool current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HPidPool(TBuffer &buf, void *obj) {
      ((::HPidPool*)obj)->::HPidPool::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HPidPool

//______________________________________________________________________________
void HOutput::Streamer(TBuffer &R__b)
{
   // Stream an object of class HOutput.

   ::Error("HOutput::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void HOutput::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HOutput.
      TClass *R__cl = ::HOutput::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ptrFile", &ptrFile);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ptrNtuple", &ptrNtuple);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "prefix", (void*)&prefix);
      R__insp.InspectMember("string", (void*)&prefix, "prefix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "suffix", (void*)&suffix);
      R__insp.InspectMember("string", (void*)&suffix, "suffix.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "keyword", (void*)&keyword);
      R__insp.InspectMember("string", (void*)&keyword, "keyword.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "isFixed", &isFixed);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HOutput(void *p) {
      delete ((::HOutput*)p);
   }
   static void deleteArray_HOutput(void *p) {
      delete [] ((::HOutput*)p);
   }
   static void destruct_HOutput(void *p) {
      typedef ::HOutput current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HOutput(TBuffer &buf, void *obj) {
      ((::HOutput*)obj)->::HOutput::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HOutput

//______________________________________________________________________________
void HCut::Streamer(TBuffer &R__b)
{
   // Stream an object of class HCut.

   ::Error("HCut::Streamer", "version id <=0 in ClassDef, dummy Streamer() called"); if (R__b.IsReading()) { }
}

//______________________________________________________________________________
void HCut::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HCut.
      TClass *R__cl = ::HCut::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "fileArr", (void*)&fileArr);
      R__insp.InspectMember("list<TFile*>", (void*)&fileArr, "fileArr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "iterFileArr", (void*)&iterFileArr);
      R__insp.InspectMember("list<TFile*,allocator<TFile*> >::iterator", (void*)&iterFileArr, "iterFileArr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "name", (void*)&name);
      R__insp.InspectMember("string", (void*)&name, "name.", false);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HCut(void *p) {
      delete ((::HCut*)p);
   }
   static void deleteArray_HCut(void *p) {
      delete [] ((::HCut*)p);
   }
   static void destruct_HCut(void *p) {
      typedef ::HCut current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HCut(TBuffer &buf, void *obj) {
      ((::HCut*)obj)->::HCut::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HCut

//______________________________________________________________________________
void HTrackCut::Streamer(TBuffer &R__b)
{
   // Stream an object of class HTrackCut.

   HCut::Streamer(R__b);
}

//______________________________________________________________________________
void HTrackCut::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HTrackCut.
      TClass *R__cl = ::HTrackCut::IsA();
      if (R__cl || R__insp.IsA()) { }
      HCut::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HTrackCut(void *p) {
      delete ((::HTrackCut*)p);
   }
   static void deleteArray_HTrackCut(void *p) {
      delete [] ((::HTrackCut*)p);
   }
   static void destruct_HTrackCut(void *p) {
      typedef ::HTrackCut current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HTrackCut(TBuffer &buf, void *obj) {
      ((::HTrackCut*)obj)->::HTrackCut::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HTrackCut

//______________________________________________________________________________
void HTimeCut::Streamer(TBuffer &R__b)
{
   // Stream an object of class HTimeCut.

   HCut::Streamer(R__b);
}

//______________________________________________________________________________
void HTimeCut::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HTimeCut.
      TClass *R__cl = ::HTimeCut::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "C", &C);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "R2D", &R2D);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "D2R", &D2R);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mom", &mom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "theta", &theta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "phi", &phi);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tof", &tof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beta", &beta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "q", &q);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "track_length", &track_length);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "vect", &vect);
      R__insp.InspectMember(vect, "vect.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "part", &part);
      R__insp.InspectMember(part, "part.");
      R__insp.Inspect(R__cl, R__insp.GetParent(), "delta_chi2", (void*)&delta_chi2);
      R__insp.InspectMember("vector<double>", (void*)&delta_chi2, "delta_chi2.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sort_idx", (void*)&sort_idx);
      R__insp.InspectMember("vector<double>", (void*)&sort_idx, "sort_idx.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tof_new_arr", (void*)&tof_new_arr);
      R__insp.InspectMember("vector<std::vector<double> >", (void*)&tof_new_arr, "tof_new_arr.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "best_cand", (void*)&best_cand);
      R__insp.InspectMember("map<int,std::multimap<double,int> >", (void*)&best_cand, "best_cand.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "best_cand_iter", (void*)&best_cand_iter);
      R__insp.InspectMember("map<int,multimap<double,int,less<double>,allocator<pair<const double,int> > >,less<int>,allocator<pair<const int,multimap<double,int,less<double>,allocator<pair<const double,int> > > > > >::iterator", (void*)&best_cand_iter, "best_cand_iter.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cand", (void*)&cand);
      R__insp.InspectMember("multimap<double,int>", (void*)&cand, "cand.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "cand_iter", (void*)&cand_iter);
      R__insp.InspectMember("multimap<double,int,less<double>,allocator<pair<const double,int> > >::iterator", (void*)&cand_iter, "cand_iter.", false);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "size", &size);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "best_index", &best_index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "sort_index", &sort_index);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "best_chi2", &best_chi2);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "delta_tof", &delta_tof);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "tof_mean", &tof_mean);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*p1", &p1);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*p2", &p2);
      HCut::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HTimeCut(void *p) {
      delete ((::HTimeCut*)p);
   }
   static void deleteArray_HTimeCut(void *p) {
      delete [] ((::HTimeCut*)p);
   }
   static void destruct_HTimeCut(void *p) {
      typedef ::HTimeCut current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HTimeCut(TBuffer &buf, void *obj) {
      ((::HTimeCut*)obj)->::HTimeCut::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HTimeCut

//______________________________________________________________________________
void HGraphCut::Streamer(TBuffer &R__b)
{
   // Stream an object of class HGraphCut.

   HCut::Streamer(R__b);
}

//______________________________________________________________________________
void HGraphCut::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HGraphCut.
      TClass *R__cl = ::HGraphCut::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "mom", &mom);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beta", &beta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dedx_mdc", &dedx_mdc);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*p_cut", &p_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*d_cut", &d_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ep_cut", &ep_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*em_cut", &em_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pip_cut", &pip_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pim_cut", &pim_cut);
      HCut::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HGraphCut(void *p) {
      delete ((::HGraphCut*)p);
   }
   static void deleteArray_HGraphCut(void *p) {
      delete [] ((::HGraphCut*)p);
   }
   static void destruct_HGraphCut(void *p) {
      typedef ::HGraphCut current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HGraphCut(TBuffer &buf, void *obj) {
      ((::HGraphCut*)obj)->::HGraphCut::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HGraphCut

//______________________________________________________________________________
void HDedxCut::Streamer(TBuffer &R__b)
{
   // Stream an object of class HDedxCut.

   HCut::Streamer(R__b);
}

//______________________________________________________________________________
void HDedxCut::ShowMembers(TMemberInspector &R__insp)
{
      // Inspect the data members of an object of class HDedxCut.
      TClass *R__cl = ::HDedxCut::IsA();
      if (R__cl || R__insp.IsA()) { }
      R__insp.Inspect(R__cl, R__insp.GetParent(), "id", &id);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dedx_in", &dedx_in);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "dedx_out", &dedx_out);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "beta", &beta);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*p_dedx_cut", &p_dedx_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*ep_dedx_cut", &ep_dedx_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*em_dedx_cut", &em_dedx_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pip_dedx_cut", &pip_dedx_cut);
      R__insp.Inspect(R__cl, R__insp.GetParent(), "*pim_dedx_cut", &pim_dedx_cut);
      HCut::ShowMembers(R__insp);
}

namespace ROOTDict {
   // Wrapper around operator delete
   static void delete_HDedxCut(void *p) {
      delete ((::HDedxCut*)p);
   }
   static void deleteArray_HDedxCut(void *p) {
      delete [] ((::HDedxCut*)p);
   }
   static void destruct_HDedxCut(void *p) {
      typedef ::HDedxCut current_t;
      ((current_t*)p)->~current_t();
   }
   // Wrapper around a custom streamer member function.
   static void streamer_HDedxCut(TBuffer &buf, void *obj) {
      ((::HDedxCut*)obj)->::HDedxCut::Streamer(buf);
   }
} // end of namespace ROOTDict for class ::HDedxCut

/********************************************************
* build/pc/PatDict.cc
* CAUTION: DON'T CHANGE THIS FILE. THIS FILE IS AUTOMATICALLY GENERATED
*          FROM HEADER FILES LISTED IN G__setup_cpp_environmentXXX().
*          CHANGE THOSE HEADER FILES AND REGENERATE THIS FILE.
********************************************************/

#ifdef G__MEMTEST
#undef malloc
#undef free
#endif

#if defined(__GNUC__) && __GNUC__ >= 4 && ((__GNUC_MINOR__ == 2 && __GNUC_PATCHLEVEL__ >= 1) || (__GNUC_MINOR__ >= 3))
#pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif

extern "C" void G__cpp_reset_tagtablePatDict();

extern "C" void G__set_cpp_environmentPatDict() {
  G__cpp_reset_tagtablePatDict();
}
#include <new>
extern "C" int G__cpp_dllrevPatDict() { return(30051515); }

/*********************************************************
* Member function Interface Method
*********************************************************/

/* HParticleCandidate */
static int G__PatDict_404_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParticleCandidate* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HParticleCandidate((HPidTrackCand*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) HParticleCandidate((HPidTrackCand*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HParticleCandidate));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_404_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParticleCandidate*) G__getstructoffset())->setId((CommonDefinitions::EParticle) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_404_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((HParticleCandidate*) G__getstructoffset())->set((const char*) G__int(libp->para[0]), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HParticleCandidate*) G__getstructoffset())->set((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_404_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HParticleCandidate*) G__getstructoffset())->getId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_404_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HParticleCandidate*) G__getstructoffset())->getEId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_404_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HParticleCandidate*) G__getstructoffset())->isName((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_404_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HParticleCandidate*) G__getstructoffset())->isLepton());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_404_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HParticleCandidate*) G__getstructoffset())->get((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_404_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HParticleCandidate*) G__getstructoffset())->get(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_404_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         CommonDefinitions::NtuplePairIter* pobj;
         CommonDefinitions::NtuplePairIter xobj = ((HParticleCandidate*) G__getstructoffset())->begin();
         pobj = new CommonDefinitions::NtuplePairIter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_404_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         CommonDefinitions::NtuplePairIter* pobj;
         CommonDefinitions::NtuplePairIter xobj = ((HParticleCandidate*) G__getstructoffset())->end();
         pobj = new CommonDefinitions::NtuplePairIter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_404_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HParticleCandidate::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_404_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParticleCandidate::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_404_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HParticleCandidate::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_404_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HParticleCandidate::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_404_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HParticleCandidate*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_404_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParticleCandidate*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_404_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParticleCandidate*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_404_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParticleCandidate*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_404_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParticleCandidate::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_404_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParticleCandidate::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_404_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParticleCandidate::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_404_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParticleCandidate::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PatDict_404_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HParticleCandidate* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HParticleCandidate(*(HParticleCandidate*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HParticleCandidate));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HParticleCandidate G__THParticleCandidate;
static int G__PatDict_404_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HParticleCandidate*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HParticleCandidate*) (soff+(sizeof(HParticleCandidate)*i)))->~G__THParticleCandidate();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HParticleCandidate*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HParticleCandidate*) (soff))->~G__THParticleCandidate();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PatDict_404_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParticleCandidate* dest = (HParticleCandidate*) G__getstructoffset();
   *dest = *(HParticleCandidate*) libp->para[0].ref;
   const HParticleCandidate& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HParticle */
static int G__PatDict_405_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HParticle((HParticleCandidate*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) HParticle((HParticleCandidate*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_405_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParticle* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HParticle((HParticle*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) HParticle((HParticle*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_405_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParticle*) G__getstructoffset())->setId((CommonDefinitions::EParticle) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_405_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      ((HParticle*) G__getstructoffset())->set(*((string*) G__int(libp->para[0])), (float) G__double(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HParticle*) G__getstructoffset())->set(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_405_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HParticle*) G__getstructoffset())->getId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_405_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HParticle*) G__getstructoffset())->getEId());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_405_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HParticle*) G__getstructoffset())->isName(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_405_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HParticle*) G__getstructoffset())->get((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_405_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 102, (double) ((HParticle*) G__getstructoffset())->get(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_405_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         CommonDefinitions::NtuplePairIter* pobj;
         CommonDefinitions::NtuplePairIter xobj = ((HParticle*) G__getstructoffset())->begin();
         pobj = new CommonDefinitions::NtuplePairIter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_405_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         CommonDefinitions::NtuplePairIter* pobj;
         CommonDefinitions::NtuplePairIter xobj = ((HParticle*) G__getstructoffset())->end();
         pobj = new CommonDefinitions::NtuplePairIter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_405_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HParticle*) G__getstructoffset())->getCandidate());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_405_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HParticle::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_405_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParticle::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_405_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HParticle::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_405_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HParticle::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_405_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HParticle*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_405_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParticle*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_405_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParticle*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_405_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParticle*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_405_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParticle::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_405_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParticle::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_405_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParticle::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_405_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParticle::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PatDict_405_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HParticle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HParticle(*(HParticle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HParticle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HParticle G__THParticle;
static int G__PatDict_405_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HParticle*) (soff+(sizeof(HParticle)*i)))->~G__THParticle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HParticle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HParticle*) (soff))->~G__THParticle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PatDict_405_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParticle* dest = (HParticle*) G__getstructoffset();
   *dest = *(HParticle*) libp->para[0].ref;
   const HParticle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HHypCandidate */
static int G__PatDict_406_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HHypCandidate* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HHypCandidate((HPattern*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) HHypCandidate((HPattern*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HHypCandidate));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_406_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HHypCandidate& obj = ((HHypCandidate*) G__getstructoffset())->operator+=((HParticleCandidate*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_406_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const HHypCandidate& obj = ((HHypCandidate*) G__getstructoffset())->operator+=((HParticle*) G__int(libp->para[0]));
         result7->ref = (long) (&obj);
         result7->obj.i = (long) (&obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_406_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HHypCandidate*) G__getstructoffset())->getId((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_406_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HHypCandidate*) G__getstructoffset())->get((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_406_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((HHypCandidate*) G__getstructoffset())->getPart((int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((HHypCandidate*) G__getstructoffset())->getPart());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_406_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HHypCandidate*) G__getstructoffset())->getSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_406_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HHypCandidate*) G__getstructoffset())->getNum((CommonDefinitions::EParticle) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_406_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HHypCandidate*) G__getstructoffset())->getNum((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_406_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HHypCandidate*) G__getstructoffset())->setChi2((double) G__double(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_406_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letdouble(result7, 100, (double) ((const HHypCandidate*) G__getstructoffset())->getChi2());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_406_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const HHypCandidate*) G__getstructoffset())->isActive());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_406_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HHypCandidate*) G__getstructoffset())->setActive((bool) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_406_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HHypCandidate::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_406_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HHypCandidate::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_406_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HHypCandidate::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_406_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HHypCandidate::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_406_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HHypCandidate*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_406_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HHypCandidate::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_406_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HHypCandidate::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_406_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HHypCandidate::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_406_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HHypCandidate::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PatDict_406_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HHypCandidate* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HHypCandidate(*(HHypCandidate*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HHypCandidate));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HHypCandidate G__THHypCandidate;
static int G__PatDict_406_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HHypCandidate*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HHypCandidate*) (soff+(sizeof(HHypCandidate)*i)))->~G__THHypCandidate();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HHypCandidate*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HHypCandidate*) (soff))->~G__THHypCandidate();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PatDict_406_0_29(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HHypCandidate* dest = (HHypCandidate*) G__getstructoffset();
   *dest = *(HHypCandidate*) libp->para[0].ref;
   const HHypCandidate& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HNtuple */
static int G__PatDict_407_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HNtuple* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HNtuple[n];
     } else {
       p = new((void*) gvp) HNtuple[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HNtuple;
     } else {
       p = new((void*) gvp) HNtuple;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HNtuple));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_407_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HNtuple* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HNtuple(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HNtuple(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (Int_t) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HNtuple((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HNtuple((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HNtuple));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_407_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HNtuple* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 4:
     //m: 4
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HNtuple(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     } else {
       p = new((void*) gvp) HNtuple(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (Int_t) G__int(libp->para[3]));
     }
     break;
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HNtuple(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HNtuple(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HNtuple));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_407_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Float_t& obj = ((HNtuple*) G__getstructoffset())->operator[](*(string*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_407_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         const Float_t& obj = ((const HNtuple*) G__getstructoffset())->operator[](*(string*) libp->para[0].ref);
         result7->ref = (long) (&obj);
         result7->obj.d = (double) (obj);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_407_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HNtuple*) G__getstructoffset())->fill());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_407_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HNtuple*) G__getstructoffset())->SetDirectory((TDirectory*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_407_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const HNtuple*) G__getstructoffset())->getName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_407_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((const HNtuple*) G__getstructoffset())->getTitle());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_407_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HNtuple*) G__getstructoffset())->setFile((TFile*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_407_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HNtuple::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_407_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HNtuple::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_407_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HNtuple::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_407_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HNtuple::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_407_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HNtuple*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_407_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HNtuple::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_407_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HNtuple::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_407_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HNtuple::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_407_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HNtuple::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PatDict_407_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HNtuple* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HNtuple(*(HNtuple*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HNtuple));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HNtuple G__THNtuple;
static int G__PatDict_407_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HNtuple*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HNtuple*) (soff+(sizeof(HNtuple)*i)))->~G__THNtuple();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HNtuple*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HNtuple*) (soff))->~G__THNtuple();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HCut */
static int G__PatDict_581_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((HCut*) G__getstructoffset())->open((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((HCut*) G__getstructoffset())->open((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_581_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((HCut*) G__getstructoffset())->close((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((HCut*) G__getstructoffset())->close());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_581_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) ((HCut*) G__getstructoffset())->getName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_581_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HCut*) G__getstructoffset())->select(*(HReconstructor*) libp->para[0].ref));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_581_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const HCut*) G__getstructoffset())->isOpen((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_581_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HCut*) G__getstructoffset())->getHist((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_581_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HCut*) G__getstructoffset())->getCut((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_581_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HCut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_581_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HCut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_581_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HCut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_581_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HCut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_581_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HCut*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_581_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HCut*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_581_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HCut*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_581_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HCut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_581_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HCut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_581_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HCut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_581_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HCut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_581_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HCut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HCut G__THCut;
static int G__PatDict_581_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HCut*) (soff+(sizeof(HCut)*i)))->~G__THCut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HCut*) (soff))->~G__THCut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PatDict_581_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HCut* dest = (HCut*) G__getstructoffset();
   *dest = *(HCut*) libp->para[0].ref;
   const HCut& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HTrackCut */
static int G__PatDict_609_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HTrackCut* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HTrackCut(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HTrackCut(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HTrackCut((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HTrackCut((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HTrackCut((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HTrackCut((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HTrackCut));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_609_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HTrackCut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_609_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTrackCut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_609_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HTrackCut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_609_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HTrackCut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_609_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HTrackCut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_609_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTrackCut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_609_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HTrackCut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_609_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTrackCut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_609_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HTrackCut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PatDict_609_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HTrackCut* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HTrackCut(*(HTrackCut*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HTrackCut));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HTrackCut G__THTrackCut;
static int G__PatDict_609_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HTrackCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HTrackCut*) (soff+(sizeof(HTrackCut)*i)))->~G__THTrackCut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HTrackCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HTrackCut*) (soff))->~G__THTrackCut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PatDict_609_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HTrackCut* dest = (HTrackCut*) G__getstructoffset();
   *dest = *(HTrackCut*) libp->para[0].ref;
   const HTrackCut& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HFile */
static int G__PatDict_711_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 103, (long) ((HFile*) G__getstructoffset())->open((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 103, (long) ((HFile*) G__getstructoffset())->open((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_711_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HFile*) G__getstructoffset())->write());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_711_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 103, (long) ((HFile*) G__getstructoffset())->close((const char*) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 103, (long) ((HFile*) G__getstructoffset())->close());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_711_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((const HFile*) G__getstructoffset())->isOutput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_711_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HFile*) G__getstructoffset())->getOutput());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_711_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((const HFile*) G__getstructoffset())->getTree((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((const HFile*) G__getstructoffset())->getTree((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_711_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 108, (long) ((const HFile*) G__getstructoffset())->getEntries((const char*) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 108, (long) ((const HFile*) G__getstructoffset())->getEntries((const char*) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_711_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HFile*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_711_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HFile*) G__getstructoffset())->get((const char*) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_711_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_711_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_711_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_711_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_711_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HFile*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_711_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFile*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_711_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFile*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_711_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_711_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_711_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_711_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_711_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HFile G__THFile;
static int G__PatDict_711_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HFile*) (soff+(sizeof(HFile)*i)))->~G__THFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HFile*) (soff))->~G__THFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PatDict_711_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HFile* dest = (HFile*) G__getstructoffset();
   *dest = *(HFile*) libp->para[0].ref;
   const HFile& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HOutputFile */
static int G__PatDict_715_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOutputFile* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOutputFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HOutputFile((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HOutputFile((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HOutputFile((const char*) G__int(libp->para[0]));
     }
     break;
   case 0:
     int n = G__getaryconstruct();
     if (n) {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HOutputFile[n];
       } else {
         p = new((void*) gvp) HOutputFile[n];
       }
     } else {
       if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
         p = new HOutputFile;
       } else {
         p = new((void*) gvp) HOutputFile;
       }
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HOutputFile));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_715_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HOutputFile::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_715_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOutputFile::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_715_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HOutputFile::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_715_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HOutputFile::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_715_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOutputFile*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_715_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOutputFile::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_715_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOutputFile::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_715_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOutputFile::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_715_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOutputFile::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PatDict_715_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HOutputFile* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HOutputFile(*(HOutputFile*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HOutputFile));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HOutputFile G__THOutputFile;
static int G__PatDict_715_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HOutputFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HOutputFile*) (soff+(sizeof(HOutputFile)*i)))->~G__THOutputFile();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HOutputFile*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HOutputFile*) (soff))->~G__THOutputFile();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PatDict_715_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOutputFile* dest = (HOutputFile*) G__getstructoffset();
   *dest = *(HOutputFile*) libp->para[0].ref;
   const HOutputFile& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HOutput */
static int G__PatDict_718_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOutput* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HOutput((HOutputFile*) G__int(libp->para[0]));
   } else {
     p = new((void*) gvp) HOutput((HOutputFile*) G__int(libp->para[0]));
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HOutput));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_718_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOutput*) G__getstructoffset())->book((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_718_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOutput*) G__getstructoffset())->book((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_718_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOutput*) G__getstructoffset())->book(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1]))
, *((string*) G__int(libp->para[2])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_718_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOutput*) G__getstructoffset())->book(*((string*) G__int(libp->para[0])), *((string*) G__int(libp->para[1])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_718_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HOutput*) G__getstructoffset())->setSuffix((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HOutput*) G__getstructoffset())->setSuffix();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_718_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      ((HOutput*) G__getstructoffset())->setPrefix((const char*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HOutput*) G__getstructoffset())->setPrefix();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_718_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOutput*) G__getstructoffset())->setSuffix(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_718_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOutput*) G__getstructoffset())->setPrefix(*((string*) G__int(libp->para[0])));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_718_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HOutput*) G__getstructoffset())->fixed());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_718_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOutput*) G__getstructoffset())->set(*((string*) G__int(libp->para[0])), (float) G__double(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_718_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOutput*) G__getstructoffset())->fill();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_718_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HOutput::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_718_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOutput::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_718_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HOutput::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_718_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HOutput::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_718_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HOutput*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_718_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOutput*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_718_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOutput*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_718_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HOutput*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_718_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOutput::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_718_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOutput::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_718_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HOutput::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_718_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HOutput::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PatDict_718_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HOutput* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HOutput(*(HOutput*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HOutput));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HOutput G__THOutput;
static int G__PatDict_718_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HOutput*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HOutput*) (soff+(sizeof(HOutput)*i)))->~G__THOutput();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HOutput*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HOutput*) (soff))->~G__THOutput();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PatDict_718_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HOutput* dest = (HOutput*) G__getstructoffset();
   *dest = *(HOutput*) libp->para[0].ref;
   const HOutput& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HPool */
static int G__PatDict_724_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HPool*) G__getstructoffset())->setOutput((HOutputFile*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_724_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HPool*) G__getstructoffset())->add((const char*) G__int(libp->para[0]), (CommonDefinitions::EParticle) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_724_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HPool*) G__getstructoffset())->add((const char*) G__int(libp->para[0]), (CommonDefinitions::EParticle) G__int(libp->para[1])
, (CommonDefinitions::EParticle) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_724_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HPool*) G__getstructoffset())->add((const char*) G__int(libp->para[0]), (CommonDefinitions::EParticle) G__int(libp->para[1])
, (CommonDefinitions::EParticle) G__int(libp->para[2]), (CommonDefinitions::EParticle) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_724_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HPool*) G__getstructoffset())->add((const char*) G__int(libp->para[0]), (CommonDefinitions::EParticle) G__int(libp->para[1])
, (CommonDefinitions::EParticle) G__int(libp->para[2]), (CommonDefinitions::EParticle) G__int(libp->para[3])
, (CommonDefinitions::EParticle) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_724_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HPool*) G__getstructoffset())->add((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_724_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HPool*) G__getstructoffset())->add((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_724_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HPool*) G__getstructoffset())->add((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_724_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HPool*) G__getstructoffset())->add((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_724_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HPool*) G__getstructoffset())->set((HEventPool*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_724_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HPool*) G__getstructoffset())->getEventPool());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_724_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HPool::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_724_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HPool::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_724_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HPool::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_724_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HPool::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_724_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HPool*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_724_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HPool*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_724_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HPool*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_724_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HPool*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_724_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HPool::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_724_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HPool::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_724_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HPool::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_724_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HPool::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HPool G__THPool;
static int G__PatDict_724_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HPool*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HPool*) (soff+(sizeof(HPool)*i)))->~G__THPool();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HPool*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HPool*) (soff))->~G__THPool();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PatDict_724_0_28(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HPool* dest = (HPool*) G__getstructoffset();
   *dest = *(HPool*) libp->para[0].ref;
   const HPool& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HParticleDataPool */
static int G__PatDict_729_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParticleDataPool*) G__getstructoffset())->addPartCand((CommonDefinitions::EParticle) G__int(libp->para[0]), (HPidTrackCand*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_729_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParticleDataPool*) G__getstructoffset())->addPartCand((CommonDefinitions::EParticle) G__int(libp->para[0]), (HParticleCandidate*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_729_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((HParticleDataPool*) G__getstructoffset())->getParticle((CommonDefinitions::EParticle) G__int(libp->para[0]), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((HParticleDataPool*) G__getstructoffset())->getParticle((CommonDefinitions::EParticle) G__int(libp->para[0])));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_729_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HParticleDataPool*) G__getstructoffset())->getParticle((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_729_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HParticleDataPool*) G__getstructoffset())->isPart((CommonDefinitions::EParticle) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_729_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HParticleDataPool*) G__getstructoffset())->getNum((CommonDefinitions::EParticle) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_729_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((const HParticleDataPool*) G__getstructoffset())->getSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_729_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParticleDataPool*) G__getstructoffset())->removeParticle((HParticleCandidate*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_729_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         CommonDefinitions::MultiParticleIterPair* pobj;
         CommonDefinitions::MultiParticleIterPair xobj = ((HParticleDataPool*) G__getstructoffset())->equal_range((CommonDefinitions::EParticle) G__int(libp->para[0]));
         pobj = new CommonDefinitions::MultiParticleIterPair(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_729_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         CommonDefinitions::MultiParticleIter* pobj;
         CommonDefinitions::MultiParticleIter xobj = ((HParticleDataPool*) G__getstructoffset())->lower_bound((CommonDefinitions::EParticle) G__int(libp->para[0]));
         pobj = new CommonDefinitions::MultiParticleIter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_729_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         CommonDefinitions::MultiParticleIter* pobj;
         CommonDefinitions::MultiParticleIter xobj = ((HParticleDataPool*) G__getstructoffset())->upper_bound((CommonDefinitions::EParticle) G__int(libp->para[0]));
         pobj = new CommonDefinitions::MultiParticleIter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_729_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParticleDataPool*) G__getstructoffset())->dump();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_729_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HParticleDataPool::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_729_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParticleDataPool::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_729_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HParticleDataPool::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_729_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HParticleDataPool::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_729_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HParticleDataPool*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_729_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParticleDataPool*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_729_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParticleDataPool*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_729_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParticleDataPool*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_729_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParticleDataPool::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_729_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParticleDataPool::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_729_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParticleDataPool::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_729_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParticleDataPool::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HParticleDataPool G__THParticleDataPool;
static int G__PatDict_729_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HParticleDataPool*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HParticleDataPool*) (soff+(sizeof(HParticleDataPool)*i)))->~G__THParticleDataPool();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HParticleDataPool*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HParticleDataPool*) (soff))->~G__THParticleDataPool();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PatDict_729_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParticleDataPool* dest = (HParticleDataPool*) G__getstructoffset();
   *dest = *(HParticleDataPool*) libp->para[0].ref;
   const HParticleDataPool& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HParticlePool */
static int G__PatDict_752_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParticlePool*) G__getstructoffset())->reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_752_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParticlePool*) G__getstructoffset())->loop((HIterator*) G__int(libp->para[0]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_752_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 3:
      ((HParticlePool*) G__getstructoffset())->fill((HIterator*) G__int(libp->para[0]), (HIterator*) G__int(libp->para[1])
, (HIterator*) G__int(libp->para[2]));
      G__setnull(result7);
      break;
   case 2:
      ((HParticlePool*) G__getstructoffset())->fill((HIterator*) G__int(libp->para[0]), (HIterator*) G__int(libp->para[1]));
      G__setnull(result7);
      break;
   case 1:
      ((HParticlePool*) G__getstructoffset())->fill((HIterator*) G__int(libp->para[0]));
      G__setnull(result7);
      break;
   case 0:
      ((HParticlePool*) G__getstructoffset())->fill();
      G__setnull(result7);
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_752_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HParticlePool::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_752_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParticlePool::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_752_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HParticlePool::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_752_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HParticlePool::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_752_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParticlePool*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_752_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParticlePool::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_752_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParticlePool::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_752_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParticlePool::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_752_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParticlePool::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HParticlePool G__THParticlePool;
static int G__PatDict_752_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HParticlePool*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HParticlePool*) (soff+(sizeof(HParticlePool)*i)))->~G__THParticlePool();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HParticlePool*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HParticlePool*) (soff))->~G__THParticlePool();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PatDict_752_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParticlePool* dest = (HParticlePool*) G__getstructoffset();
   *dest = *(HParticlePool*) libp->para[0].ref;
   const HParticlePool& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HTimeCut */
static int G__PatDict_757_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HTimeCut* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HTimeCut(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HTimeCut(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HTimeCut((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HTimeCut((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HTimeCut((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HTimeCut((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HTimeCut));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_757_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HTimeCut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_757_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTimeCut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_757_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HTimeCut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_757_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HTimeCut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_757_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HTimeCut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_757_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTimeCut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_757_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HTimeCut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_757_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTimeCut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_757_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HTimeCut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PatDict_757_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HTimeCut* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HTimeCut(*(HTimeCut*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HTimeCut));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HTimeCut G__THTimeCut;
static int G__PatDict_757_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HTimeCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HTimeCut*) (soff+(sizeof(HTimeCut)*i)))->~G__THTimeCut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HTimeCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HTimeCut*) (soff))->~G__THTimeCut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HGraphCut */
static int G__PatDict_769_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGraphCut* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGraphCut(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HGraphCut(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGraphCut((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HGraphCut((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HGraphCut((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HGraphCut((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HGraphCut));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_769_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HGraphCut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_769_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGraphCut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_769_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HGraphCut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_769_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HGraphCut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_769_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HGraphCut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_769_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGraphCut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_769_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGraphCut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_769_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HGraphCut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_769_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HGraphCut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PatDict_769_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HGraphCut* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HGraphCut(*(HGraphCut*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HGraphCut));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HGraphCut G__THGraphCut;
static int G__PatDict_769_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HGraphCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HGraphCut*) (soff+(sizeof(HGraphCut)*i)))->~G__THGraphCut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HGraphCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HGraphCut*) (soff))->~G__THGraphCut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PatDict_769_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HGraphCut* dest = (HGraphCut*) G__getstructoffset();
   *dest = *(HGraphCut*) libp->para[0].ref;
   const HGraphCut& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HDedxCut */
static int G__PatDict_770_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HDedxCut* p = NULL;
   char* gvp = (char*) G__getgvp();
   switch (libp->paran) {
   case 3:
     //m: 3
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HDedxCut(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     } else {
       p = new((void*) gvp) HDedxCut(
(const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]));
     }
     break;
   case 2:
     //m: 2
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HDedxCut((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     } else {
       p = new((void*) gvp) HDedxCut((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1]));
     }
     break;
   case 1:
     //m: 1
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HDedxCut((const char*) G__int(libp->para[0]));
     } else {
       p = new((void*) gvp) HDedxCut((const char*) G__int(libp->para[0]));
     }
     break;
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HDedxCut));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_770_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HDedxCut::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_770_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HDedxCut::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_770_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HDedxCut::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_770_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HDedxCut::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_770_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HDedxCut*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_770_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HDedxCut::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_770_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HDedxCut::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_770_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HDedxCut::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_770_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HDedxCut::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PatDict_770_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HDedxCut* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HDedxCut(*(HDedxCut*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HDedxCut));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HDedxCut G__THDedxCut;
static int G__PatDict_770_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HDedxCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HDedxCut*) (soff+(sizeof(HDedxCut)*i)))->~G__THDedxCut();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HDedxCut*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HDedxCut*) (soff))->~G__THDedxCut();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PatDict_770_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HDedxCut* dest = (HDedxCut*) G__getstructoffset();
   *dest = *(HDedxCut*) libp->para[0].ref;
   const HDedxCut& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HParticlePlayerHandle */
static int G__PatDict_771_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParticlePlayerHandle* p = NULL;
   char* gvp = (char*) G__getgvp();
   int n = G__getaryconstruct();
   if (n) {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParticlePlayerHandle[n];
     } else {
       p = new((void*) gvp) HParticlePlayerHandle[n];
     }
   } else {
     if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
       p = new HParticlePlayerHandle;
     } else {
       p = new((void*) gvp) HParticlePlayerHandle;
     }
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HParticlePlayerHandle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic copy constructor
static int G__PatDict_771_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)

{
   HParticlePlayerHandle* p;
   void* tmp = (void*) G__int(libp->para[0]);
   p = new HParticlePlayerHandle(*(HParticlePlayerHandle*) tmp);
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HParticlePlayerHandle));
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HParticlePlayerHandle G__THParticlePlayerHandle;
static int G__PatDict_771_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HParticlePlayerHandle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HParticlePlayerHandle*) (soff+(sizeof(HParticlePlayerHandle)*i)))->~G__THParticlePlayerHandle();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HParticlePlayerHandle*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HParticlePlayerHandle*) (soff))->~G__THParticlePlayerHandle();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PatDict_771_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParticlePlayerHandle* dest = (HParticlePlayerHandle*) G__getstructoffset();
   *dest = *(HParticlePlayerHandle*) libp->para[0].ref;
   const HParticlePlayerHandle& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HHypDataPool */
static int G__PatDict_786_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HHypDataPool*) G__getstructoffset())->addHypCand(*((string*) G__int(libp->para[0])), (HHypCandidate*) G__int(libp->para[1]));
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_786_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 2:
      G__letint(result7, 85, (long) ((HHypDataPool*) G__getstructoffset())->getHyp(*((string*) G__int(libp->para[0])), (int) G__int(libp->para[1])));
      break;
   case 1:
      G__letint(result7, 85, (long) ((HHypDataPool*) G__getstructoffset())->getHyp(*((string*) G__int(libp->para[0]))));
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_786_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   switch (libp->paran) {
   case 1:
      G__letint(result7, 85, (long) ((HHypDataPool*) G__getstructoffset())->getHyp((unsigned int) G__int(libp->para[0])));
      break;
   case 0:
      G__letint(result7, 85, (long) ((HHypDataPool*) G__getstructoffset())->getHyp());
      break;
   }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_786_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         string* pobj;
         string xobj = ((HHypDataPool*) G__getstructoffset())->getName((int) G__int(libp->para[0]));
         pobj = new string(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_786_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HHypDataPool*) G__getstructoffset())->getSize());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_786_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HHypDataPool*) G__getstructoffset())->size());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_786_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HHypDataPool*) G__getstructoffset())->getNum(*((string*) G__int(libp->para[0]))));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_786_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) ((HHypDataPool*) G__getstructoffset())->getNum((int) G__int(libp->para[0])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_786_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         CommonDefinitions::MultiHypIterPair* pobj;
         CommonDefinitions::MultiHypIterPair xobj = ((HHypDataPool*) G__getstructoffset())->equal_range(*((string*) G__int(libp->para[0])));
         pobj = new CommonDefinitions::MultiHypIterPair(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_786_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         CommonDefinitions::MultiHypIter* pobj;
         CommonDefinitions::MultiHypIter xobj = ((HHypDataPool*) G__getstructoffset())->lower_bound(*((string*) G__int(libp->para[0])));
         pobj = new CommonDefinitions::MultiHypIter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_786_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      {
         CommonDefinitions::MultiHypIter* pobj;
         CommonDefinitions::MultiHypIter xobj = ((HHypDataPool*) G__getstructoffset())->upper_bound(*((string*) G__int(libp->para[0])));
         pobj = new CommonDefinitions::MultiHypIter(xobj);
         result7->obj.i = (long) ((void*) pobj);
         result7->ref = result7->obj.i;
         G__store_tempobject(*result7);
      }
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_786_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HHypDataPool*) G__getstructoffset())->dump();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_786_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HHypDataPool::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_786_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HHypDataPool::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_786_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HHypDataPool::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_786_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HHypDataPool::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_786_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((const HHypDataPool*) G__getstructoffset())->IsA());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_786_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HHypDataPool*) G__getstructoffset())->ShowMembers(*(TMemberInspector*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_786_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HHypDataPool*) G__getstructoffset())->Streamer(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_786_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HHypDataPool*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_786_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HHypDataPool::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_786_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HHypDataPool::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_786_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HHypDataPool::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_786_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HHypDataPool::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HHypDataPool G__THHypDataPool;
static int G__PatDict_786_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HHypDataPool*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HHypDataPool*) (soff+(sizeof(HHypDataPool)*i)))->~G__THHypDataPool();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HHypDataPool*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HHypDataPool*) (soff))->~G__THHypDataPool();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PatDict_786_0_27(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HHypDataPool* dest = (HHypDataPool*) G__getstructoffset();
   *dest = *(HHypDataPool*) libp->para[0].ref;
   const HHypDataPool& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HHypPool */
static int G__PatDict_788_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HHypPool*) G__getstructoffset())->reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_788_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HHypPool*) G__getstructoffset())->loop(*(HParticlePool*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_788_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HHypPool*) G__getstructoffset())->fill();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_788_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HHypPool::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_788_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HHypPool::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_788_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HHypPool::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_788_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HHypPool::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_788_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HHypPool*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_788_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HHypPool::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_788_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HHypPool::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_788_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HHypPool::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_788_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HHypPool::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HHypPool G__THHypPool;
static int G__PatDict_788_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HHypPool*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HHypPool*) (soff+(sizeof(HHypPool)*i)))->~G__THHypPool();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HHypPool*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HHypPool*) (soff))->~G__THHypPool();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PatDict_788_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HHypPool* dest = (HHypPool*) G__getstructoffset();
   *dest = *(HHypPool*) libp->para[0].ref;
   const HHypPool& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HPidPool */
static int G__PatDict_795_0_2(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HPidPool*) G__getstructoffset())->add((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (CommonDefinitions::EParticle) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_795_0_3(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HPidPool*) G__getstructoffset())->add((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (CommonDefinitions::EParticle) G__int(libp->para[2]), (CommonDefinitions::EParticle) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_795_0_4(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HPidPool*) G__getstructoffset())->add((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (CommonDefinitions::EParticle) G__int(libp->para[2]), (CommonDefinitions::EParticle) G__int(libp->para[3])
, (CommonDefinitions::EParticle) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_795_0_5(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HPidPool*) G__getstructoffset())->add((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (CommonDefinitions::EParticle) G__int(libp->para[2]), (CommonDefinitions::EParticle) G__int(libp->para[3])
, (CommonDefinitions::EParticle) G__int(libp->para[4]), (CommonDefinitions::EParticle) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_795_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HPidPool*) G__getstructoffset())->add((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_795_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HPidPool*) G__getstructoffset())->add((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_795_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HPidPool*) G__getstructoffset())->add((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_795_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 103, (long) ((HPidPool*) G__getstructoffset())->add((const char*) G__int(libp->para[0]), (const char*) G__int(libp->para[1])
, (const char*) G__int(libp->para[2]), (const char*) G__int(libp->para[3])
, (const char*) G__int(libp->para[4]), (const char*) G__int(libp->para[5])));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_795_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HPidPool*) G__getstructoffset())->reset();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_795_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HPidPool*) G__getstructoffset())->loop(*(HHypPool*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_795_0_12(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HPidPool*) G__getstructoffset())->fill();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_795_0_13(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HPidPool::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_795_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HPidPool::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_795_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HPidPool::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_795_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HPidPool::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_795_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HPidPool*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_795_0_21(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HPidPool::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_795_0_22(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HPidPool::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_795_0_23(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HPidPool::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_795_0_24(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HPidPool::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HPidPool G__THPidPool;
static int G__PatDict_795_0_25(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 0
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HPidPool*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HPidPool*) (soff+(sizeof(HPidPool)*i)))->~G__THPidPool();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HPidPool*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HPidPool*) (soff))->~G__THPidPool();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic assignment operator
static int G__PatDict_795_0_26(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HPidPool* dest = (HPidPool*) G__getstructoffset();
   *dest = *(HPidPool*) libp->para[0].ref;
   const HPidPool& obj = *dest;
   result7->ref = (long) (&obj);
   result7->obj.i = (long) (&obj);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HTrackPlayer */
static int G__PatDict_817_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HTrackPlayer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 1
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HTrackPlayer(*(HParticlePool*) libp->para[0].ref);
   } else {
     p = new((void*) gvp) HTrackPlayer(*(HParticlePool*) libp->para[0].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HTrackPlayer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_817_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HTrackPlayer*) G__getstructoffset())->getPool());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_817_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HTrackPlayer*) G__getstructoffset())->add(*(HCut*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_817_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HTrackPlayer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_817_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTrackPlayer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_817_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HTrackPlayer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_817_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HTrackPlayer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_817_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HTrackPlayer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_817_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTrackPlayer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_817_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HTrackPlayer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_817_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HTrackPlayer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_817_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HTrackPlayer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HTrackPlayer G__THTrackPlayer;
static int G__PatDict_817_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HTrackPlayer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HTrackPlayer*) (soff+(sizeof(HTrackPlayer)*i)))->~G__THTrackPlayer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HTrackPlayer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HTrackPlayer*) (soff))->~G__THTrackPlayer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HParticlePlayer */
static int G__PatDict_822_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HParticlePlayer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HParticlePlayer(*(HParticlePool*) libp->para[0].ref, *(HHypPool*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) HParticlePlayer(*(HParticlePool*) libp->para[0].ref, *(HHypPool*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HParticlePlayer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_822_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParticlePlayer*) G__getstructoffset())->add(*(HCut*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_822_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HParticlePlayer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_822_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParticlePlayer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_822_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HParticlePlayer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_822_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HParticlePlayer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_822_0_14(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HParticlePlayer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_822_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParticlePlayer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_822_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParticlePlayer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_822_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HParticlePlayer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_822_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HParticlePlayer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HParticlePlayer G__THParticlePlayer;
static int G__PatDict_822_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HParticlePlayer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HParticlePlayer*) (soff+(sizeof(HParticlePlayer)*i)))->~G__THParticlePlayer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HParticlePlayer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HParticlePlayer*) (soff))->~G__THParticlePlayer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* HHypPlayer */
static int G__PatDict_823_0_1(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   HHypPlayer* p = NULL;
   char* gvp = (char*) G__getgvp();
   //m: 2
   if ((gvp == (char*)G__PVOID) || (gvp == 0)) {
     p = new HHypPlayer(*(HHypPool*) libp->para[0].ref, *(HPidPool*) libp->para[1].ref);
   } else {
     p = new((void*) gvp) HHypPlayer(*(HHypPool*) libp->para[0].ref, *(HPidPool*) libp->para[1].ref);
   }
   result7->obj.i = (long) p;
   result7->ref = (long) p;
   G__set_tagnum(result7,G__get_linked_tagnum(&G__PatDictLN_HHypPlayer));
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_823_0_6(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) ((HHypPlayer*) G__getstructoffset())->getPool());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_823_0_7(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HHypPlayer*) G__getstructoffset())->add(*(HCut*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_823_0_8(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 85, (long) HHypPlayer::Class());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_823_0_9(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HHypPlayer::Class_Name());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_823_0_10(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 115, (long) HHypPlayer::Class_Version());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_823_0_11(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      HHypPlayer::Dictionary();
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_823_0_15(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      ((HHypPlayer*) G__getstructoffset())->StreamerNVirtual(*(TBuffer*) libp->para[0].ref);
      G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_823_0_16(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HHypPlayer::DeclFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_823_0_17(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HHypPlayer::ImplFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_823_0_18(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 67, (long) HHypPlayer::ImplFileName());
   return(1 || funcname || hash || result7 || libp) ;
}

static int G__PatDict_823_0_19(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
      G__letint(result7, 105, (long) HHypPlayer::DeclFileLine());
   return(1 || funcname || hash || result7 || libp) ;
}

// automatic destructor
typedef HHypPlayer G__THHypPlayer;
static int G__PatDict_823_0_20(G__value* result7, G__CONST char* funcname, struct G__param* libp, int hash)
{
   char* gvp = (char*) G__getgvp();
   long soff = G__getstructoffset();
   int n = G__getaryconstruct();
   //
   //has_a_delete: 1
   //has_own_delete1arg: 0
   //has_own_delete2arg: 0
   //
   if (!soff) {
     return(1);
   }
   if (n) {
     if (gvp == (char*)G__PVOID) {
       delete[] (HHypPlayer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       for (int i = n - 1; i >= 0; --i) {
         ((HHypPlayer*) (soff+(sizeof(HHypPlayer)*i)))->~G__THHypPlayer();
       }
       G__setgvp((long)gvp);
     }
   } else {
     if (gvp == (char*)G__PVOID) {
       delete (HHypPlayer*) soff;
     } else {
       G__setgvp((long) G__PVOID);
       ((HHypPlayer*) (soff))->~G__THHypPlayer();
       G__setgvp((long)gvp);
     }
   }
   G__setnull(result7);
   return(1 || funcname || hash || result7 || libp) ;
}


/* Setting up global function */

/*********************************************************
* Member function Stub
*********************************************************/

/* HParticleCandidate */

/* HParticle */

/* HHypCandidate */

/* HNtuple */

/* HCut */

/* HTrackCut */

/* HFile */

/* HOutputFile */

/* HOutput */

/* HPool */

/* HParticleDataPool */

/* HParticlePool */

/* HTimeCut */

/* HGraphCut */

/* HDedxCut */

/* HParticlePlayerHandle */

/* HHypDataPool */

/* HHypPool */

/* HPidPool */

/* HTrackPlayer */

/* HParticlePlayer */

/* HHypPlayer */

/*********************************************************
* Global function Stub
*********************************************************/

/*********************************************************
* Get size of pointer to member function
*********************************************************/
class G__Sizep2memfuncPatDict {
 public:
  G__Sizep2memfuncPatDict(): p(&G__Sizep2memfuncPatDict::sizep2memfunc) {}
    size_t sizep2memfunc() { return(sizeof(p)); }
  private:
    size_t (G__Sizep2memfuncPatDict::*p)();
};

size_t G__get_sizep2memfuncPatDict()
{
  G__Sizep2memfuncPatDict a;
  G__setsizep2memfunc((int)a.sizep2memfunc());
  return((size_t)a.sizep2memfunc());
}


/*********************************************************
* virtual base class offset calculation interface
*********************************************************/

   /* Setting up class inheritance */

/*********************************************************
* Inheritance information setup/
*********************************************************/
extern "C" void G__cpp_setup_inheritancePatDict() {

   /* Setting up class inheritance */
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PatDictLN_HHypCandidate))) {
     HHypCandidate *G__Lderived;
     G__Lderived=(HHypCandidate*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HHypCandidate),G__get_linked_tagnum(&G__PatDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PatDictLN_HNtuple))) {
     HNtuple *G__Lderived;
     G__Lderived=(HNtuple*)0x1000;
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HNtuple),G__get_linked_tagnum(&G__PatDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PatDictLN_HTrackCut))) {
     HTrackCut *G__Lderived;
     G__Lderived=(HTrackCut*)0x1000;
     {
       HCut *G__Lpbase=(HCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HTrackCut),G__get_linked_tagnum(&G__PatDictLN_HCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PatDictLN_HOutputFile))) {
     HOutputFile *G__Lderived;
     G__Lderived=(HOutputFile*)0x1000;
     {
       HFile *G__Lpbase=(HFile*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HOutputFile),G__get_linked_tagnum(&G__PatDictLN_HFile),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PatDictLN_HParticlePool))) {
     HParticlePool *G__Lderived;
     G__Lderived=(HParticlePool*)0x1000;
     {
       HPool *G__Lpbase=(HPool*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HParticlePool),G__get_linked_tagnum(&G__PatDictLN_HPool),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HParticleDataPool *G__Lpbase=(HParticleDataPool*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HParticlePool),G__get_linked_tagnum(&G__PatDictLN_HParticleDataPool),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PatDictLN_HTimeCut))) {
     HTimeCut *G__Lderived;
     G__Lderived=(HTimeCut*)0x1000;
     {
       HCut *G__Lpbase=(HCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HTimeCut),G__get_linked_tagnum(&G__PatDictLN_HCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PatDictLN_HGraphCut))) {
     HGraphCut *G__Lderived;
     G__Lderived=(HGraphCut*)0x1000;
     {
       HCut *G__Lpbase=(HCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HGraphCut),G__get_linked_tagnum(&G__PatDictLN_HCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PatDictLN_HDedxCut))) {
     HDedxCut *G__Lderived;
     G__Lderived=(HDedxCut*)0x1000;
     {
       HCut *G__Lpbase=(HCut*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HDedxCut),G__get_linked_tagnum(&G__PatDictLN_HCut),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PatDictLN_HHypPool))) {
     HHypPool *G__Lderived;
     G__Lderived=(HHypPool*)0x1000;
     {
       HPool *G__Lpbase=(HPool*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HHypPool),G__get_linked_tagnum(&G__PatDictLN_HPool),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HHypDataPool *G__Lpbase=(HHypDataPool*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HHypPool),G__get_linked_tagnum(&G__PatDictLN_HHypDataPool),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PatDictLN_HPidPool))) {
     HPidPool *G__Lderived;
     G__Lderived=(HPidPool*)0x1000;
     {
       HPool *G__Lpbase=(HPool*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HPidPool),G__get_linked_tagnum(&G__PatDictLN_HPool),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HHypDataPool *G__Lpbase=(HHypDataPool*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HPidPool),G__get_linked_tagnum(&G__PatDictLN_HHypDataPool),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PatDictLN_HTrackPlayer))) {
     HTrackPlayer *G__Lderived;
     G__Lderived=(HTrackPlayer*)0x1000;
     {
       HReconstructor *G__Lpbase=(HReconstructor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HTrackPlayer),G__get_linked_tagnum(&G__PatDictLN_HReconstructor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HTask *G__Lpbase=(HTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HTrackPlayer),G__get_linked_tagnum(&G__PatDictLN_HTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HTrackPlayer),G__get_linked_tagnum(&G__PatDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HTrackPlayer),G__get_linked_tagnum(&G__PatDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PatDictLN_HParticlePlayer))) {
     HParticlePlayer *G__Lderived;
     G__Lderived=(HParticlePlayer*)0x1000;
     {
       HReconstructor *G__Lpbase=(HReconstructor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HParticlePlayer),G__get_linked_tagnum(&G__PatDictLN_HReconstructor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HTask *G__Lpbase=(HTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HParticlePlayer),G__get_linked_tagnum(&G__PatDictLN_HTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HParticlePlayer),G__get_linked_tagnum(&G__PatDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HParticlePlayer),G__get_linked_tagnum(&G__PatDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
   if(0==G__getnumbaseclass(G__get_linked_tagnum(&G__PatDictLN_HHypPlayer))) {
     HHypPlayer *G__Lderived;
     G__Lderived=(HHypPlayer*)0x1000;
     {
       HReconstructor *G__Lpbase=(HReconstructor*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HHypPlayer),G__get_linked_tagnum(&G__PatDictLN_HReconstructor),(long)G__Lpbase-(long)G__Lderived,1,1);
     }
     {
       HTask *G__Lpbase=(HTask*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HHypPlayer),G__get_linked_tagnum(&G__PatDictLN_HTask),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TNamed *G__Lpbase=(TNamed*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HHypPlayer),G__get_linked_tagnum(&G__PatDictLN_TNamed),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
     {
       TObject *G__Lpbase=(TObject*)G__Lderived;
       G__inheritance_setup(G__get_linked_tagnum(&G__PatDictLN_HHypPlayer),G__get_linked_tagnum(&G__PatDictLN_TObject),(long)G__Lpbase-(long)G__Lderived,1,0);
     }
   }
}

/*********************************************************
* typedef information setup/
*********************************************************/
extern "C" void G__cpp_setup_typetablePatDict() {

   /* Setting up typedef entry */
   G__search_typename2("Int_t",105,-1,0,-1);
   G__setnewtype(-1,"Signed integer 4 bytes (int)",0);
   G__search_typename2("Float_t",102,-1,0,-1);
   G__setnewtype(-1,"Float 4 bytes (float)",0);
   G__search_typename2("Bool_t",103,-1,0,-1);
   G__setnewtype(-1,"Boolean (0=false, 1=true) (bool)",0);
   G__search_typename2("Version_t",115,-1,0,-1);
   G__setnewtype(-1,"Class version identifier (short)",0);
   G__search_typename2("vector<ROOT::TSchemaHelper>",117,G__get_linked_tagnum(&G__PatDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<TVirtualArray*>",117,G__get_linked_tagnum(&G__PatDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<EParticle,HParticleCandidate*>",117,G__get_linked_tagnum(&G__PatDictLN_multimaplECommonDefinitionscLcLEParticlecOHParticleCandidatemUcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOHParticleCandidatemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<CommonDefinitions::EParticle,HParticleCandidate*>",117,G__get_linked_tagnum(&G__PatDictLN_multimaplECommonDefinitionscLcLEParticlecOHParticleCandidatemUcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOHParticleCandidatemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<CommonDefinitions::EParticle,HParticleCandidate*,less<CommonDefinitions::EParticle> >",117,G__get_linked_tagnum(&G__PatDictLN_multimaplECommonDefinitionscLcLEParticlecOHParticleCandidatemUcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOHParticleCandidatemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HParticle*>",117,G__get_linked_tagnum(&G__PatDictLN_vectorlEHParticlemUcOallocatorlEHParticlemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlEHParticlemUcOallocatorlEHParticlemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlEHParticlemUcOallocatorlEHParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlEHParticlemUcOallocatorlEHParticlemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlEHParticlemUcOallocatorlEHParticlemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<EParticle,int>",117,G__get_linked_tagnum(&G__PatDictLN_maplECommonDefinitionscLcLEParticlecOintcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<CommonDefinitions::EParticle,int>",117,G__get_linked_tagnum(&G__PatDictLN_maplECommonDefinitionscLcLEParticlecOintcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<CommonDefinitions::EParticle,int,less<CommonDefinitions::EParticle> >",117,G__get_linked_tagnum(&G__PatDictLN_maplECommonDefinitionscLcLEParticlecOintcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<std::string,HHypCandidate*>",117,G__get_linked_tagnum(&G__PatDictLN_multimaplEstringcOHHypCandidatemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHHypCandidatemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<string,HHypCandidate*>",117,G__get_linked_tagnum(&G__PatDictLN_multimaplEstringcOHHypCandidatemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHHypCandidatemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<string,HHypCandidate*>",117,G__get_linked_tagnum(&G__PatDictLN_multimaplEstringcOHHypCandidatemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHHypCandidatemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<string,HHypCandidate*,less<string> >",117,G__get_linked_tagnum(&G__PatDictLN_multimaplEstringcOHHypCandidatemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHHypCandidatemUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<std::string,HHypCandidate*>",117,G__get_linked_tagnum(&G__PatDictLN_pairlEstringcOHHypCandidatemUgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<string,HHypCandidate*>",117,G__get_linked_tagnum(&G__PatDictLN_pairlEstringcOHHypCandidatemUgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,int>",117,G__get_linked_tagnum(&G__PatDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,int>",117,G__get_linked_tagnum(&G__PatDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<std::string,std::string>",117,G__get_linked_tagnum(&G__PatDictLN_multimaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<string,std::string>",117,G__get_linked_tagnum(&G__PatDictLN_multimaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<string,string>",117,G__get_linked_tagnum(&G__PatDictLN_multimaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("multimap<string,string,less<string> >",117,G__get_linked_tagnum(&G__PatDictLN_multimaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,float>",117,G__get_linked_tagnum(&G__PatDictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,float>",117,G__get_linked_tagnum(&G__PatDictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<EParticle>",117,G__get_linked_tagnum(&G__PatDictLN_vectorlECommonDefinitionscLcLEParticlecOallocatorlECommonDefinitionscLcLEParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlECommonDefinitionscLcLEParticlecOallocatorlECommonDefinitionscLcLEParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlECommonDefinitionscLcLEParticlecOallocatorlECommonDefinitionscLcLEParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlECommonDefinitionscLcLEParticlecOallocatorlECommonDefinitionscLcLEParticlegRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlECommonDefinitionscLcLEParticlecOallocatorlECommonDefinitionscLcLEParticlegRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<CommonDefinitions::EParticle>",117,G__get_linked_tagnum(&G__PatDictLN_vectorlECommonDefinitionscLcLEParticlecOallocatorlECommonDefinitionscLcLEParticlegRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<std::bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__PatDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,std::ptrdiff_t,const TObject**,const TObject*&>",117,G__get_linked_tagnum(&G__PatDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*>",117,G__get_linked_tagnum(&G__PatDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long>",117,G__get_linked_tagnum(&G__PatDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("iterator<bidirectional_iterator_tag,TObject*,long,const TObject**>",117,G__get_linked_tagnum(&G__PatDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Float_t>",117,G__get_linked_tagnum(&G__PatDictLN_TVectorTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TVectorT<Double_t>",117,G__get_linked_tagnum(&G__PatDictLN_TVectorTlEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<TFile*>",117,G__get_linked_tagnum(&G__PatDictLN_listlETFilemUcOallocatorlETFilemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Float_t>",117,G__get_linked_tagnum(&G__PatDictLN_TMatrixTBaselEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTBase<Double_t>",117,G__get_linked_tagnum(&G__PatDictLN_TMatrixTBaselEdoublegR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixT<Float_t>",117,G__get_linked_tagnum(&G__PatDictLN_TMatrixTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow_const<Float_t>",117,G__get_linked_tagnum(&G__PatDictLN_TMatrixTRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn_const<Float_t>",117,G__get_linked_tagnum(&G__PatDictLN_TMatrixTColumn_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag_const<Float_t>",117,G__get_linked_tagnum(&G__PatDictLN_TMatrixTDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat_const<Float_t>",117,G__get_linked_tagnum(&G__PatDictLN_TMatrixTFlat_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub_const<Float_t>",117,G__get_linked_tagnum(&G__PatDictLN_TMatrixTSub_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow_const<Float_t>",117,G__get_linked_tagnum(&G__PatDictLN_TMatrixTSparseRow_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag_const<Float_t>",117,G__get_linked_tagnum(&G__PatDictLN_TMatrixTSparseDiag_constlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTRow<Float_t>",117,G__get_linked_tagnum(&G__PatDictLN_TMatrixTRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTColumn<Float_t>",117,G__get_linked_tagnum(&G__PatDictLN_TMatrixTColumnlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTDiag<Float_t>",117,G__get_linked_tagnum(&G__PatDictLN_TMatrixTDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTFlat<Float_t>",117,G__get_linked_tagnum(&G__PatDictLN_TMatrixTFlatlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSub<Float_t>",117,G__get_linked_tagnum(&G__PatDictLN_TMatrixTSublEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseRow<Float_t>",117,G__get_linked_tagnum(&G__PatDictLN_TMatrixTSparseRowlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TMatrixTSparseDiag<Float_t>",117,G__get_linked_tagnum(&G__PatDictLN_TMatrixTSparseDiaglEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementActionT<Float_t>",117,G__get_linked_tagnum(&G__PatDictLN_TElementActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("TElementPosActionT<Float_t>",117,G__get_linked_tagnum(&G__PatDictLN_TElementPosActionTlEfloatgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,TObjArray*>",117,G__get_linked_tagnum(&G__PatDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__PatDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*>",117,G__get_linked_tagnum(&G__PatDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,TObjArray*,less<string> >",117,G__get_linked_tagnum(&G__PatDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,Float_t>",117,G__get_linked_tagnum(&G__PatDictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Float_t>",117,G__get_linked_tagnum(&G__PatDictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<std::string,Int_t>",117,G__get_linked_tagnum(&G__PatDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<string,Int_t>",117,G__get_linked_tagnum(&G__PatDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("list<HPattern*>",117,G__get_linked_tagnum(&G__PatDictLN_listlEHPatternmUcOallocatorlEHPatternmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<FWPad*>",117,G__get_linked_tagnum(&G__PatDictLN_vectorlEFWPadmUcOallocatorlEFWPadmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlEFWPadmUcOallocatorlEFWPadmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlEFWPadmUcOallocatorlEFWPadmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlEFWPadmUcOallocatorlEFWPadmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlEFWPadmUcOallocatorlEFWPadmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<FWSingleHit*>",117,G__get_linked_tagnum(&G__PatDictLN_vectorlEFWSingleHitmUcOallocatorlEFWSingleHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlEFWSingleHitmUcOallocatorlEFWSingleHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlEFWSingleHitmUcOallocatorlEFWSingleHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlEFWSingleHitmUcOallocatorlEFWSingleHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlEFWSingleHitmUcOallocatorlEFWSingleHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<FWClusterHit*>",117,G__get_linked_tagnum(&G__PatDictLN_vectorlEFWClusterHitmUcOallocatorlEFWClusterHitmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlEFWClusterHitmUcOallocatorlEFWClusterHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlEFWClusterHitmUcOallocatorlEFWClusterHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlEFWClusterHitmUcOallocatorlEFWClusterHitmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlEFWClusterHitmUcOallocatorlEFWClusterHitmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("pair<EParticle,int>",117,G__get_linked_tagnum(&G__PatDictLN_pairlECommonDefinitionscLcLEParticlecOintgR),0,G__get_linked_tagnum(&G__PatDictLN_HHypCandidate));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::pair<EParticle,int> >",117,G__get_linked_tagnum(&G__PatDictLN_vectorlEpairlECommonDefinitionscLcLEParticlecOintgRcOallocatorlEpairlECommonDefinitionscLcLEParticlecOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<EParticle,int> >",117,G__get_linked_tagnum(&G__PatDictLN_vectorlEpairlECommonDefinitionscLcLEParticlecOintgRcOallocatorlEpairlECommonDefinitionscLcLEParticlecOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlEpairlECommonDefinitionscLcLEParticlecOintgRcOallocatorlEpairlECommonDefinitionscLcLEParticlecOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlEpairlECommonDefinitionscLcLEParticlecOintgRcOallocatorlEpairlECommonDefinitionscLcLEParticlecOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlEpairlECommonDefinitionscLcLEParticlecOintgRcOallocatorlEpairlECommonDefinitionscLcLEParticlecOintgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlEpairlECommonDefinitionscLcLEParticlecOintgRcOallocatorlEpairlECommonDefinitionscLcLEParticlecOintgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<pair<CommonDefinitions::EParticle,int> >",117,G__get_linked_tagnum(&G__PatDictLN_vectorlEpairlECommonDefinitionscLcLEParticlecOintgRcOallocatorlEpairlECommonDefinitionscLcLEParticlecOintgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<double> >",117,G__get_linked_tagnum(&G__PatDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double> >",117,G__get_linked_tagnum(&G__PatDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<double,allocator<double> > >",117,G__get_linked_tagnum(&G__PatDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,std::multimap<double,int> >",117,G__get_linked_tagnum(&G__PatDictLN_maplEintcOmultimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmultimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,multimap<double,int,less<double>,allocator<pair<const double,int> > > >",117,G__get_linked_tagnum(&G__PatDictLN_maplEintcOmultimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmultimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,multimap<double,int,less<double>,allocator<pair<const double,int> > >,less<int> >",117,G__get_linked_tagnum(&G__PatDictLN_maplEintcOmultimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmultimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<int>",117,G__get_linked_tagnum(&G__PatDictLN_vectorlEintcOallocatorlEintgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlEintcOallocatorlEintgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<std::vector<int> >",117,G__get_linked_tagnum(&G__PatDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int> >",117,G__get_linked_tagnum(&G__PatDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<vector<int,allocator<int> > >",117,G__get_linked_tagnum(&G__PatDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,std::vector<std::vector<int> > >",117,G__get_linked_tagnum(&G__PatDictLN_maplEintcOvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,std::vector<vector<int> > >",117,G__get_linked_tagnum(&G__PatDictLN_maplEintcOvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > >",117,G__get_linked_tagnum(&G__PatDictLN_maplEintcOvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("map<int,vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >,less<int> >",117,G__get_linked_tagnum(&G__PatDictLN_maplEintcOvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRsPgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HHypCandidate*>",117,G__get_linked_tagnum(&G__PatDictLN_vectorlEHHypCandidatemUcOallocatorlEHHypCandidatemUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlEHHypCandidatemUcOallocatorlEHHypCandidatemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlEHHypCandidatemUcOallocatorlEHHypCandidatemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlEHHypCandidatemUcOallocatorlEHHypCandidatemUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlEHHypCandidatemUcOallocatorlEHHypCandidatemUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("vector<HCut*>",117,G__get_linked_tagnum(&G__PatDictLN_vectorlEHCutmUcOallocatorlEHCutmUgRsPgR),0,-1);
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<const_iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlEHCutmUcOallocatorlEHCutmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlEHCutmUcOallocatorlEHCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
   G__search_typename2("reverse_iterator<iterator>",117,G__get_linked_tagnum(&G__PatDictLN_reverse_iteratorlEvectorlEHCutmUcOallocatorlEHCutmUgRsPgRcLcLiteratorgR),0,G__get_linked_tagnum(&G__PatDictLN_vectorlEHCutmUcOallocatorlEHCutmUgRsPgR));
   G__setnewtype(-1,NULL,0);
}

/*********************************************************
* Data Member information setup/
*********************************************************/

   /* Setting up class,struct,union tag member variable */

   /* HParticleCandidate */
static void G__setup_memvarHParticleCandidate(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PatDictLN_HParticleCandidate));
   { HParticleCandidate *p; p=(HParticleCandidate*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_HPidHitData),-1,-1,4,"HitData=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_HPidTrackData),-1,-1,4,"TrackData=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),G__defined_typename("NtuplePair"),-1,4,"dataPair=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLiterator),G__defined_typename("NtuplePairIter"),-1,4,"dataIter=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HParticle */
static void G__setup_memvarHParticle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PatDictLN_HParticle));
   { HParticle *p; p=(HParticle*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_HParticleCandidate),-1,-1,4,"pCand=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),G__defined_typename("NtuplePair"),-1,4,"dataPair=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLiterator),G__defined_typename("NtuplePairIter"),-1,4,"dataIter=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HHypCandidate */
static void G__setup_memvarHHypCandidate(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PatDictLN_HHypCandidate));
   { HHypCandidate *p; p=(HHypCandidate*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_vectorlEHParticlemUcOallocatorlEHParticlemUgRsPgR),G__defined_typename("ParticleCandSeq"),-1,2,"nPart=",0,"changes each event");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_vectorlEHParticlemUcOallocatorlEHParticlemUgRsPgRcLcLiterator),G__defined_typename("ParticleCandSeqIter"),-1,2,"partIter=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_HPattern),-1,-1,2,"pPattern=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_vectorlEpairlECommonDefinitionscLcLEParticlecOintgRcOallocatorlEpairlECommonDefinitionscLcLEParticlecOintgRsPgRsPgR),G__defined_typename("vector<std::pair<EParticle,int> >"),-1,4,"slot=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_vectorlEpairlECommonDefinitionscLcLEParticlecOintgRcOallocatorlEpairlECommonDefinitionscLcLEParticlecOintgRsPgRsPgRcLcLiterator),-1,-1,4,"slotIt=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"chi2=",0,"for a given combination to decide which is the best   ");
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isA=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HNtuple */
static void G__setup_memvarHNtuple(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PatDictLN_HNtuple));
   { HNtuple *p; p=(HNtuple*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TFile),-1,-1,2,"outFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,2,"cname=",0,"!");
   G__memvar_setup((void*)0,67,0,1,-1,-1,-1,2,"ctitle=",0,"!");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"cbufsize=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TNtuple),-1,-1,2,"ptrNt=",0,"!");
   G__memvar_setup((void*)0,103,0,0,-1,G__defined_typename("Bool_t"),-1,2,"isNtuple=",0,"! kTRUE if ntuple is defined");
   G__memvar_setup((void*)0,105,0,0,-1,G__defined_typename("Int_t"),-1,2,"varArrayN=",0,"! number of ntuple variables");
   G__memvar_setup((void*)0,70,0,0,-1,G__defined_typename("Float_t"),-1,2,"varArray=",0,"! table of values for ntuple to be filled with");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_string),-1,-1,2,"varList=",0,"! list of variables for ntuple");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR),G__defined_typename("map<std::string,Float_t>"),-1,2,"vKeyValue=",0,"! pair of a variable name and a value");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),G__defined_typename("map<std::string,Int_t>"),-1,2,"vKeyOrder=",0,"! pair of a variable name and its position in ntuple");
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLiterator),-1,-1,2,"mIter=",0,"! iterator for a map variable - value");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HCut */
static void G__setup_memvarHCut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PatDictLN_HCut));
   { HCut *p; p=(HCut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_listlETFilemUcOallocatorlETFilemUgRsPgR),G__defined_typename("list<TFile*>"),-1,4,"fileArr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_listlETFilemUcOallocatorlETFilemUgRsPgRcLcLiterator),-1,-1,4,"iterFileArr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_string),-1,-1,4,"name=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HTrackCut */
static void G__setup_memvarHTrackCut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PatDictLN_HTrackCut));
   { HTrackCut *p; p=(HTrackCut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HFile */
static void G__setup_memvarHFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PatDictLN_HFile));
   { HFile *p; p=(HFile*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_listlETFilemUcOallocatorlETFilemUgRsPgR),G__defined_typename("list<TFile*>"),-1,2,"fileArr=",0,(char*)NULL);
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HOutputFile */
static void G__setup_memvarHOutputFile(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PatDictLN_HOutputFile));
   { HOutputFile *p; p=(HOutputFile*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HOutput */
static void G__setup_memvarHOutput(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PatDictLN_HOutput));
   { HOutput *p; p=(HOutput*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_HOutputFile),-1,-1,4,"ptrFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_HNtuple),-1,-1,4,"ptrNtuple=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_string),-1,-1,4,"prefix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_string),-1,-1,4,"suffix=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_string),-1,-1,4,"keyword=",0,(char*)NULL);
   G__memvar_setup((void*)0,103,0,0,-1,-1,-1,4,"isFixed=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HPool */
static void G__setup_memvarHPool(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PatDictLN_HPool));
   { HPool *p; p=(HPool*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_HEventPool),-1,-1,2,"eventData=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_listlEHPatternmUcOallocatorlEHPatternmUgRsPgR),G__defined_typename("list<HPattern*>"),-1,2,"objectList=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_listlEHPatternmUcOallocatorlEHPatternmUgRsPgRcLcLiterator),-1,-1,2,"objIt=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_HOutputFile),-1,-1,2,"ptrFile=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HParticleDataPool */
static void G__setup_memvarHParticleDataPool(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PatDictLN_HParticleDataPool));
   { HParticleDataPool *p; p=(HParticleDataPool*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_multimaplECommonDefinitionscLcLEParticlecOHParticleCandidatemUcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOHParticleCandidatemUgRsPgRsPgR),G__defined_typename("MultiParticle"),-1,2,"partCand=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_maplECommonDefinitionscLcLEParticlecOintcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOintgRsPgRsPgR),G__defined_typename("ParticleNum"),-1,2,"partNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HParticlePool */
static void G__setup_memvarHParticlePool(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PatDictLN_HParticlePool));
   { HParticlePool *p; p=(HParticlePool*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_FWHit),-1,-1,4,"fw_hits=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HTimeCut */
static void G__setup_memvarHTimeCut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PatDictLN_HTimeCut));
   { HTimeCut *p; p=(HTimeCut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,4,"C=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,4,"R2D=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,1,-1,-1,-1,4,"D2R=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mom=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"theta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"phi=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"tof=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"beta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"q=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"track_length=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_TVector3),-1,-1,4,"vect=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_TLorentzVector),-1,-1,4,"part=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"delta_chi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR),G__defined_typename("vector<double>"),-1,4,"sort_idx=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR),G__defined_typename("vector<std::vector<double> >"),-1,4,"tof_new_arr=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_maplEintcOmultimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmultimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,std::multimap<double,int> >"),-1,4,"best_cand=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_maplEintcOmultimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmultimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRsPgRsPgRsPgRcLcLiterator),-1,-1,4,"best_cand_iter=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_multimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR),G__defined_typename("multimap<double,int>"),-1,4,"cand=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_multimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRcLcLiterator),-1,-1,4,"cand_iter=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"size=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"best_index=",0,(char*)NULL);
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"sort_index=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"best_chi2=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"delta_tof=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"tof_mean=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_HParticle),-1,-1,4,"p1=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_HParticle),-1,-1,4,"p2=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HGraphCut */
static void G__setup_memvarHGraphCut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PatDictLN_HGraphCut));
   { HGraphCut *p; p=(HGraphCut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"mom=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"beta=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"dedx_mdc=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TCutG),-1,-1,4,"p_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TCutG),-1,-1,4,"d_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TCutG),-1,-1,4,"ep_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TCutG),-1,-1,4,"em_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TCutG),-1,-1,4,"pip_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TCutG),-1,-1,4,"pim_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HDedxCut */
static void G__setup_memvarHDedxCut(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PatDictLN_HDedxCut));
   { HDedxCut *p; p=(HDedxCut*)0x1000; if (p) { }
   G__memvar_setup((void*)0,105,0,0,-1,-1,-1,4,"id=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"dedx_in=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"dedx_out=",0,(char*)NULL);
   G__memvar_setup((void*)0,100,0,0,-1,-1,-1,4,"beta=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TCutG),-1,-1,4,"p_dedx_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TCutG),-1,-1,4,"ep_dedx_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TCutG),-1,-1,4,"em_dedx_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TCutG),-1,-1,4,"pip_dedx_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TCutG),-1,-1,4,"pim_dedx_cut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HParticlePlayerHandle */
static void G__setup_memvarHParticlePlayerHandle(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PatDictLN_HParticlePlayerHandle));
   { HParticlePlayerHandle *p; p=(HParticlePlayerHandle*)0x1000; if (p) { }
   G__memvar_setup((void*)((long)(&p->map1)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__PatDictLN_maplEintcOvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,std::vector<std::vector<int> > >"),-1,1,"map1=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->map2)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__PatDictLN_maplEintcOvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,std::vector<std::vector<int> > >"),-1,1,"map2=",0,"select 2 particles out of int");
   G__memvar_setup((void*)((long)(&p->map3)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__PatDictLN_maplEintcOvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,std::vector<std::vector<int> > >"),-1,1,"map3=",0,(char*)NULL);
   G__memvar_setup((void*)((long)(&p->map4)-(long)(p)),117,0,0,G__get_linked_tagnum(&G__PatDictLN_maplEintcOvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRsPgRsPgR),G__defined_typename("map<int,std::vector<std::vector<int> > >"),-1,1,"map4=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HHypDataPool */
static void G__setup_memvarHHypDataPool(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PatDictLN_HHypDataPool));
   { HHypDataPool *p; p=(HHypDataPool*)0x1000; if (p) { }
   G__memvar_setup((void*)0,108,0,0,-1,-1,-1,4,"G__virtualinfo=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_multimaplEstringcOHHypCandidatemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHHypCandidatemUgRsPgRsPgR),G__defined_typename("MultiHyp"),-1,2,"hypCand=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR),G__defined_typename("HypNum"),-1,2,"hypNum=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_multimaplEstringcOHHypCandidatemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHHypCandidatemUgRsPgRsPgRcLcLiterator),G__defined_typename("MultiHypIter"),-1,2,"hypIter=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_maplECommonDefinitionscLcLEParticlecOintcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOintgRsPgRsPgR),G__defined_typename("ParticleNum"),-1,2,"numId=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HHypPool */
static void G__setup_memvarHHypPool(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PatDictLN_HHypPool));
   { HHypPool *p; p=(HHypPool*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_vectorlEHHypCandidatemUcOallocatorlEHHypCandidatemUgRsPgR),G__defined_typename("vector<HHypCandidate*>"),-1,4,"hypSet=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_vectorlEHHypCandidatemUcOallocatorlEHHypCandidatemUgRsPgRcLcLiterator),-1,-1,4,"hypIt=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_auto_ptrlEHParticlePlayerHandlegR),-1,-1,4,"ptrFH=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HPidPool */
static void G__setup_memvarHPidPool(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PatDictLN_HPidPool));
   { HPidPool *p; p=(HPidPool*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_multimaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR),G__defined_typename("MultiHypPid"),-1,4,"hypPid=",0,"name oldname link");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HTrackPlayer */
static void G__setup_memvarHTrackPlayer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PatDictLN_HTrackPlayer));
   { HTrackPlayer *p; p=(HTrackPlayer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_HCategory),-1,-1,4,"m_pContCatPart=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_HIterator),-1,-1,4,"m_pContItPart=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_HCategory),-1,-1,4,"m_pFWallCat=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_HIterator),-1,-1,4,"m_pFWallCatIter=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_HCategory),-1,-1,4,"m_pGeantKineCat=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_HIterator),-1,-1,4,"m_pGeantKineCatIter=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_HCategory),-1,-1,4,"m_pBTCat=",0,"!");
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_HIterator),-1,-1,4,"m_pBTCatIter=",0,"!");
   G__memvar_setup((void*)0,117,1,0,G__get_linked_tagnum(&G__PatDictLN_HParticlePool),-1,-1,4,"partPool=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_vectorlEHCutmUcOallocatorlEHCutmUgRsPgR),G__defined_typename("vector<HCut*>"),-1,4,"vCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_vectorlEHCutmUcOallocatorlEHCutmUgRsPgRcLcLiterator),-1,-1,4,"itCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HParticlePlayer */
static void G__setup_memvarHParticlePlayer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PatDictLN_HParticlePlayer));
   { HParticlePlayer *p; p=(HParticlePlayer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,1,0,G__get_linked_tagnum(&G__PatDictLN_HParticlePool),-1,-1,2,"refPPool=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,1,0,G__get_linked_tagnum(&G__PatDictLN_HHypPool),-1,-1,2,"refHPool=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_vectorlEHCutmUcOallocatorlEHCutmUgRsPgR),G__defined_typename("vector<HCut*>"),-1,2,"vCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_vectorlEHCutmUcOallocatorlEHCutmUgRsPgRcLcLiterator),-1,-1,2,"itCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}


   /* HHypPlayer */
static void G__setup_memvarHHypPlayer(void) {
   G__tag_memvar_setup(G__get_linked_tagnum(&G__PatDictLN_HHypPlayer));
   { HHypPlayer *p; p=(HHypPlayer*)0x1000; if (p) { }
   G__memvar_setup((void*)0,117,1,0,G__get_linked_tagnum(&G__PatDictLN_HHypPool),-1,-1,2,"refHPool=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,1,0,G__get_linked_tagnum(&G__PatDictLN_HPidPool),-1,-1,2,"refPPool=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_vectorlEHCutmUcOallocatorlEHCutmUgRsPgR),G__defined_typename("vector<HCut*>"),-1,2,"vCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,117,0,0,G__get_linked_tagnum(&G__PatDictLN_vectorlEHCutmUcOallocatorlEHCutmUgRsPgRcLcLiterator),-1,-1,2,"itCut=",0,(char*)NULL);
   G__memvar_setup((void*)0,85,0,0,G__get_linked_tagnum(&G__PatDictLN_TClass),G__defined_typename("atomic_TClass_ptr"),-2,4,"fgIsA=",0,(char*)NULL);
   }
   G__tag_memvar_reset();
}

extern "C" void G__cpp_setup_memvarPatDict() {
}
/***********************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
************************************************************
***********************************************************/

/*********************************************************
* Member function information setup for each class
*********************************************************/
static void G__setup_memfuncHParticleCandidate(void) {
   /* HParticleCandidate */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PatDictLN_HParticleCandidate));
   G__memfunc_setup("HParticleCandidate",1785,G__PatDict_404_0_1, 105, G__get_linked_tagnum(&G__PatDictLN_HParticleCandidate), -1, 0, 1, 1, 1, 0, "U 'HPidTrackCand' - 0 - ptr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setId",505,G__PatDict_404_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "i 'CommonDefinitions::EParticle' - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set",332,G__PatDict_404_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - name f - - 0 '0.' val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getId",493,G__PatDict_404_0_4, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEId",562,G__PatDict_404_0_5, 105, G__get_linked_tagnum(&G__PatDictLN_CommonDefinitionscLcLEParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isName",605,G__PatDict_404_0_6, 103, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isLepton",846,G__PatDict_404_0_7, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get",320,G__PatDict_404_0_8, 102, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get",320,G__PatDict_404_0_9, 102, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__PatDict_404_0_10, 117, G__get_linked_tagnum(&G__PatDictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLiterator), G__defined_typename("CommonDefinitions::NtuplePairIter"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__PatDict_404_0_11, 117, G__get_linked_tagnum(&G__PatDictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLiterator), G__defined_typename("CommonDefinitions::NtuplePairIter"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PatDict_404_0_12, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HParticleCandidate::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PatDict_404_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParticleCandidate::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PatDict_404_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HParticleCandidate::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PatDict_404_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HParticleCandidate::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__PatDict_404_0_16, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__PatDict_404_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__PatDict_404_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PatDict_404_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PatDict_404_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParticleCandidate::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PatDict_404_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParticleCandidate::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PatDict_404_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParticleCandidate::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PatDict_404_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParticleCandidate::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HParticleCandidate", 1785, G__PatDict_404_0_24, (int) ('i'), G__get_linked_tagnum(&G__PatDictLN_HParticleCandidate), -1, 0, 1, 1, 1, 0, "u 'HParticleCandidate' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HParticleCandidate", 1911, G__PatDict_404_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PatDict_404_0_26, (int) ('u'), G__get_linked_tagnum(&G__PatDictLN_HParticleCandidate), -1, 1, 1, 1, 1, 0, "u 'HParticleCandidate' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHParticle(void) {
   /* HParticle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PatDictLN_HParticle));
   G__memfunc_setup("HParticle",892,G__PatDict_405_0_1, 105, G__get_linked_tagnum(&G__PatDictLN_HParticle), -1, 0, 1, 1, 1, 0, "U 'HParticleCandidate' - 0 - pC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("HParticle",892,G__PatDict_405_0_2, 105, G__get_linked_tagnum(&G__PatDictLN_HParticle), -1, 0, 1, 1, 1, 0, "U 'HParticle' - 0 - pC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setId",505,G__PatDict_405_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "i 'CommonDefinitions::EParticle' - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set",332,G__PatDict_405_0_4, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - name f - - 0 '0.' val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getId",493,G__PatDict_405_0_5, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEId",562,G__PatDict_405_0_6, 105, G__get_linked_tagnum(&G__PatDictLN_CommonDefinitionscLcLEParticle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isName",605,G__PatDict_405_0_7, 103, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get",320,G__PatDict_405_0_8, 102, -1, -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get",320,G__PatDict_405_0_9, 102, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("begin",517,G__PatDict_405_0_10, 117, G__get_linked_tagnum(&G__PatDictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLiterator), G__defined_typename("CommonDefinitions::NtuplePairIter"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("end",311,G__PatDict_405_0_11, 117, G__get_linked_tagnum(&G__PatDictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLiterator), G__defined_typename("CommonDefinitions::NtuplePairIter"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCandidate",1213,G__PatDict_405_0_12, 85, G__get_linked_tagnum(&G__PatDictLN_HParticleCandidate), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PatDict_405_0_13, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HParticle::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PatDict_405_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParticle::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PatDict_405_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HParticle::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PatDict_405_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HParticle::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__PatDict_405_0_17, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__PatDict_405_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__PatDict_405_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PatDict_405_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PatDict_405_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParticle::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PatDict_405_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParticle::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PatDict_405_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParticle::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PatDict_405_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParticle::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HParticle", 892, G__PatDict_405_0_25, (int) ('i'), G__get_linked_tagnum(&G__PatDictLN_HParticle), -1, 0, 1, 1, 1, 0, "u 'HParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HParticle", 1018, G__PatDict_405_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PatDict_405_0_27, (int) ('u'), G__get_linked_tagnum(&G__PatDictLN_HParticle), -1, 1, 1, 1, 1, 0, "u 'HParticle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHHypCandidate(void) {
   /* HHypCandidate */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PatDictLN_HHypCandidate));
   G__memfunc_setup("HHypCandidate",1270,G__PatDict_406_0_1, 105, G__get_linked_tagnum(&G__PatDictLN_HHypCandidate), -1, 0, 1, 1, 1, 0, "U 'HPattern' - 0 - pPat", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__PatDict_406_0_2, 117, G__get_linked_tagnum(&G__PatDictLN_HHypCandidate), -1, 1, 1, 1, 1, 0, "U 'HParticleCandidate' - 0 - part", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator+=",980,G__PatDict_406_0_3, 117, G__get_linked_tagnum(&G__PatDictLN_HHypCandidate), -1, 1, 1, 1, 1, 0, "U 'HParticle' - 0 - part", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getId",493,G__PatDict_406_0_4, 105, G__get_linked_tagnum(&G__PatDictLN_CommonDefinitionscLcLEParticle), -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get",320,G__PatDict_406_0_5, 105, G__get_linked_tagnum(&G__PatDictLN_CommonDefinitionscLcLEParticle), -1, 0, 1, 1, 1, 8, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getPart",727,G__PatDict_406_0_6, 85, G__get_linked_tagnum(&G__PatDictLN_HParticle), -1, 0, 1, 1, 1, 0, "i - - 0 '0' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSize",731,G__PatDict_406_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNum",624,G__PatDict_406_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "i 'CommonDefinitions::EParticle' - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNum",624,G__PatDict_406_0_9, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - id", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setChi2",658,G__PatDict_406_0_10, 121, -1, -1, 0, 1, 1, 1, 0, "d - - 0 - chi", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getChi2",646,G__PatDict_406_0_11, 100, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isActive",824,G__PatDict_406_0_12, 103, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setActive",936,G__PatDict_406_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "g - - 0 - state", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSlot",738,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 1, 1, 4, 0, "i 'CommonDefinitions::EParticle' - 0 - p", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PatDict_406_0_15, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HHypCandidate::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PatDict_406_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HHypCandidate::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PatDict_406_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HHypCandidate::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PatDict_406_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HHypCandidate::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PatDict_406_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PatDict_406_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HHypCandidate::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PatDict_406_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HHypCandidate::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PatDict_406_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HHypCandidate::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PatDict_406_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HHypCandidate::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HHypCandidate", 1270, G__PatDict_406_0_27, (int) ('i'), G__get_linked_tagnum(&G__PatDictLN_HHypCandidate), -1, 0, 1, 1, 1, 0, "u 'HHypCandidate' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HHypCandidate", 1396, G__PatDict_406_0_28, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PatDict_406_0_29, (int) ('u'), G__get_linked_tagnum(&G__PatDictLN_HHypCandidate), -1, 1, 1, 1, 1, 0, "u 'HHypCandidate' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHNtuple(void) {
   /* HNtuple */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PatDictLN_HNtuple));
   G__memfunc_setup("HNtuple",704,G__PatDict_407_0_1, 105, G__get_linked_tagnum(&G__PatDictLN_HNtuple), -1, 0, 0, 1, 1, 0, "", "dummy constructor", (void*) NULL, 0);
   G__memfunc_setup("HNtuple",704,G__PatDict_407_0_2, 105, G__get_linked_tagnum(&G__PatDictLN_HNtuple), -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"i - 'Int_t' 0 '32000' bufsize", "late ntuple constructor", (void*) NULL, 0);
   G__memfunc_setup("HNtuple",704,G__PatDict_407_0_3, 105, G__get_linked_tagnum(&G__PatDictLN_HNtuple), -1, 0, 4, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"C - - 10 - varlist i - 'Int_t' 0 '32000' bufsize", "basic constructor", (void*) NULL, 0);
   G__memfunc_setup("Write",523,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 3, 1, 1, 0, 
"C - - 10 '0' name i - 'Int_t' 0 '0' option "
"i - 'Int_t' 0 '0' bufsize", "virtual function for a polymorphic NTulple Write call", (void*) NULL, 1);
   G__memfunc_setup("operator[]",1060,G__PatDict_407_0_5, 102, -1, G__defined_typename("Float_t"), 1, 1, 1, 1, 0, "u 'string' - 11 - key", "the way of assigning values for variables", (void*) NULL, 0);
   G__memfunc_setup("operator[]",1060,G__PatDict_407_0_6, 102, -1, G__defined_typename("Float_t"), 1, 1, 1, 1, 9, "u 'string' - 11 - key", "the way of variable value reading", (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__PatDict_407_0_7, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "fills tuple, if not defined, constructs it first", (void*) NULL, 0);
   G__memfunc_setup("SetDirectory",1249,G__PatDict_407_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TDirectory' - 0 - dir", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getName",705,G__PatDict_407_0_9, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getTitle",834,G__PatDict_407_0_10, 67, -1, -1, 0, 0, 1, 1, 9, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setFile",716,G__PatDict_407_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'TFile' - 0 - ptrF", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("operator=",937,(G__InterfaceMethod) NULL, 117, G__get_linked_tagnum(&G__PatDictLN_HNtuple), -1, 1, 1, 1, 2, 8, "u 'HNtuple' - 11 - src", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setMap",618,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 2, 0, 
"C - - 10 - vlist g - 'Bool_t' 1 - kPair", "creates a map from variable string", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PatDict_407_0_14, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HNtuple::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PatDict_407_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HNtuple::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PatDict_407_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HNtuple::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PatDict_407_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HNtuple::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PatDict_407_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PatDict_407_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HNtuple::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PatDict_407_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HNtuple::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PatDict_407_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HNtuple::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PatDict_407_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HNtuple::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HNtuple", 704, G__PatDict_407_0_26, (int) ('i'), G__get_linked_tagnum(&G__PatDictLN_HNtuple), -1, 0, 1, 1, 1, 0, "u 'HNtuple' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HNtuple", 830, G__PatDict_407_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHCut(void) {
   /* HCut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PatDictLN_HCut));
   G__memfunc_setup("open",434,G__PatDict_581_0_2, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - - 10 - filename C - - 10 '\"read\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("close",534,G__PatDict_581_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 '0' filename", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getName",705,G__PatDict_581_0_4, 67, -1, -1, 0, 0, 1, 1, 1, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,G__PatDict_581_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'HReconstructor' - 1 - rec", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("isOpen",622,G__PatDict_581_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 8, "C - - 10 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHist",728,G__PatDict_581_0_7, 85, G__get_linked_tagnum(&G__PatDictLN_TH1), -1, 0, 1, 1, 1, 9, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getCut",620,G__PatDict_581_0_8, 85, G__get_linked_tagnum(&G__PatDictLN_TCutG), -1, 0, 1, 1, 1, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PatDict_581_0_9, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HCut::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PatDict_581_0_10, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HCut::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PatDict_581_0_11, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HCut::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PatDict_581_0_12, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HCut::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__PatDict_581_0_13, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__PatDict_581_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__PatDict_581_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PatDict_581_0_16, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PatDict_581_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HCut::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PatDict_581_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HCut::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PatDict_581_0_19, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HCut::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PatDict_581_0_20, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HCut::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HCut", 498, G__PatDict_581_0_21, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PatDict_581_0_22, (int) ('u'), G__get_linked_tagnum(&G__PatDictLN_HCut), -1, 1, 1, 1, 1, 0, "u 'HCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHTrackCut(void) {
   /* HTrackCut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PatDictLN_HTrackCut));
   G__memfunc_setup("HTrackCut",873,G__PatDict_609_0_1, 105, G__get_linked_tagnum(&G__PatDictLN_HTrackCut), -1, 0, 3, 1, 1, 0, 
"C - - 10 - cutname C - - 10 '0' filename "
"C - - 10 '\"read\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'HReconstructor' - 1 - rec", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getValue",829,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 6, 1, 4, 0, 
"d - - 0 - p1 d - - 0 - p2 "
"d - - 0 - p3 d - - 0 - p4 "
"d - - 0 - p5 d - - 0 - x", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getXtheta",942,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 4, 0, 
"s - 'Short_t' 0 - pid s - 'Short_t' 0 - system "
"s - 'Short_t' 0 - sector f - 'Float_t' 0 - mom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getYphi",730,(G__InterfaceMethod) NULL, 100, -1, G__defined_typename("Double_t"), 0, 4, 1, 4, 0, 
"s - 'Short_t' 0 - pid s - 'Short_t' 0 - system "
"s - 'Short_t' 0 - sector f - 'Float_t' 0 - mom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isInside",824,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 6, 1, 4, 0, 
"d - 'Double_t' 0 - x1 d - 'Double_t' 0 - y1 "
"s - 'Short_t' 0 - pid s - 'Short_t' 0 - system "
"s - 'Short_t' 0 - sector f - 'Float_t' 0 - mom", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PatDict_609_0_7, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HTrackCut::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PatDict_609_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTrackCut::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PatDict_609_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HTrackCut::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PatDict_609_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HTrackCut::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PatDict_609_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PatDict_609_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTrackCut::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PatDict_609_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HTrackCut::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PatDict_609_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTrackCut::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PatDict_609_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HTrackCut::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HTrackCut", 873, G__PatDict_609_0_19, (int) ('i'), G__get_linked_tagnum(&G__PatDictLN_HTrackCut), -1, 0, 1, 1, 1, 0, "u 'HTrackCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HTrackCut", 999, G__PatDict_609_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PatDict_609_0_21, (int) ('u'), G__get_linked_tagnum(&G__PatDictLN_HTrackCut), -1, 1, 1, 1, 1, 0, "u 'HTrackCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHFile(void) {
   /* HFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PatDictLN_HFile));
   G__memfunc_setup("add",297,(G__InterfaceMethod) NULL, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 2, 0, 
"C - - 10 - name C - - 10 - opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("open",434,G__PatDict_711_0_3, 103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 '\"read\"' opt", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("write",555,G__PatDict_711_0_4, 105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("close",534,G__PatDict_711_0_5, 103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 '0' name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isOutput",877,G__PatDict_711_0_6, 103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("getOutput",977,G__PatDict_711_0_7, 85, G__get_linked_tagnum(&G__PatDictLN_TFile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 3);
   G__memfunc_setup("getTree",720,G__PatDict_711_0_8, 85, G__get_linked_tagnum(&G__PatDictLN_TTree), -1, 0, 2, 1, 1, 8, 
"C - - 10 - name i - - 0 '0' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEntries",1050,G__PatDict_711_0_9, 108, -1, -1, 0, 2, 1, 1, 8, 
"C - - 10 - name i - - 0 '0' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__PatDict_711_0_10, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("get",320,G__PatDict_711_0_11, 85, G__get_linked_tagnum(&G__PatDictLN_TObject), -1, 0, 1, 1, 1, 9, "C - - 10 - name", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__PatDict_711_0_12, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PatDict_711_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PatDict_711_0_14, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PatDict_711_0_15, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__PatDict_711_0_16, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__PatDict_711_0_17, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__PatDict_711_0_18, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PatDict_711_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PatDict_711_0_20, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PatDict_711_0_21, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PatDict_711_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PatDict_711_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HFile::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HFile", 582, G__PatDict_711_0_24, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PatDict_711_0_25, (int) ('u'), G__get_linked_tagnum(&G__PatDictLN_HFile), -1, 1, 1, 1, 1, 0, "u 'HFile' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHOutputFile(void) {
   /* HOutputFile */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PatDictLN_HOutputFile));
   G__memfunc_setup("HOutputFile",1113,G__PatDict_715_0_1, 105, G__get_linked_tagnum(&G__PatDictLN_HOutputFile), -1, 0, 2, 1, 1, 0, 
"C - - 10 '0' name C - - 10 '0' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("open",434,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - opt", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("close",534,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "C - - 10 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("isOutput",877,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getOutput",977,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PatDictLN_TFile), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Class",502,G__PatDict_715_0_7, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HOutputFile::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PatDict_715_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOutputFile::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PatDict_715_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HOutputFile::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PatDict_715_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HOutputFile::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PatDict_715_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PatDict_715_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOutputFile::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PatDict_715_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOutputFile::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PatDict_715_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOutputFile::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PatDict_715_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOutputFile::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HOutputFile", 1113, G__PatDict_715_0_19, (int) ('i'), G__get_linked_tagnum(&G__PatDictLN_HOutputFile), -1, 0, 1, 1, 1, 0, "u 'HOutputFile' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HOutputFile", 1239, G__PatDict_715_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PatDict_715_0_21, (int) ('u'), G__get_linked_tagnum(&G__PatDictLN_HOutputFile), -1, 1, 1, 1, 1, 0, "u 'HOutputFile' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHOutput(void) {
   /* HOutput */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PatDictLN_HOutput));
   G__memfunc_setup("HOutput",729,G__PatDict_718_0_1, 105, G__get_linked_tagnum(&G__PatDictLN_HOutput), -1, 0, 1, 1, 1, 0, "U 'HOutputFile' - 0 - ptrF", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("book",427,G__PatDict_718_0_2, 121, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 - title "
"C - - 10 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("book",427,G__PatDict_718_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("book",427,G__PatDict_718_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 - title "
"u 'string' - 0 - var", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("book",427,G__PatDict_718_0_5, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - name u 'string' - 0 - title", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSuffix",961,G__PatDict_718_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '0' suf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPrefix",954,G__PatDict_718_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "C - - 10 '0' pre", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setSuffix",961,G__PatDict_718_0_8, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - suf", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("setPrefix",954,G__PatDict_718_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - pre", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fixed",528,G__PatDict_718_0_10, 103, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set",332,G__PatDict_718_0_11, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - name f - - 0 - val", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__PatDict_718_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("write",555,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 0, 1, 4, 0, "", "called in destructor", (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PatDict_718_0_14, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HOutput::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PatDict_718_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOutput::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PatDict_718_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HOutput::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PatDict_718_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HOutput::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__PatDict_718_0_18, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__PatDict_718_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__PatDict_718_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PatDict_718_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PatDict_718_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOutput::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PatDict_718_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOutput::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PatDict_718_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HOutput::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PatDict_718_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HOutput::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HOutput", 729, G__PatDict_718_0_26, (int) ('i'), G__get_linked_tagnum(&G__PatDictLN_HOutput), -1, 0, 1, 1, 1, 0, "u 'HOutput' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HOutput", 855, G__PatDict_718_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PatDict_718_0_28, (int) ('u'), G__get_linked_tagnum(&G__PatDictLN_HOutput), -1, 1, 1, 1, 1, 0, "u 'HOutput' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHPool(void) {
   /* HPool */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PatDictLN_HPool));
   G__memfunc_setup("setOutput",989,G__PatDict_724_0_2, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HOutputFile' - 0 - ptr", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__PatDict_724_0_3, 103, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - name i 'CommonDefinitions::EParticle' - 0 - p1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__PatDict_724_0_4, 103, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name i 'CommonDefinitions::EParticle' - 0 - p1 "
"i 'CommonDefinitions::EParticle' - 0 - p2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__PatDict_724_0_5, 103, -1, -1, 0, 4, 1, 1, 0, 
"C - - 10 - name i 'CommonDefinitions::EParticle' - 0 - p1 "
"i 'CommonDefinitions::EParticle' - 0 - p2 i 'CommonDefinitions::EParticle' - 0 - p3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__PatDict_724_0_6, 103, -1, -1, 0, 5, 1, 1, 0, 
"C - - 10 - name i 'CommonDefinitions::EParticle' - 0 - p1 "
"i 'CommonDefinitions::EParticle' - 0 - p2 i 'CommonDefinitions::EParticle' - 0 - p3 "
"i 'CommonDefinitions::EParticle' - 0 - p4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__PatDict_724_0_7, 103, -1, -1, 0, 2, 1, 1, 0, 
"C - - 10 - name C - - 10 - p1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__PatDict_724_0_8, 103, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - name C - - 10 - p1 "
"C - - 10 - p2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__PatDict_724_0_9, 103, -1, -1, 0, 4, 1, 1, 0, 
"C - - 10 - name C - - 10 - p1 "
"C - - 10 - p2 C - - 10 - p3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__PatDict_724_0_10, 103, -1, -1, 0, 5, 1, 1, 0, 
"C - - 10 - name C - - 10 - p1 "
"C - - 10 - p2 C - - 10 - p3 "
"C - - 10 - p4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("set",332,G__PatDict_724_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HEventPool' - 0 - previous", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getEventPool",1244,G__PatDict_724_0_12, 85, G__get_linked_tagnum(&G__PatDictLN_HEventPool), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isObject",819,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 2, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getObject",919,(G__InterfaceMethod) NULL, 85, G__get_linked_tagnum(&G__PatDictLN_HPattern), -1, 0, 1, 1, 2, 0, "C - - 10 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PatDict_724_0_15, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HPool::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PatDict_724_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HPool::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PatDict_724_0_17, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HPool::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PatDict_724_0_18, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HPool::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__PatDict_724_0_19, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__PatDict_724_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__PatDict_724_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PatDict_724_0_22, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PatDict_724_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HPool::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PatDict_724_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HPool::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PatDict_724_0_25, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HPool::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PatDict_724_0_26, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HPool::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HPool", 608, G__PatDict_724_0_27, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 3);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PatDict_724_0_28, (int) ('u'), G__get_linked_tagnum(&G__PatDictLN_HPool), -1, 1, 1, 1, 1, 0, "u 'HPool' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHParticleDataPool(void) {
   /* HParticleDataPool */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PatDictLN_HParticleDataPool));
   G__memfunc_setup("addPartCand",1078,G__PatDict_729_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"i 'CommonDefinitions::EParticle' - 0 - eId U 'HPidTrackCand' - 0 - ptrC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("addPartCand",1078,G__PatDict_729_0_3, 121, -1, -1, 0, 2, 1, 1, 0, 
"i 'CommonDefinitions::EParticle' - 0 - eId U 'HParticleCandidate' - 0 - pCand", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParticle",1140,G__PatDict_729_0_4, 85, G__get_linked_tagnum(&G__PatDictLN_HParticleCandidate), -1, 0, 2, 1, 1, 0, 
"i 'CommonDefinitions::EParticle' - 0 - eId i - - 0 '0' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getParticle",1140,G__PatDict_729_0_5, 85, G__get_linked_tagnum(&G__PatDictLN_HParticleCandidate), -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("isPart",627,G__PatDict_729_0_6, 103, -1, -1, 0, 1, 1, 1, 0, "i 'CommonDefinitions::EParticle' - 0 - eId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNum",624,G__PatDict_729_0_7, 105, -1, -1, 0, 1, 1, 1, 0, "i 'CommonDefinitions::EParticle' - 0 - eId", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSize",731,G__PatDict_729_0_8, 105, -1, -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("removeParticle",1474,G__PatDict_729_0_9, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HParticleCandidate' - 0 - pCand", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("equal_range",1156,G__PatDict_729_0_10, 117, G__get_linked_tagnum(&G__PatDictLN_pairlEmultimaplECommonDefinitionscLcLEParticlecOHParticleCandidatemUcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOHParticleCandidatemUgRsPgRsPgRcLcLiteratorcOmultimaplECommonDefinitionscLcLEParticlecOHParticleCandidatemUcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOHParticleCandidatemUgRsPgRsPgRcLcLiteratorgR), G__defined_typename("CommonDefinitions::MultiParticleIterPair"), 0, 1, 1, 1, 0, "i 'CommonDefinitions::EParticle' - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__PatDict_729_0_11, 117, G__get_linked_tagnum(&G__PatDictLN_multimaplECommonDefinitionscLcLEParticlecOHParticleCandidatemUcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOHParticleCandidatemUgRsPgRsPgRcLcLiterator), G__defined_typename("CommonDefinitions::MultiParticleIter"), 0, 1, 1, 1, 0, "i 'CommonDefinitions::EParticle' - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__PatDict_729_0_12, 117, G__get_linked_tagnum(&G__PatDictLN_multimaplECommonDefinitionscLcLEParticlecOHParticleCandidatemUcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOHParticleCandidatemUgRsPgRsPgRcLcLiterator), G__defined_typename("CommonDefinitions::MultiParticleIter"), 0, 1, 1, 1, 0, "i 'CommonDefinitions::EParticle' - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dump",438,G__PatDict_729_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PatDict_729_0_14, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HParticleDataPool::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PatDict_729_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParticleDataPool::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PatDict_729_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HParticleDataPool::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PatDict_729_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HParticleDataPool::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__PatDict_729_0_18, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__PatDict_729_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__PatDict_729_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PatDict_729_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PatDict_729_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParticleDataPool::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PatDict_729_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParticleDataPool::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PatDict_729_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParticleDataPool::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PatDict_729_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParticleDataPool::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HParticleDataPool", 1806, G__PatDict_729_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 3);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PatDict_729_0_27, (int) ('u'), G__get_linked_tagnum(&G__PatDictLN_HParticleDataPool), -1, 1, 1, 1, 1, 0, "u 'HParticleDataPool' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHParticlePool(void) {
   /* HParticlePool */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PatDictLN_HParticlePool));
   G__memfunc_setup("reset",547,G__PatDict_752_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("loop",442,G__PatDict_752_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "U 'HIterator' - 0 - dataIt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__PatDict_752_0_4, 121, -1, -1, 0, 3, 1, 1, 0, 
"U 'HIterator' - 0 '0' dataIt U 'HIterator' - 0 '0' geantIt "
"U 'HIterator' - 0 '0' btIt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PatDict_752_0_5, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HParticlePool::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PatDict_752_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParticlePool::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PatDict_752_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HParticlePool::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PatDict_752_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HParticlePool::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PatDict_752_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PatDict_752_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParticlePool::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PatDict_752_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParticlePool::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PatDict_752_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParticlePool::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PatDict_752_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParticlePool::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HParticlePool", 1428, G__PatDict_752_0_17, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PatDict_752_0_18, (int) ('u'), G__get_linked_tagnum(&G__PatDictLN_HParticlePool), -1, 1, 1, 1, 1, 0, "u 'HParticlePool' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHTimeCut(void) {
   /* HTimeCut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PatDictLN_HTimeCut));
   G__memfunc_setup("HTimeCut",771,G__PatDict_757_0_1, 105, G__get_linked_tagnum(&G__PatDictLN_HTimeCut), -1, 0, 3, 1, 1, 0, 
"C - - 10 - cutname C - - 10 '0' filename "
"C - - 10 '\"read\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'HReconstructor' - 1 - rec", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("calcTofMom",997,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'HHypCandidate' - 0 - pHyp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calcTofMom",997,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'HParticle' - 0 - pPart", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("calcTof",700,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'HHypCandidate' - 0 - pHyp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PatDict_757_0_6, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HTimeCut::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PatDict_757_0_7, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTimeCut::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PatDict_757_0_8, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HTimeCut::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PatDict_757_0_9, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HTimeCut::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PatDict_757_0_13, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PatDict_757_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTimeCut::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PatDict_757_0_15, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HTimeCut::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PatDict_757_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTimeCut::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PatDict_757_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HTimeCut::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HTimeCut", 771, G__PatDict_757_0_18, (int) ('i'), G__get_linked_tagnum(&G__PatDictLN_HTimeCut), -1, 0, 1, 1, 1, 0, "u 'HTimeCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HTimeCut", 897, G__PatDict_757_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHGraphCut(void) {
   /* HGraphCut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PatDictLN_HGraphCut));
   G__memfunc_setup("HGraphCut",870,G__PatDict_769_0_1, 105, G__get_linked_tagnum(&G__PatDictLN_HGraphCut), -1, 0, 3, 1, 1, 0, 
"C - - 10 - cutname C - - 10 '0' filename "
"C - - 10 '\"read\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'HReconstructor' - 1 - rec", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("graphCut",830,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'HHypCandidate' - 0 - pHyp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("graphCut",830,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "U 'HParticle' - 0 - pPart", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PatDict_769_0_5, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HGraphCut::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PatDict_769_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGraphCut::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PatDict_769_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HGraphCut::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PatDict_769_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HGraphCut::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PatDict_769_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PatDict_769_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGraphCut::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PatDict_769_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGraphCut::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PatDict_769_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HGraphCut::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PatDict_769_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HGraphCut::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HGraphCut", 870, G__PatDict_769_0_17, (int) ('i'), G__get_linked_tagnum(&G__PatDictLN_HGraphCut), -1, 0, 1, 1, 1, 0, "u 'HGraphCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HGraphCut", 996, G__PatDict_769_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PatDict_769_0_19, (int) ('u'), G__get_linked_tagnum(&G__PatDictLN_HGraphCut), -1, 1, 1, 1, 1, 0, "u 'HGraphCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHDedxCut(void) {
   /* HDedxCut */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PatDictLN_HDedxCut));
   G__memfunc_setup("HDedxCut",761,G__PatDict_770_0_1, 105, G__get_linked_tagnum(&G__PatDictLN_HDedxCut), -1, 0, 3, 1, 1, 0, 
"C - - 10 - cutname C - - 10 '0' filename "
"C - - 10 '\"read\"' opt", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("select",640,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 1, 1, 1, 0, "u 'HReconstructor' - 1 - rec", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("graphCut",830,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 1, 1, 4, 0, "U 'HHypCandidate' - 0 - pHyp", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("graphCut",830,(G__InterfaceMethod) NULL, 103, -1, -1, 0, 1, 1, 4, 0, "U 'HParticle' - 0 - pPart", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PatDict_770_0_5, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HDedxCut::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PatDict_770_0_6, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HDedxCut::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PatDict_770_0_7, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HDedxCut::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PatDict_770_0_8, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HDedxCut::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PatDict_770_0_12, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PatDict_770_0_13, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HDedxCut::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PatDict_770_0_14, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HDedxCut::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PatDict_770_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HDedxCut::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PatDict_770_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HDedxCut::DeclFileLine) ), 0);
   // automatic copy constructor
   G__memfunc_setup("HDedxCut", 761, G__PatDict_770_0_17, (int) ('i'), G__get_linked_tagnum(&G__PatDictLN_HDedxCut), -1, 0, 1, 1, 1, 0, "u 'HDedxCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HDedxCut", 887, G__PatDict_770_0_18, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PatDict_770_0_19, (int) ('u'), G__get_linked_tagnum(&G__PatDictLN_HDedxCut), -1, 1, 1, 1, 1, 0, "u 'HDedxCut' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHParticlePlayerHandle(void) {
   /* HParticlePlayerHandle */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PatDictLN_HParticlePlayerHandle));
   G__memfunc_setup("HParticlePlayerHandle",2101,G__PatDict_771_0_1, 105, G__get_linked_tagnum(&G__PatDictLN_HParticlePlayerHandle), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("chooseMfromN",1232,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"i - - 0 - m i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   // automatic copy constructor
   G__memfunc_setup("HParticlePlayerHandle", 2101, G__PatDict_771_0_3, (int) ('i'), 
G__get_linked_tagnum(&G__PatDictLN_HParticlePlayerHandle), -1, 0, 1, 1, 1, 0, "u 'HParticlePlayerHandle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   // automatic destructor
   G__memfunc_setup("~HParticlePlayerHandle", 2227, G__PatDict_771_0_4, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 0);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PatDict_771_0_5, (int) ('u'), G__get_linked_tagnum(&G__PatDictLN_HParticlePlayerHandle), -1, 1, 1, 1, 1, 0, "u 'HParticlePlayerHandle' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHHypDataPool(void) {
   /* HHypDataPool */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PatDictLN_HHypDataPool));
   G__memfunc_setup("addHypCand",976,G__PatDict_786_0_2, 121, -1, -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - name U 'HHypCandidate' - 0 - ptrC", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHyp",625,G__PatDict_786_0_3, 85, G__get_linked_tagnum(&G__PatDictLN_HHypCandidate), -1, 0, 2, 1, 1, 0, 
"u 'string' - 0 - name i - - 0 '0' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getHyp",625,G__PatDict_786_0_4, 85, G__get_linked_tagnum(&G__PatDictLN_HHypCandidate), -1, 0, 1, 1, 1, 0, "h - - 0 '0' n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getName",705,G__PatDict_786_0_5, 117, G__get_linked_tagnum(&G__PatDictLN_string), -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getSize",731,G__PatDict_786_0_6, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("size",443,G__PatDict_786_0_7, 105, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNum",624,G__PatDict_786_0_8, 105, -1, -1, 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("getNum",624,G__PatDict_786_0_9, 105, -1, -1, 0, 1, 1, 1, 0, "i - - 0 - n", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("equal_range",1156,G__PatDict_786_0_10, 117, G__get_linked_tagnum(&G__PatDictLN_pairlEmultimaplEstringcOHHypCandidatemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHHypCandidatemUgRsPgRsPgRcLcLiteratorcOmultimaplEstringcOHHypCandidatemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHHypCandidatemUgRsPgRsPgRcLcLiteratorgR), G__defined_typename("CommonDefinitions::MultiHypIterPair"), 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("lower_bound",1184,G__PatDict_786_0_11, 117, G__get_linked_tagnum(&G__PatDictLN_multimaplEstringcOHHypCandidatemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHHypCandidatemUgRsPgRsPgRcLcLiterator), G__defined_typename("CommonDefinitions::MultiHypIter"), 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("upper_bound",1187,G__PatDict_786_0_12, 117, G__get_linked_tagnum(&G__PatDictLN_multimaplEstringcOHHypCandidatemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHHypCandidatemUgRsPgRsPgRcLcLiterator), G__defined_typename("CommonDefinitions::MultiHypIter"), 0, 1, 1, 1, 0, "u 'string' - 0 - name", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("dump",438,G__PatDict_786_0_13, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PatDict_786_0_14, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HHypDataPool::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PatDict_786_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HHypDataPool::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PatDict_786_0_16, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HHypDataPool::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PatDict_786_0_17, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HHypDataPool::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,G__PatDict_786_0_18, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,G__PatDict_786_0_19, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,G__PatDict_786_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PatDict_786_0_21, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PatDict_786_0_22, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HHypDataPool::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PatDict_786_0_23, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HHypDataPool::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PatDict_786_0_24, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HHypDataPool::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PatDict_786_0_25, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HHypDataPool::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HHypDataPool", 1291, G__PatDict_786_0_26, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 3);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PatDict_786_0_27, (int) ('u'), G__get_linked_tagnum(&G__PatDictLN_HHypDataPool), -1, 1, 1, 1, 1, 0, "u 'HHypDataPool' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHHypPool(void) {
   /* HHypPool */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PatDictLN_HHypPool));
   G__memfunc_setup("reset",547,G__PatDict_788_0_2, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("loop",442,G__PatDict_788_0_3, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HParticlePool' - 1 - ref", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__PatDict_788_0_4, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("count",553,(G__InterfaceMethod) NULL, 105, -1, -1, 0, 2, 1, 4, 0, 
"U 'HPattern' - 0 - ptrC u 'HParticlePool' - 1 - refPPool", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("combine",733,(G__InterfaceMethod) NULL, 121, -1, -1, 0, 2, 1, 4, 0, 
"U 'HPattern' - 0 - ptrC u 'HParticlePool' - 1 - refPPool", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PatDict_788_0_7, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HHypPool::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PatDict_788_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HHypPool::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PatDict_788_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HHypPool::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PatDict_788_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HHypPool::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PatDict_788_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PatDict_788_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HHypPool::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PatDict_788_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HHypPool::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PatDict_788_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HHypPool::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PatDict_788_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HHypPool::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HHypPool", 913, G__PatDict_788_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PatDict_788_0_20, (int) ('u'), G__get_linked_tagnum(&G__PatDictLN_HHypPool), -1, 1, 1, 1, 1, 0, "u 'HHypPool' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHPidPool(void) {
   /* HPidPool */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PatDictLN_HPidPool));
   G__memfunc_setup("add",297,G__PatDict_795_0_2, 103, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - oldname C - - 10 - name "
"i 'CommonDefinitions::EParticle' - 0 - p1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__PatDict_795_0_3, 103, -1, -1, 0, 4, 1, 1, 0, 
"C - - 10 - oldname C - - 10 - name "
"i 'CommonDefinitions::EParticle' - 0 - p1 i 'CommonDefinitions::EParticle' - 0 - p2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__PatDict_795_0_4, 103, -1, -1, 0, 5, 1, 1, 0, 
"C - - 10 - oldname C - - 10 - name "
"i 'CommonDefinitions::EParticle' - 0 - p1 i 'CommonDefinitions::EParticle' - 0 - p2 "
"i 'CommonDefinitions::EParticle' - 0 - p3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__PatDict_795_0_5, 103, -1, -1, 0, 6, 1, 1, 0, 
"C - - 10 - oldname C - - 10 - name "
"i 'CommonDefinitions::EParticle' - 0 - p1 i 'CommonDefinitions::EParticle' - 0 - p2 "
"i 'CommonDefinitions::EParticle' - 0 - p3 i 'CommonDefinitions::EParticle' - 0 - p4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__PatDict_795_0_6, 103, -1, -1, 0, 3, 1, 1, 0, 
"C - - 10 - oldname C - - 10 - name "
"C - - 10 - p1", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__PatDict_795_0_7, 103, -1, -1, 0, 4, 1, 1, 0, 
"C - - 10 - oldname C - - 10 - name "
"C - - 10 - p1 C - - 10 - p2", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__PatDict_795_0_8, 103, -1, -1, 0, 5, 1, 1, 0, 
"C - - 10 - oldname C - - 10 - name "
"C - - 10 - p1 C - - 10 - p2 "
"C - - 10 - p3", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__PatDict_795_0_9, 103, -1, -1, 0, 6, 1, 1, 0, 
"C - - 10 - oldname C - - 10 - name "
"C - - 10 - p1 C - - 10 - p2 "
"C - - 10 - p3 C - - 10 - p4", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("reset",547,G__PatDict_795_0_10, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("loop",442,G__PatDict_795_0_11, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HHypPool' - 1 - ref", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("fill",423,G__PatDict_795_0_12, 121, -1, -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PatDict_795_0_13, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HPidPool::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PatDict_795_0_14, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HPidPool::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PatDict_795_0_15, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HPidPool::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PatDict_795_0_16, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HPidPool::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PatDict_795_0_20, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PatDict_795_0_21, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HPidPool::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PatDict_795_0_22, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HPidPool::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PatDict_795_0_23, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HPidPool::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PatDict_795_0_24, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HPidPool::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HPidPool", 893, G__PatDict_795_0_25, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   // automatic assignment operator
   G__memfunc_setup("operator=", 937, G__PatDict_795_0_26, (int) ('u'), G__get_linked_tagnum(&G__PatDictLN_HPidPool), -1, 1, 1, 1, 1, 0, "u 'HPidPool' - 11 - -", (char*) NULL, (void*) NULL, 0);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHTrackPlayer(void) {
   /* HTrackPlayer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PatDictLN_HTrackPlayer));
   G__memfunc_setup("HTrackPlayer",1194,G__PatDict_817_0_1, 105, G__get_linked_tagnum(&G__PatDictLN_HTrackPlayer), -1, 0, 1, 1, 1, 0, "u 'HParticlePool' - 1 - ref", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("reinit",651,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("execute",755,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getPool",730,G__PatDict_817_0_6, 85, G__get_linked_tagnum(&G__PatDictLN_HParticlePool), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__PatDict_817_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HCut' - 1 - cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PatDict_817_0_8, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HTrackPlayer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PatDict_817_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTrackPlayer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PatDict_817_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HTrackPlayer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PatDict_817_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HTrackPlayer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PatDict_817_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PatDict_817_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTrackPlayer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PatDict_817_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HTrackPlayer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PatDict_817_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HTrackPlayer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PatDict_817_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HTrackPlayer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HTrackPlayer", 1320, G__PatDict_817_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHParticlePlayer(void) {
   /* HParticlePlayer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PatDictLN_HParticlePlayer));
   G__memfunc_setup("HParticlePlayer",1513,G__PatDict_822_0_1, 105, G__get_linked_tagnum(&G__PatDictLN_HParticlePlayer), -1, 0, 2, 1, 1, 0, 
"u 'HParticlePool' - 1 - refP u 'HHypPool' - 1 - refH", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("reinit",651,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("execute",755,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "does the loop over all HHypCandidatePaterns and stores in hypSet", (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("add",297,G__PatDict_822_0_6, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HCut' - 1 - cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PatDict_822_0_7, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HParticlePlayer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PatDict_822_0_8, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParticlePlayer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PatDict_822_0_9, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HParticlePlayer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PatDict_822_0_10, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HParticlePlayer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PatDict_822_0_14, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PatDict_822_0_15, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParticlePlayer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PatDict_822_0_16, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParticlePlayer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PatDict_822_0_17, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HParticlePlayer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PatDict_822_0_18, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HParticlePlayer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HParticlePlayer", 1639, G__PatDict_822_0_19, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}

static void G__setup_memfuncHHypPlayer(void) {
   /* HHypPlayer */
   G__tag_memfunc_setup(G__get_linked_tagnum(&G__PatDictLN_HHypPlayer));
   G__memfunc_setup("HHypPlayer",998,G__PatDict_823_0_1, 105, G__get_linked_tagnum(&G__PatDictLN_HHypPlayer), -1, 0, 2, 1, 1, 0, 
"u 'HHypPool' - 1 - refH u 'HPidPool' - 1 - refP", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("init",436,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("reinit",651,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("execute",755,(G__InterfaceMethod) NULL,105, -1, G__defined_typename("Int_t"), 0, 0, 1, 1, 0, "", "does the loop over all HHypCandidatePaterns and stores in hypSet", (void*) NULL, 1);
   G__memfunc_setup("finalize",850,(G__InterfaceMethod) NULL,103, -1, G__defined_typename("Bool_t"), 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("getPool",730,G__PatDict_823_0_6, 85, G__get_linked_tagnum(&G__PatDictLN_HPidPool), -1, 0, 0, 1, 1, 0, "", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("add",297,G__PatDict_823_0_7, 121, -1, -1, 0, 1, 1, 1, 0, "u 'HCut' - 1 - cut", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("Class",502,G__PatDict_823_0_8, 85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (TClass* (*)())(&HHypPlayer::Class) ), 0);
   G__memfunc_setup("Class_Name",982,G__PatDict_823_0_9, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HHypPlayer::Class_Name) ), 0);
   G__memfunc_setup("Class_Version",1339,G__PatDict_823_0_10, 115, -1, G__defined_typename("Version_t"), 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (Version_t (*)())(&HHypPlayer::Class_Version) ), 0);
   G__memfunc_setup("Dictionary",1046,G__PatDict_823_0_11, 121, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (void (*)())(&HHypPlayer::Dictionary) ), 0);
   G__memfunc_setup("IsA",253,(G__InterfaceMethod) NULL,85, G__get_linked_tagnum(&G__PatDictLN_TClass), -1, 0, 0, 1, 1, 8, "", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("ShowMembers",1132,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TMemberInspector' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("Streamer",835,(G__InterfaceMethod) NULL,121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - -", (char*)NULL, (void*) NULL, 1);
   G__memfunc_setup("StreamerNVirtual",1656,G__PatDict_823_0_15, 121, -1, -1, 0, 1, 1, 1, 0, "u 'TBuffer' - 1 - ClassDef_StreamerNVirtual_b", (char*)NULL, (void*) NULL, 0);
   G__memfunc_setup("DeclFileName",1145,G__PatDict_823_0_16, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HHypPlayer::DeclFileName) ), 0);
   G__memfunc_setup("ImplFileLine",1178,G__PatDict_823_0_17, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HHypPlayer::ImplFileLine) ), 0);
   G__memfunc_setup("ImplFileName",1171,G__PatDict_823_0_18, 67, -1, -1, 0, 0, 3, 1, 1, "", (char*)NULL, (void*) G__func2void( (const char* (*)())(&HHypPlayer::ImplFileName) ), 0);
   G__memfunc_setup("DeclFileLine",1152,G__PatDict_823_0_19, 105, -1, -1, 0, 0, 3, 1, 0, "", (char*)NULL, (void*) G__func2void( (int (*)())(&HHypPlayer::DeclFileLine) ), 0);
   // automatic destructor
   G__memfunc_setup("~HHypPlayer", 1124, G__PatDict_823_0_20, (int) ('y'), -1, -1, 0, 0, 1, 1, 0, "", (char*) NULL, (void*) NULL, 1);
   G__tag_memfunc_reset();
}


/*********************************************************
* Member function information setup
*********************************************************/
extern "C" void G__cpp_setup_memfuncPatDict() {
}

/*********************************************************
* Global variable information setup for each class
*********************************************************/
static void G__cpp_setup_global0() {

   /* Setting up global variables */
   G__resetplocal();

}

static void G__cpp_setup_global1() {
}

static void G__cpp_setup_global2() {
}

static void G__cpp_setup_global3() {

   G__resetglobalenv();
}
extern "C" void G__cpp_setup_globalPatDict() {
  G__cpp_setup_global0();
  G__cpp_setup_global1();
  G__cpp_setup_global2();
  G__cpp_setup_global3();
}

/*********************************************************
* Global function information setup for each class
*********************************************************/
static void G__cpp_setup_func0() {
   G__lastifuncposition();

}

static void G__cpp_setup_func1() {
}

static void G__cpp_setup_func2() {
}

static void G__cpp_setup_func3() {
}

static void G__cpp_setup_func4() {
}

static void G__cpp_setup_func5() {
}

static void G__cpp_setup_func6() {
}

static void G__cpp_setup_func7() {
}

static void G__cpp_setup_func8() {
}

static void G__cpp_setup_func9() {
}

static void G__cpp_setup_func10() {
}

static void G__cpp_setup_func11() {
}

static void G__cpp_setup_func12() {
}

static void G__cpp_setup_func13() {
}

static void G__cpp_setup_func14() {
}

static void G__cpp_setup_func15() {
}

static void G__cpp_setup_func16() {
}

static void G__cpp_setup_func17() {
}

static void G__cpp_setup_func18() {
}

static void G__cpp_setup_func19() {
}

static void G__cpp_setup_func20() {
}

static void G__cpp_setup_func21() {
}

static void G__cpp_setup_func22() {
}

static void G__cpp_setup_func23() {
}

static void G__cpp_setup_func24() {
}

static void G__cpp_setup_func25() {
}

static void G__cpp_setup_func26() {
}

static void G__cpp_setup_func27() {
}

static void G__cpp_setup_func28() {
}

static void G__cpp_setup_func29() {
}

static void G__cpp_setup_func30() {
}

static void G__cpp_setup_func31() {
}

static void G__cpp_setup_func32() {
}

static void G__cpp_setup_func33() {
}

static void G__cpp_setup_func34() {
}

static void G__cpp_setup_func35() {
}

static void G__cpp_setup_func36() {
}

static void G__cpp_setup_func37() {
}

static void G__cpp_setup_func38() {
}

static void G__cpp_setup_func39() {

   G__resetifuncposition();
}

extern "C" void G__cpp_setup_funcPatDict() {
  G__cpp_setup_func0();
  G__cpp_setup_func1();
  G__cpp_setup_func2();
  G__cpp_setup_func3();
  G__cpp_setup_func4();
  G__cpp_setup_func5();
  G__cpp_setup_func6();
  G__cpp_setup_func7();
  G__cpp_setup_func8();
  G__cpp_setup_func9();
  G__cpp_setup_func10();
  G__cpp_setup_func11();
  G__cpp_setup_func12();
  G__cpp_setup_func13();
  G__cpp_setup_func14();
  G__cpp_setup_func15();
  G__cpp_setup_func16();
  G__cpp_setup_func17();
  G__cpp_setup_func18();
  G__cpp_setup_func19();
  G__cpp_setup_func20();
  G__cpp_setup_func21();
  G__cpp_setup_func22();
  G__cpp_setup_func23();
  G__cpp_setup_func24();
  G__cpp_setup_func25();
  G__cpp_setup_func26();
  G__cpp_setup_func27();
  G__cpp_setup_func28();
  G__cpp_setup_func29();
  G__cpp_setup_func30();
  G__cpp_setup_func31();
  G__cpp_setup_func32();
  G__cpp_setup_func33();
  G__cpp_setup_func34();
  G__cpp_setup_func35();
  G__cpp_setup_func36();
  G__cpp_setup_func37();
  G__cpp_setup_func38();
  G__cpp_setup_func39();
}

/*********************************************************
* Class,struct,union,enum tag information setup
*********************************************************/
/* Setup class/struct taginfo */
G__linked_taginfo G__PatDictLN_TClass = { "TClass" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TBuffer = { "TBuffer" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TDirectory = { "TDirectory" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TMemberInspector = { "TMemberInspector" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TObject = { "TObject" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TNamed = { "TNamed" , 99 , -1 };
G__linked_taginfo G__PatDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR = { "vector<double,allocator<double> >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_string = { "string" , 99 , -1 };
G__linked_taginfo G__PatDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR = { "vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR = { "reverse_iterator<vector<ROOT::TSchemaHelper,allocator<ROOT::TSchemaHelper> >::iterator>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR = { "vector<TVirtualArray*,allocator<TVirtualArray*> >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<TVirtualArray*,allocator<TVirtualArray*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR = { "map<string,int,less<string>,allocator<pair<const string,int> > >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR = { "map<string,float,less<string>,allocator<pair<const string,float> > >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLiterator = { "map<string,float,less<string>,allocator<pair<const string,float> > >::iterator" , 99 , -1 };
G__linked_taginfo G__PatDictLN_multimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR = { "multimap<double,int,less<double>,allocator<pair<const double,int> > >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_multimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRcLcLiterator = { "multimap<double,int,less<double>,allocator<pair<const double,int> > >::iterator" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HParticleCandidate = { "HParticleCandidate" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HParticle = { "HParticle" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HHypCandidate = { "HHypCandidate" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HNtuple = { "HNtuple" , 99 , -1 };
G__linked_taginfo G__PatDictLN_CommonDefinitions = { "CommonDefinitions" , 110 , -1 };
G__linked_taginfo G__PatDictLN_CommonDefinitionscLcLEParticle = { "CommonDefinitions::EParticle" , 101 , -1 };
G__linked_taginfo G__PatDictLN_multimaplECommonDefinitionscLcLEParticlecOHParticleCandidatemUcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOHParticleCandidatemUgRsPgRsPgR = { "multimap<CommonDefinitions::EParticle,HParticleCandidate*,less<CommonDefinitions::EParticle>,allocator<pair<const CommonDefinitions::EParticle,HParticleCandidate*> > >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_multimaplECommonDefinitionscLcLEParticlecOHParticleCandidatemUcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOHParticleCandidatemUgRsPgRsPgRcLcLiterator = { "multimap<CommonDefinitions::EParticle,HParticleCandidate*,less<CommonDefinitions::EParticle>,allocator<pair<const CommonDefinitions::EParticle,HParticleCandidate*> > >::iterator" , 99 , -1 };
G__linked_taginfo G__PatDictLN_vectorlEHParticlemUcOallocatorlEHParticlemUgRsPgR = { "vector<HParticle*,allocator<HParticle*> >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_vectorlEHParticlemUcOallocatorlEHParticlemUgRsPgRcLcLiterator = { "vector<HParticle*,allocator<HParticle*> >::iterator" , 99 , -1 };
G__linked_taginfo G__PatDictLN_reverse_iteratorlEvectorlEHParticlemUcOallocatorlEHParticlemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HParticle*,allocator<HParticle*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_maplECommonDefinitionscLcLEParticlecOintcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOintgRsPgRsPgR = { "map<CommonDefinitions::EParticle,int,less<CommonDefinitions::EParticle>,allocator<pair<const CommonDefinitions::EParticle,int> > >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_pairlECommonDefinitionscLcLEParticlecOintgR = { "pair<CommonDefinitions::EParticle,int>" , 115 , -1 };
G__linked_taginfo G__PatDictLN_multimaplEstringcOHHypCandidatemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHHypCandidatemUgRsPgRsPgR = { "multimap<string,HHypCandidate*,less<string>,allocator<pair<const string,HHypCandidate*> > >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_pairlEstringcOHHypCandidatemUgR = { "pair<string,HHypCandidate*>" , 115 , -1 };
G__linked_taginfo G__PatDictLN_multimaplEstringcOHHypCandidatemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHHypCandidatemUgRsPgRsPgRcLcLiterator = { "multimap<string,HHypCandidate*,less<string>,allocator<pair<const string,HHypCandidate*> > >::iterator" , 99 , -1 };
G__linked_taginfo G__PatDictLN_multimaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR = { "multimap<string,string,less<string>,allocator<pair<const string,string> > >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_pairlEmultimaplECommonDefinitionscLcLEParticlecOHParticleCandidatemUcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOHParticleCandidatemUgRsPgRsPgRcLcLiteratorcOmultimaplECommonDefinitionscLcLEParticlecOHParticleCandidatemUcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOHParticleCandidatemUgRsPgRsPgRcLcLiteratorgR = { "pair<multimap<CommonDefinitions::EParticle,HParticleCandidate*,less<CommonDefinitions::EParticle>,allocator<pair<const CommonDefinitions::EParticle,HParticleCandidate*> > >::iterator,multimap<CommonDefinitions::EParticle,HParticleCandidate*,less<CommonDefinitions::EParticle>,allocator<pair<const CommonDefinitions::EParticle,HParticleCandidate*> > >::iterator>" , 115 , -1 };
G__linked_taginfo G__PatDictLN_pairlEmultimaplEstringcOHHypCandidatemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHHypCandidatemUgRsPgRsPgRcLcLiteratorcOmultimaplEstringcOHHypCandidatemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHHypCandidatemUgRsPgRsPgRcLcLiteratorgR = { "pair<multimap<string,HHypCandidate*,less<string>,allocator<pair<const string,HHypCandidate*> > >::iterator,multimap<string,HHypCandidate*,less<string>,allocator<pair<const string,HHypCandidate*> > >::iterator>" , 115 , -1 };
G__linked_taginfo G__PatDictLN_vectorlECommonDefinitionscLcLEParticlecOallocatorlECommonDefinitionscLcLEParticlegRsPgR = { "vector<CommonDefinitions::EParticle,allocator<CommonDefinitions::EParticle> >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_reverse_iteratorlEvectorlECommonDefinitionscLcLEParticlecOallocatorlECommonDefinitionscLcLEParticlegRsPgRcLcLiteratorgR = { "reverse_iterator<vector<CommonDefinitions::EParticle,allocator<CommonDefinitions::EParticle> >::iterator>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR = { "iterator<bidirectional_iterator_tag,TObject*,long,const TObject**,const TObject*&>" , 115 , -1 };
G__linked_taginfo G__PatDictLN_TFile = { "TFile" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TVectorTlEfloatgR = { "TVectorT<float>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TVectorTlEdoublegR = { "TVectorT<double>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TH1 = { "TH1" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TCutG = { "TCutG" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HReconstructor = { "HReconstructor" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HCut = { "HCut" , 99 , -1 };
G__linked_taginfo G__PatDictLN_listlETFilemUcOallocatorlETFilemUgRsPgR = { "list<TFile*,allocator<TFile*> >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_listlETFilemUcOallocatorlETFilemUgRsPgRcLcLiterator = { "list<TFile*,allocator<TFile*> >::iterator" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HPidHitData = { "HPidHitData" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HPidTrackData = { "HPidTrackData" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HCategory = { "HCategory" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HPidTrackCand = { "HPidTrackCand" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HTrackCut = { "HTrackCut" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TMatrixTBaselEfloatgR = { "TMatrixTBase<float>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TMatrixTBaselEdoublegR = { "TMatrixTBase<double>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TElementActionTlEfloatgR = { "TElementActionT<float>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TElementPosActionTlEfloatgR = { "TElementPosActionT<float>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TMatrixTlEfloatgR = { "TMatrixT<float>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TMatrixTRow_constlEfloatgR = { "TMatrixTRow_const<float>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TMatrixTRowlEfloatgR = { "TMatrixTRow<float>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TMatrixTDiag_constlEfloatgR = { "TMatrixTDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TMatrixTColumn_constlEfloatgR = { "TMatrixTColumn_const<float>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TMatrixTFlat_constlEfloatgR = { "TMatrixTFlat_const<float>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TMatrixTSub_constlEfloatgR = { "TMatrixTSub_const<float>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TMatrixTSparseRow_constlEfloatgR = { "TMatrixTSparseRow_const<float>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TMatrixTSparseDiag_constlEfloatgR = { "TMatrixTSparseDiag_const<float>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TMatrixTColumnlEfloatgR = { "TMatrixTColumn<float>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TMatrixTDiaglEfloatgR = { "TMatrixTDiag<float>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TMatrixTFlatlEfloatgR = { "TMatrixTFlat<float>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TMatrixTSublEfloatgR = { "TMatrixTSub<float>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TMatrixTSparseRowlEfloatgR = { "TMatrixTSparseRow<float>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TMatrixTSparseDiaglEfloatgR = { "TMatrixTSparseDiag<float>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TVector3 = { "TVector3" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TLorentzVector = { "TLorentzVector" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HIterator = { "HIterator" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TTree = { "TTree" , 99 , -1 };
G__linked_taginfo G__PatDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR = { "map<string,TObjArray*,less<string>,allocator<pair<const string,TObjArray*> > >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_TNtuple = { "TNtuple" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HFile = { "HFile" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HOutputFile = { "HOutputFile" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HOutput = { "HOutput" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HPattern = { "HPattern" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HEventPool = { "HEventPool" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HPool = { "HPool" , 99 , -1 };
G__linked_taginfo G__PatDictLN_listlEHPatternmUcOallocatorlEHPatternmUgRsPgR = { "list<HPattern*,allocator<HPattern*> >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_listlEHPatternmUcOallocatorlEHPatternmUgRsPgRcLcLiterator = { "list<HPattern*,allocator<HPattern*> >::iterator" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HParticleDataPool = { "HParticleDataPool" , 99 , -1 };
G__linked_taginfo G__PatDictLN_vectorlEFWPadmUcOallocatorlEFWPadmUgRsPgR = { "vector<FWPad*,allocator<FWPad*> >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_reverse_iteratorlEvectorlEFWPadmUcOallocatorlEFWPadmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<FWPad*,allocator<FWPad*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_vectorlEFWSingleHitmUcOallocatorlEFWSingleHitmUgRsPgR = { "vector<FWSingleHit*,allocator<FWSingleHit*> >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_reverse_iteratorlEvectorlEFWSingleHitmUcOallocatorlEFWSingleHitmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<FWSingleHit*,allocator<FWSingleHit*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_FWHit = { "FWHit" , 99 , -1 };
G__linked_taginfo G__PatDictLN_vectorlEFWClusterHitmUcOallocatorlEFWClusterHitmUgRsPgR = { "vector<FWClusterHit*,allocator<FWClusterHit*> >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_reverse_iteratorlEvectorlEFWClusterHitmUcOallocatorlEFWClusterHitmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<FWClusterHit*,allocator<FWClusterHit*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HParticlePool = { "HParticlePool" , 99 , -1 };
G__linked_taginfo G__PatDictLN_vectorlEpairlECommonDefinitionscLcLEParticlecOintgRcOallocatorlEpairlECommonDefinitionscLcLEParticlecOintgRsPgRsPgR = { "vector<pair<CommonDefinitions::EParticle,int>,allocator<pair<CommonDefinitions::EParticle,int> > >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_vectorlEpairlECommonDefinitionscLcLEParticlecOintgRcOallocatorlEpairlECommonDefinitionscLcLEParticlecOintgRsPgRsPgRcLcLiterator = { "vector<pair<CommonDefinitions::EParticle,int>,allocator<pair<CommonDefinitions::EParticle,int> > >::iterator" , 99 , -1 };
G__linked_taginfo G__PatDictLN_reverse_iteratorlEvectorlEpairlECommonDefinitionscLcLEParticlecOintgRcOallocatorlEpairlECommonDefinitionscLcLEParticlecOintgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<pair<CommonDefinitions::EParticle,int>,allocator<pair<CommonDefinitions::EParticle,int> > >::iterator>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HTimeCut = { "HTimeCut" , 99 , -1 };
G__linked_taginfo G__PatDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR = { "vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<double,allocator<double> >,allocator<vector<double,allocator<double> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_maplEintcOmultimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmultimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRsPgRsPgRsPgR = { "map<int,multimap<double,int,less<double>,allocator<pair<const double,int> > >,less<int>,allocator<pair<const int,multimap<double,int,less<double>,allocator<pair<const double,int> > > > > >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_maplEintcOmultimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmultimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRsPgRsPgRsPgRcLcLiterator = { "map<int,multimap<double,int,less<double>,allocator<pair<const double,int> > >,less<int>,allocator<pair<const int,multimap<double,int,less<double>,allocator<pair<const double,int> > > > > >::iterator" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HGraphCut = { "HGraphCut" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HDedxCut = { "HDedxCut" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HParticlePlayerHandle = { "HParticlePlayerHandle" , 99 , -1 };
G__linked_taginfo G__PatDictLN_vectorlEintcOallocatorlEintgRsPgR = { "vector<int,allocator<int> >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<int,allocator<int> >::iterator>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR = { "vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >::iterator>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_maplEintcOvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRsPgRsPgR = { "map<int,vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > >,less<int>,allocator<pair<const int,vector<vector<int,allocator<int> >,allocator<vector<int,allocator<int> > > > > > >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HHypDataPool = { "HHypDataPool" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HHypPool = { "HHypPool" , 99 , -1 };
G__linked_taginfo G__PatDictLN_vectorlEHHypCandidatemUcOallocatorlEHHypCandidatemUgRsPgR = { "vector<HHypCandidate*,allocator<HHypCandidate*> >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_vectorlEHHypCandidatemUcOallocatorlEHHypCandidatemUgRsPgRcLcLiterator = { "vector<HHypCandidate*,allocator<HHypCandidate*> >::iterator" , 99 , -1 };
G__linked_taginfo G__PatDictLN_reverse_iteratorlEvectorlEHHypCandidatemUcOallocatorlEHHypCandidatemUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HHypCandidate*,allocator<HHypCandidate*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_auto_ptrlEHParticlePlayerHandlegR = { "auto_ptr<HParticlePlayerHandle>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HPidPool = { "HPidPool" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HTask = { "HTask" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HTrackPlayer = { "HTrackPlayer" , 99 , -1 };
G__linked_taginfo G__PatDictLN_vectorlEHCutmUcOallocatorlEHCutmUgRsPgR = { "vector<HCut*,allocator<HCut*> >" , 99 , -1 };
G__linked_taginfo G__PatDictLN_vectorlEHCutmUcOallocatorlEHCutmUgRsPgRcLcLiterator = { "vector<HCut*,allocator<HCut*> >::iterator" , 99 , -1 };
G__linked_taginfo G__PatDictLN_reverse_iteratorlEvectorlEHCutmUcOallocatorlEHCutmUgRsPgRcLcLiteratorgR = { "reverse_iterator<vector<HCut*,allocator<HCut*> >::iterator>" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HParticlePlayer = { "HParticlePlayer" , 99 , -1 };
G__linked_taginfo G__PatDictLN_HHypPlayer = { "HHypPlayer" , 99 , -1 };

/* Reset class/struct taginfo */
extern "C" void G__cpp_reset_tagtablePatDict() {
  G__PatDictLN_TClass.tagnum = -1 ;
  G__PatDictLN_TBuffer.tagnum = -1 ;
  G__PatDictLN_TDirectory.tagnum = -1 ;
  G__PatDictLN_TMemberInspector.tagnum = -1 ;
  G__PatDictLN_TObject.tagnum = -1 ;
  G__PatDictLN_TNamed.tagnum = -1 ;
  G__PatDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR.tagnum = -1 ;
  G__PatDictLN_string.tagnum = -1 ;
  G__PatDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR.tagnum = -1 ;
  G__PatDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PatDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR.tagnum = -1 ;
  G__PatDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PatDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR.tagnum = -1 ;
  G__PatDictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR.tagnum = -1 ;
  G__PatDictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__PatDictLN_multimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR.tagnum = -1 ;
  G__PatDictLN_multimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__PatDictLN_HParticleCandidate.tagnum = -1 ;
  G__PatDictLN_HParticle.tagnum = -1 ;
  G__PatDictLN_HHypCandidate.tagnum = -1 ;
  G__PatDictLN_HNtuple.tagnum = -1 ;
  G__PatDictLN_CommonDefinitions.tagnum = -1 ;
  G__PatDictLN_CommonDefinitionscLcLEParticle.tagnum = -1 ;
  G__PatDictLN_multimaplECommonDefinitionscLcLEParticlecOHParticleCandidatemUcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOHParticleCandidatemUgRsPgRsPgR.tagnum = -1 ;
  G__PatDictLN_multimaplECommonDefinitionscLcLEParticlecOHParticleCandidatemUcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOHParticleCandidatemUgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__PatDictLN_vectorlEHParticlemUcOallocatorlEHParticlemUgRsPgR.tagnum = -1 ;
  G__PatDictLN_vectorlEHParticlemUcOallocatorlEHParticlemUgRsPgRcLcLiterator.tagnum = -1 ;
  G__PatDictLN_reverse_iteratorlEvectorlEHParticlemUcOallocatorlEHParticlemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PatDictLN_maplECommonDefinitionscLcLEParticlecOintcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOintgRsPgRsPgR.tagnum = -1 ;
  G__PatDictLN_pairlECommonDefinitionscLcLEParticlecOintgR.tagnum = -1 ;
  G__PatDictLN_multimaplEstringcOHHypCandidatemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHHypCandidatemUgRsPgRsPgR.tagnum = -1 ;
  G__PatDictLN_pairlEstringcOHHypCandidatemUgR.tagnum = -1 ;
  G__PatDictLN_multimaplEstringcOHHypCandidatemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHHypCandidatemUgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__PatDictLN_multimaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR.tagnum = -1 ;
  G__PatDictLN_pairlEmultimaplECommonDefinitionscLcLEParticlecOHParticleCandidatemUcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOHParticleCandidatemUgRsPgRsPgRcLcLiteratorcOmultimaplECommonDefinitionscLcLEParticlecOHParticleCandidatemUcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOHParticleCandidatemUgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PatDictLN_pairlEmultimaplEstringcOHHypCandidatemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHHypCandidatemUgRsPgRsPgRcLcLiteratorcOmultimaplEstringcOHHypCandidatemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHHypCandidatemUgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PatDictLN_vectorlECommonDefinitionscLcLEParticlecOallocatorlECommonDefinitionscLcLEParticlegRsPgR.tagnum = -1 ;
  G__PatDictLN_reverse_iteratorlEvectorlECommonDefinitionscLcLEParticlecOallocatorlECommonDefinitionscLcLEParticlegRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PatDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR.tagnum = -1 ;
  G__PatDictLN_TFile.tagnum = -1 ;
  G__PatDictLN_TVectorTlEfloatgR.tagnum = -1 ;
  G__PatDictLN_TVectorTlEdoublegR.tagnum = -1 ;
  G__PatDictLN_TH1.tagnum = -1 ;
  G__PatDictLN_TCutG.tagnum = -1 ;
  G__PatDictLN_HReconstructor.tagnum = -1 ;
  G__PatDictLN_HCut.tagnum = -1 ;
  G__PatDictLN_listlETFilemUcOallocatorlETFilemUgRsPgR.tagnum = -1 ;
  G__PatDictLN_listlETFilemUcOallocatorlETFilemUgRsPgRcLcLiterator.tagnum = -1 ;
  G__PatDictLN_HPidHitData.tagnum = -1 ;
  G__PatDictLN_HPidTrackData.tagnum = -1 ;
  G__PatDictLN_HCategory.tagnum = -1 ;
  G__PatDictLN_HPidTrackCand.tagnum = -1 ;
  G__PatDictLN_HTrackCut.tagnum = -1 ;
  G__PatDictLN_TMatrixTBaselEfloatgR.tagnum = -1 ;
  G__PatDictLN_TMatrixTBaselEdoublegR.tagnum = -1 ;
  G__PatDictLN_TElementActionTlEfloatgR.tagnum = -1 ;
  G__PatDictLN_TElementPosActionTlEfloatgR.tagnum = -1 ;
  G__PatDictLN_TMatrixTlEfloatgR.tagnum = -1 ;
  G__PatDictLN_TMatrixTRow_constlEfloatgR.tagnum = -1 ;
  G__PatDictLN_TMatrixTRowlEfloatgR.tagnum = -1 ;
  G__PatDictLN_TMatrixTDiag_constlEfloatgR.tagnum = -1 ;
  G__PatDictLN_TMatrixTColumn_constlEfloatgR.tagnum = -1 ;
  G__PatDictLN_TMatrixTFlat_constlEfloatgR.tagnum = -1 ;
  G__PatDictLN_TMatrixTSub_constlEfloatgR.tagnum = -1 ;
  G__PatDictLN_TMatrixTSparseRow_constlEfloatgR.tagnum = -1 ;
  G__PatDictLN_TMatrixTSparseDiag_constlEfloatgR.tagnum = -1 ;
  G__PatDictLN_TMatrixTColumnlEfloatgR.tagnum = -1 ;
  G__PatDictLN_TMatrixTDiaglEfloatgR.tagnum = -1 ;
  G__PatDictLN_TMatrixTFlatlEfloatgR.tagnum = -1 ;
  G__PatDictLN_TMatrixTSublEfloatgR.tagnum = -1 ;
  G__PatDictLN_TMatrixTSparseRowlEfloatgR.tagnum = -1 ;
  G__PatDictLN_TMatrixTSparseDiaglEfloatgR.tagnum = -1 ;
  G__PatDictLN_TVector3.tagnum = -1 ;
  G__PatDictLN_TLorentzVector.tagnum = -1 ;
  G__PatDictLN_HIterator.tagnum = -1 ;
  G__PatDictLN_TTree.tagnum = -1 ;
  G__PatDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR.tagnum = -1 ;
  G__PatDictLN_TNtuple.tagnum = -1 ;
  G__PatDictLN_HFile.tagnum = -1 ;
  G__PatDictLN_HOutputFile.tagnum = -1 ;
  G__PatDictLN_HOutput.tagnum = -1 ;
  G__PatDictLN_HPattern.tagnum = -1 ;
  G__PatDictLN_HEventPool.tagnum = -1 ;
  G__PatDictLN_HPool.tagnum = -1 ;
  G__PatDictLN_listlEHPatternmUcOallocatorlEHPatternmUgRsPgR.tagnum = -1 ;
  G__PatDictLN_listlEHPatternmUcOallocatorlEHPatternmUgRsPgRcLcLiterator.tagnum = -1 ;
  G__PatDictLN_HParticleDataPool.tagnum = -1 ;
  G__PatDictLN_vectorlEFWPadmUcOallocatorlEFWPadmUgRsPgR.tagnum = -1 ;
  G__PatDictLN_reverse_iteratorlEvectorlEFWPadmUcOallocatorlEFWPadmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PatDictLN_vectorlEFWSingleHitmUcOallocatorlEFWSingleHitmUgRsPgR.tagnum = -1 ;
  G__PatDictLN_reverse_iteratorlEvectorlEFWSingleHitmUcOallocatorlEFWSingleHitmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PatDictLN_FWHit.tagnum = -1 ;
  G__PatDictLN_vectorlEFWClusterHitmUcOallocatorlEFWClusterHitmUgRsPgR.tagnum = -1 ;
  G__PatDictLN_reverse_iteratorlEvectorlEFWClusterHitmUcOallocatorlEFWClusterHitmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PatDictLN_HParticlePool.tagnum = -1 ;
  G__PatDictLN_vectorlEpairlECommonDefinitionscLcLEParticlecOintgRcOallocatorlEpairlECommonDefinitionscLcLEParticlecOintgRsPgRsPgR.tagnum = -1 ;
  G__PatDictLN_vectorlEpairlECommonDefinitionscLcLEParticlecOintgRcOallocatorlEpairlECommonDefinitionscLcLEParticlecOintgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__PatDictLN_reverse_iteratorlEvectorlEpairlECommonDefinitionscLcLEParticlecOintgRcOallocatorlEpairlECommonDefinitionscLcLEParticlecOintgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PatDictLN_HTimeCut.tagnum = -1 ;
  G__PatDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR.tagnum = -1 ;
  G__PatDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PatDictLN_maplEintcOmultimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmultimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__PatDictLN_maplEintcOmultimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmultimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRsPgRsPgRsPgRcLcLiterator.tagnum = -1 ;
  G__PatDictLN_HGraphCut.tagnum = -1 ;
  G__PatDictLN_HDedxCut.tagnum = -1 ;
  G__PatDictLN_HParticlePlayerHandle.tagnum = -1 ;
  G__PatDictLN_vectorlEintcOallocatorlEintgRsPgR.tagnum = -1 ;
  G__PatDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PatDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR.tagnum = -1 ;
  G__PatDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PatDictLN_maplEintcOvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRsPgRsPgR.tagnum = -1 ;
  G__PatDictLN_HHypDataPool.tagnum = -1 ;
  G__PatDictLN_HHypPool.tagnum = -1 ;
  G__PatDictLN_vectorlEHHypCandidatemUcOallocatorlEHHypCandidatemUgRsPgR.tagnum = -1 ;
  G__PatDictLN_vectorlEHHypCandidatemUcOallocatorlEHHypCandidatemUgRsPgRcLcLiterator.tagnum = -1 ;
  G__PatDictLN_reverse_iteratorlEvectorlEHHypCandidatemUcOallocatorlEHHypCandidatemUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PatDictLN_auto_ptrlEHParticlePlayerHandlegR.tagnum = -1 ;
  G__PatDictLN_HPidPool.tagnum = -1 ;
  G__PatDictLN_HTask.tagnum = -1 ;
  G__PatDictLN_HTrackPlayer.tagnum = -1 ;
  G__PatDictLN_vectorlEHCutmUcOallocatorlEHCutmUgRsPgR.tagnum = -1 ;
  G__PatDictLN_vectorlEHCutmUcOallocatorlEHCutmUgRsPgRcLcLiterator.tagnum = -1 ;
  G__PatDictLN_reverse_iteratorlEvectorlEHCutmUcOallocatorlEHCutmUgRsPgRcLcLiteratorgR.tagnum = -1 ;
  G__PatDictLN_HParticlePlayer.tagnum = -1 ;
  G__PatDictLN_HHypPlayer.tagnum = -1 ;
}


extern "C" void G__cpp_setup_tagtablePatDict() {

   /* Setting up class,struct,union tag entry */
   G__get_linked_tagnum_fwd(&G__PatDictLN_TClass);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TBuffer);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TDirectory);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TMemberInspector);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TObject);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TNamed);
   G__get_linked_tagnum_fwd(&G__PatDictLN_vectorlEdoublecOallocatorlEdoublegRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_string);
   G__get_linked_tagnum_fwd(&G__PatDictLN_vectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_reverse_iteratorlEvectorlEROOTcLcLTSchemaHelpercOallocatorlEROOTcLcLTSchemaHelpergRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_vectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_reverse_iteratorlEvectorlETVirtualArraymUcOallocatorlETVirtualArraymUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_maplEstringcOintcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_maplEstringcOfloatcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOfloatgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__PatDictLN_multimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_multimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PatDictLN_HParticleCandidate),sizeof(HParticleCandidate),-1,33792,(char*)NULL,G__setup_memvarHParticleCandidate,G__setup_memfuncHParticleCandidate);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PatDictLN_HParticle),sizeof(HParticle),-1,33792,(char*)NULL,G__setup_memvarHParticle,G__setup_memfuncHParticle);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PatDictLN_HHypCandidate),sizeof(HHypCandidate),-1,62464,(char*)NULL,G__setup_memvarHHypCandidate,G__setup_memfuncHHypCandidate);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PatDictLN_HNtuple),sizeof(HNtuple),-1,64768,(char*)NULL,G__setup_memvarHNtuple,G__setup_memfuncHNtuple);
   G__get_linked_tagnum_fwd(&G__PatDictLN_CommonDefinitions);
   G__get_linked_tagnum_fwd(&G__PatDictLN_CommonDefinitionscLcLEParticle);
   G__get_linked_tagnum_fwd(&G__PatDictLN_multimaplECommonDefinitionscLcLEParticlecOHParticleCandidatemUcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOHParticleCandidatemUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_multimaplECommonDefinitionscLcLEParticlecOHParticleCandidatemUcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOHParticleCandidatemUgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__PatDictLN_vectorlEHParticlemUcOallocatorlEHParticlemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_vectorlEHParticlemUcOallocatorlEHParticlemUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__PatDictLN_reverse_iteratorlEvectorlEHParticlemUcOallocatorlEHParticlemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_maplECommonDefinitionscLcLEParticlecOintcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_pairlECommonDefinitionscLcLEParticlecOintgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_multimaplEstringcOHHypCandidatemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHHypCandidatemUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_pairlEstringcOHHypCandidatemUgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_multimaplEstringcOHHypCandidatemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHHypCandidatemUgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__PatDictLN_multimaplEstringcOstringcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOstringgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_pairlEmultimaplECommonDefinitionscLcLEParticlecOHParticleCandidatemUcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOHParticleCandidatemUgRsPgRsPgRcLcLiteratorcOmultimaplECommonDefinitionscLcLEParticlecOHParticleCandidatemUcOlesslECommonDefinitionscLcLEParticlegRcOallocatorlEpairlEconstsPCommonDefinitionscLcLEParticlecOHParticleCandidatemUgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_pairlEmultimaplEstringcOHHypCandidatemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHHypCandidatemUgRsPgRsPgRcLcLiteratorcOmultimaplEstringcOHHypCandidatemUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOHHypCandidatemUgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_vectorlECommonDefinitionscLcLEParticlecOallocatorlECommonDefinitionscLcLEParticlegRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_reverse_iteratorlEvectorlECommonDefinitionscLcLEParticlecOallocatorlECommonDefinitionscLcLEParticlegRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_iteratorlEbidirectional_iterator_tagcOTObjectmUcOlongcOconstsPTObjectmUmUcOconstsPTObjectmUaNgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TFile);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TVectorTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TVectorTlEdoublegR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TH1);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TCutG);
   G__get_linked_tagnum_fwd(&G__PatDictLN_HReconstructor);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PatDictLN_HCut),sizeof(HCut),-1,33793,(char*)NULL,G__setup_memvarHCut,G__setup_memfuncHCut);
   G__get_linked_tagnum_fwd(&G__PatDictLN_listlETFilemUcOallocatorlETFilemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_listlETFilemUcOallocatorlETFilemUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__PatDictLN_HPidHitData);
   G__get_linked_tagnum_fwd(&G__PatDictLN_HPidTrackData);
   G__get_linked_tagnum_fwd(&G__PatDictLN_HCategory);
   G__get_linked_tagnum_fwd(&G__PatDictLN_HPidTrackCand);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PatDictLN_HTrackCut),sizeof(HTrackCut),-1,33792,(char*)NULL,G__setup_memvarHTrackCut,G__setup_memfuncHTrackCut);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TMatrixTBaselEfloatgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TMatrixTBaselEdoublegR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TElementActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TElementPosActionTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TMatrixTlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TMatrixTRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TMatrixTRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TMatrixTDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TMatrixTColumn_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TMatrixTFlat_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TMatrixTSub_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TMatrixTSparseRow_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TMatrixTSparseDiag_constlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TMatrixTColumnlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TMatrixTDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TMatrixTFlatlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TMatrixTSublEfloatgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TMatrixTSparseRowlEfloatgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TMatrixTSparseDiaglEfloatgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TVector3);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TLorentzVector);
   G__get_linked_tagnum_fwd(&G__PatDictLN_HIterator);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TTree);
   G__get_linked_tagnum_fwd(&G__PatDictLN_maplEstringcOTObjArraymUcOlesslEstringgRcOallocatorlEpairlEconstsPstringcOTObjArraymUgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_TNtuple);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PatDictLN_HFile),sizeof(HFile),-1,1284,(char*)NULL,G__setup_memvarHFile,G__setup_memfuncHFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PatDictLN_HOutputFile),sizeof(HOutputFile),-1,1280,(char*)NULL,G__setup_memvarHOutputFile,G__setup_memfuncHOutputFile);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PatDictLN_HOutput),sizeof(HOutput),-1,33792,(char*)NULL,G__setup_memvarHOutput,G__setup_memfuncHOutput);
   G__get_linked_tagnum_fwd(&G__PatDictLN_HPattern);
   G__get_linked_tagnum_fwd(&G__PatDictLN_HEventPool);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PatDictLN_HPool),sizeof(HPool),-1,1281,(char*)NULL,G__setup_memvarHPool,G__setup_memfuncHPool);
   G__get_linked_tagnum_fwd(&G__PatDictLN_listlEHPatternmUcOallocatorlEHPatternmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_listlEHPatternmUcOallocatorlEHPatternmUgRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PatDictLN_HParticleDataPool),sizeof(HParticleDataPool),-1,1281,(char*)NULL,G__setup_memvarHParticleDataPool,G__setup_memfuncHParticleDataPool);
   G__get_linked_tagnum_fwd(&G__PatDictLN_vectorlEFWPadmUcOallocatorlEFWPadmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_reverse_iteratorlEvectorlEFWPadmUcOallocatorlEFWPadmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_vectorlEFWSingleHitmUcOallocatorlEFWSingleHitmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_reverse_iteratorlEvectorlEFWSingleHitmUcOallocatorlEFWSingleHitmUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_FWHit);
   G__get_linked_tagnum_fwd(&G__PatDictLN_vectorlEFWClusterHitmUcOallocatorlEFWClusterHitmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_reverse_iteratorlEvectorlEFWClusterHitmUcOallocatorlEFWClusterHitmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PatDictLN_HParticlePool),sizeof(HParticlePool),-1,1281,(char*)NULL,G__setup_memvarHParticlePool,G__setup_memfuncHParticlePool);
   G__get_linked_tagnum_fwd(&G__PatDictLN_vectorlEpairlECommonDefinitionscLcLEParticlecOintgRcOallocatorlEpairlECommonDefinitionscLcLEParticlecOintgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_vectorlEpairlECommonDefinitionscLcLEParticlecOintgRcOallocatorlEpairlECommonDefinitionscLcLEParticlecOintgRsPgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__PatDictLN_reverse_iteratorlEvectorlEpairlECommonDefinitionscLcLEParticlecOintgRcOallocatorlEpairlECommonDefinitionscLcLEParticlecOintgRsPgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PatDictLN_HTimeCut),sizeof(HTimeCut),-1,33792,(char*)NULL,G__setup_memvarHTimeCut,G__setup_memfuncHTimeCut);
   G__get_linked_tagnum_fwd(&G__PatDictLN_vectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_reverse_iteratorlEvectorlEvectorlEdoublecOallocatorlEdoublegRsPgRcOallocatorlEvectorlEdoublecOallocatorlEdoublegRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_maplEintcOmultimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmultimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_maplEintcOmultimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOmultimaplEdoublecOintcOlesslEdoublegRcOallocatorlEpairlEconstsPdoublecOintgRsPgRsPgRsPgRsPgRsPgRcLcLiterator);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PatDictLN_HGraphCut),sizeof(HGraphCut),-1,33792,(char*)NULL,G__setup_memvarHGraphCut,G__setup_memfuncHGraphCut);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PatDictLN_HDedxCut),sizeof(HDedxCut),-1,33792,(char*)NULL,G__setup_memvarHDedxCut,G__setup_memfuncHDedxCut);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PatDictLN_HParticlePlayerHandle),sizeof(HParticlePlayerHandle),-1,256,(char*)NULL,G__setup_memvarHParticlePlayerHandle,G__setup_memfuncHParticlePlayerHandle);
   G__get_linked_tagnum_fwd(&G__PatDictLN_vectorlEintcOallocatorlEintgRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_reverse_iteratorlEvectorlEintcOallocatorlEintgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_vectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_reverse_iteratorlEvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_maplEintcOvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRcOlesslEintgRcOallocatorlEpairlEconstsPintcOvectorlEvectorlEintcOallocatorlEintgRsPgRcOallocatorlEvectorlEintcOallocatorlEintgRsPgRsPgRsPgRsPgRsPgRsPgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PatDictLN_HHypDataPool),sizeof(HHypDataPool),-1,1281,(char*)NULL,G__setup_memvarHHypDataPool,G__setup_memfuncHHypDataPool);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PatDictLN_HHypPool),sizeof(HHypPool),-1,1281,(char*)NULL,G__setup_memvarHHypPool,G__setup_memfuncHHypPool);
   G__get_linked_tagnum_fwd(&G__PatDictLN_vectorlEHHypCandidatemUcOallocatorlEHHypCandidatemUgRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_vectorlEHHypCandidatemUcOallocatorlEHHypCandidatemUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__PatDictLN_reverse_iteratorlEvectorlEHHypCandidatemUcOallocatorlEHHypCandidatemUgRsPgRcLcLiteratorgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_auto_ptrlEHParticlePlayerHandlegR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PatDictLN_HPidPool),sizeof(HPidPool),-1,1281,(char*)NULL,G__setup_memvarHPidPool,G__setup_memfuncHPidPool);
   G__get_linked_tagnum_fwd(&G__PatDictLN_HTask);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PatDictLN_HTrackPlayer),sizeof(HTrackPlayer),-1,62464,"Fills HParticlePool with all particle candidates",G__setup_memvarHTrackPlayer,G__setup_memfuncHTrackPlayer);
   G__get_linked_tagnum_fwd(&G__PatDictLN_vectorlEHCutmUcOallocatorlEHCutmUgRsPgR);
   G__get_linked_tagnum_fwd(&G__PatDictLN_vectorlEHCutmUcOallocatorlEHCutmUgRsPgRcLcLiterator);
   G__get_linked_tagnum_fwd(&G__PatDictLN_reverse_iteratorlEvectorlEHCutmUcOallocatorlEHCutmUgRsPgRcLcLiteratorgR);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PatDictLN_HParticlePlayer),sizeof(HParticlePlayer),-1,62464,"Fills the HypList with all possible particle combinations",G__setup_memvarHParticlePlayer,G__setup_memfuncHParticlePlayer);
   G__tagtable_setup(G__get_linked_tagnum_fwd(&G__PatDictLN_HHypPlayer),sizeof(HHypPlayer),-1,62464,"Fills the HypList with all possible particle combinations",G__setup_memvarHHypPlayer,G__setup_memfuncHHypPlayer);
}
extern "C" void G__cpp_setupPatDict(void) {
  G__check_setup_version(30051515,"G__cpp_setupPatDict()");
  G__set_cpp_environmentPatDict();
  G__cpp_setup_tagtablePatDict();

  G__cpp_setup_inheritancePatDict();

  G__cpp_setup_typetablePatDict();

  G__cpp_setup_memvarPatDict();

  G__cpp_setup_memfuncPatDict();
  G__cpp_setup_globalPatDict();
  G__cpp_setup_funcPatDict();

   if(0==G__getsizep2memfunc()) G__get_sizep2memfuncPatDict();
  return;
}
class G__cpp_setup_initPatDict {
  public:
    G__cpp_setup_initPatDict() { G__add_setup_func("PatDict",(G__incsetup)(&G__cpp_setupPatDict)); G__call_setup_funcs(); }
   ~G__cpp_setup_initPatDict() { G__remove_setup_func("PatDict"); }
};
G__cpp_setup_initPatDict G__cpp_setup_initializerPatDict;

